!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/madhav/workspace/timestone-internal/benchmark/versioning/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	//
$(INCLUDE_DIR_TS)	swisstm/Makefile	/^$(INCLUDE_DIR_TS):$/;"	t
$(INCLUDE_OUT_FILE)	swisstm/Makefile	/^$(INCLUDE_OUT_FILE): $(INCLUDE_DIR_TS)$/;"	t
$(LIB_DIR)/libwlpdstm.a	swisstm/Makefile	/^$(LIB_DIR)\/libwlpdstm.a: $(LIB_DIR_TS) $(OBJFILES)$/;"	t
$(LIB_DIR_TS)	swisstm/Makefile	/^$(LIB_DIR_TS):$/;"	t
$(OBJ_DIR)/eager.o	swisstm/Makefile	/^$(OBJ_DIR)\/eager.o: $(OBJ_DIR_TS) $(DYNAMIC_SRC_DIR)\/eager\/eager.cc $(DYNAMIC_SRC_DIR)\/eager/;"	t
$(OBJ_DIR)/intset-list	swisstm/Makefile	/^$(OBJ_DIR)\/intset-list: $(OBJ_DIR_TS) $(LIB_DIR)\/libwlpdstm.a $(OBJ_DIR)\/intset-list.o$/;"	t
$(OBJ_DIR)/intset-list-mv	swisstm/Makefile	/^$(OBJ_DIR)\/intset-list-mv: $(OBJ_DIR_TS) $(LIB_DIR)\/libwlpdstm.a $(OBJ_DIR)\/intset-list-mv.o$/;"	t
$(OBJ_DIR)/intset-list-mv.o	swisstm/Makefile	/^$(OBJ_DIR)\/intset-list-mv.o: $(OBJ_DIR_TS) $(MUBENCH_SRC_DIR)\/intset-list-mv.c $(INCLUDE_OUT_F/;"	t
$(OBJ_DIR)/intset-list.o	swisstm/Makefile	/^$(OBJ_DIR)\/intset-list.o: $(OBJ_DIR_TS) $(MUBENCH_SRC_DIR)\/intset-rbtree.c $(INCLUDE_OUT_FILE)$/;"	t
$(OBJ_DIR)/intset-rbtree	swisstm/Makefile	/^$(OBJ_DIR)\/intset-rbtree: $(OBJ_DIR_TS) $(LIB_DIR)\/libwlpdstm.a $(MUBENCH_RBTREE_OBJFILES)$/;"	t
$(OBJ_DIR)/intset-rbtree.o	swisstm/Makefile	/^$(OBJ_DIR)\/intset-rbtree.o: $(OBJ_DIR_TS) $(MUBENCH_SRC_DIR)\/intset-rbtree.c $(INCLUDE_OUT_FIL/;"	t
$(OBJ_DIR)/intset-tree	swisstm/Makefile	/^$(OBJ_DIR)\/intset-tree: $(OBJ_DIR_TS) $(LIB_DIR)\/libwlpdstm.a $(OBJ_DIR)\/intset-tree.o$/;"	t
$(OBJ_DIR)/intset-tree.o	swisstm/Makefile	/^$(OBJ_DIR)\/intset-tree.o: $(OBJ_DIR_TS) $(MUBENCH_SRC_DIR)\/intset-rbtree.c $(INCLUDE_OUT_FILE)$/;"	t
$(OBJ_DIR)/lazy.o	swisstm/Makefile	/^$(OBJ_DIR)\/lazy.o: $(OBJ_DIR_TS) $(DYNAMIC_SRC_DIR)\/lazy\/lazy.cc $(DYNAMIC_SRC_DIR)\/lazy\/la/;"	t
$(OBJ_DIR)/mixed.o	swisstm/Makefile	/^$(OBJ_DIR)\/mixed.o: $(OBJ_DIR_TS) $(DYNAMIC_SRC_DIR)\/mixed\/mixed.cc $(DYNAMIC_SRC_DIR)\/mixed/;"	t
$(OBJ_DIR)/privatization_tree.o	swisstm/Makefile	/^$(OBJ_DIR)\/privatization_tree.o: $(OBJ_DIR_TS) $(STM_SRC_DIR)\/privatization_tree.cc $(STM_SRC_/;"	t
$(OBJ_DIR)/rbforest	swisstm/Makefile	/^$(OBJ_DIR)\/rbforest: $(OBJ_DIR_TS) $(LIB_DIR)\/libwlpdstm.a $(MUBENCH_RBFOREST_OBJFILES)$/;"	t
$(OBJ_DIR)/rbforest.o	swisstm/Makefile	/^$(OBJ_DIR)\/rbforest.o: $(OBJ_DIR_TS) $(OBJ_DIR_TS) $(MUBENCH_SRC_DIR)\/rbforest.cc$/;"	t
$(OBJ_DIR)/transaction.o	swisstm/Makefile	/^$(OBJ_DIR)\/transaction.o: $(OBJ_DIR_STMAP) $(EPOCHSTM_SRC_DIR)\/transaction.cc $(EPOCHSTM_SRC_D/;"	t
$(OBJ_DIR)/transaction.o	swisstm/Makefile	/^$(OBJ_DIR)\/transaction.o: $(OBJ_DIR_TS) $(DYNAMIC_SRC_DIR)\/transaction.cc $(DYNAMIC_SRC_DIR)\//;"	t
$(OBJ_DIR)/transaction.o	swisstm/Makefile	/^$(OBJ_DIR)\/transaction.o: $(OBJ_DIR_TS) $(P_TLRW_SRC_DIR)\/transaction.cc $(P_TLRW_SRC_DIR)\/tr/;"	t
$(OBJ_DIR)/transaction.o	swisstm/Makefile	/^$(OBJ_DIR)\/transaction.o: $(OBJ_DIR_TS) $(RW_SRC_DIR)\/transaction.cc $(RW_SRC_DIR)\/transactio/;"	t
$(OBJ_DIR)/transaction.o	swisstm/Makefile	/^$(OBJ_DIR)\/transaction.o: $(OBJ_DIR_TS) $(STM_SRC_DIR)\/transaction.cc $(STM_SRC_DIR)\/transact/;"	t
$(OBJ_DIR)/transaction.o	swisstm/Makefile	/^$(OBJ_DIR)\/transaction.o: $(OBJ_DIR_TS) $(TLRW_SRC_DIR)\/transaction.cc $(TLRW_SRC_DIR)\/transa/;"	t
$(OBJ_DIR)/wlpdstm.o	swisstm/Makefile	/^$(OBJ_DIR)\/wlpdstm.o: $(OBJ_DIR_TS) $(STM_API_DIR)\/wlpdstm.cc $(STM_API_DIR)\/wlpdstm.h$/;"	t
$(OBJ_DIR_TS)	swisstm/Makefile	/^$(OBJ_DIR_TS):$/;"	t
0	config-list.json	/^                        "alg_type" : ["timestone"],$/;"	s	array:list10k.0.alg_type
0	config-list.json	/^                        "alg_type" : ["timestone"],$/;"	s	array:list1k.0.alg_type
0	config-list.json	/^                        "alg_type" : ["timestone"],$/;"	s	array:list50k.0.alg_type
0	config-list.json	/^                        "threads" : [448, 336, 224, 168, 112, 56, 28, 14, 8, 1]$/;"	n	array:list10k.0.threads
0	config-list.json	/^                        "threads" : [448, 336, 224, 168, 112, 56, 28, 14, 8, 1]$/;"	n	array:list1k.0.threads
0	config-list.json	/^                        "threads" : [448, 336, 224, 168, 112, 56, 28, 14, 8, 1]$/;"	n	array:list50k.0.threads
0	config-list.json	/^                        "update_rate" : [20, 200, 800],$/;"	n	array:list10k.0.update_rate
0	config-list.json	/^                        "update_rate" : [20, 200, 800],$/;"	n	array:list1k.0.update_rate
0	config-list.json	/^                        "update_rate" : [20, 200, 800],$/;"	n	array:list50k.0.update_rate
0	config-list.json	/^                {$/;"	o	array:list10k
0	config-list.json	/^                {$/;"	o	array:list1k
0	config-list.json	/^                {$/;"	o	array:list50k
0	config-tree.json	/^                        "alg_type" : ["mvrlu_ordo"],$/;"	s	array:tree10k.0.alg_type
0	config-tree.json	/^                        "threads" : [8, 4]$/;"	n	array:tree10k.0.threads
0	config-tree.json	/^                        "update_rate" : [200, 800],$/;"	n	array:tree10k.0.update_rate
0	config-tree.json	/^                {$/;"	o	array:tree10k
0	config.json	/^                        "alg_type" : ["mvrlu"],$/;"	s	array:tree10k-aug10.0.alg_type
0	config.json	/^                        "threads" : [1, 4, 8, 16, 24, 32, 40, 48, 56, 64, 72, 80, 96]$/;"	n	array:tree10k-aug10.0.threads
0	config.json	/^                        "update_rate" : [20, 200, 800],$/;"	n	array:tree10k-aug10.0.update_rate
0	config.json	/^                {$/;"	o	array:tree10k-aug10
0	list.json	/^                        "alg_type" : ["mvrlu_ordo_list", "rcu_list", "rlu_list", "vlist_list", "/;"	s	array:list100k.0.alg_type
0	list.json	/^                        "alg_type" : ["mvrlu_ordo_list", "rcu_list", "rlu_list", "vlist_list", "/;"	s	array:list10k.0.alg_type
0	list.json	/^                        "alg_type" : ["mvrlu_ordo_list", "rcu_list", "rlu_list", "vlist_list", "/;"	s	array:list1k.0.alg_type
0	list.json	/^                        "threads" : [448, 392, 336, 280, 224, 196, 168, 140, 112, 84, 56, 28, 14/;"	n	array:list100k.0.threads
0	list.json	/^                        "threads" : [448, 392, 336, 280, 224, 196, 168, 140, 112, 84, 56, 28, 14/;"	n	array:list10k.0.threads
0	list.json	/^                        "threads" : [448, 392, 336, 280, 224, 196, 168, 140, 112, 84, 56, 28, 14/;"	n	array:list1k.0.threads
0	list.json	/^                        "update_rate" : [0, 20, 200, 800],$/;"	n	array:list10k.0.update_rate
0	list.json	/^                        "update_rate" : [200],$/;"	n	array:list100k.0.update_rate
0	list.json	/^                        "update_rate" : [200],$/;"	n	array:list1k.0.update_rate
0	list.json	/^                {$/;"	o	array:list100k
0	list.json	/^                {$/;"	o	array:list10k
0	list.json	/^                {$/;"	o	array:list1k
1	config-list.json	/^                        "threads" : [448, 336, 224, 168, 112, 56, 28, 14, 8, 1]$/;"	n	array:list10k.0.threads
1	config-list.json	/^                        "threads" : [448, 336, 224, 168, 112, 56, 28, 14, 8, 1]$/;"	n	array:list1k.0.threads
1	config-list.json	/^                        "threads" : [448, 336, 224, 168, 112, 56, 28, 14, 8, 1]$/;"	n	array:list50k.0.threads
1	config-list.json	/^                        "update_rate" : [20, 200, 800],$/;"	n	array:list10k.0.update_rate
1	config-list.json	/^                        "update_rate" : [20, 200, 800],$/;"	n	array:list1k.0.update_rate
1	config-list.json	/^                        "update_rate" : [20, 200, 800],$/;"	n	array:list50k.0.update_rate
1	config-tree.json	/^                        "threads" : [8, 4]$/;"	n	array:tree10k.0.threads
1	config-tree.json	/^                        "update_rate" : [200, 800],$/;"	n	array:tree10k.0.update_rate
1	config.json	/^                        "threads" : [1, 4, 8, 16, 24, 32, 40, 48, 56, 64, 72, 80, 96]$/;"	n	array:tree10k-aug10.0.threads
1	config.json	/^                        "update_rate" : [20, 200, 800],$/;"	n	array:tree10k-aug10.0.update_rate
1	list.json	/^                        "alg_type" : ["mvrlu_ordo_list", "rcu_list", "rlu_list", "vlist_list", "/;"	s	array:list100k.0.alg_type
1	list.json	/^                        "alg_type" : ["mvrlu_ordo_list", "rcu_list", "rlu_list", "vlist_list", "/;"	s	array:list10k.0.alg_type
1	list.json	/^                        "alg_type" : ["mvrlu_ordo_list", "rcu_list", "rlu_list", "vlist_list", "/;"	s	array:list1k.0.alg_type
1	list.json	/^                        "threads" : [448, 392, 336, 280, 224, 196, 168, 140, 112, 84, 56, 28, 14/;"	n	array:list100k.0.threads
1	list.json	/^                        "threads" : [448, 392, 336, 280, 224, 196, 168, 140, 112, 84, 56, 28, 14/;"	n	array:list10k.0.threads
1	list.json	/^                        "threads" : [448, 392, 336, 280, 224, 196, 168, 140, 112, 84, 56, 28, 14/;"	n	array:list1k.0.threads
1	list.json	/^                        "update_rate" : [0, 20, 200, 800],$/;"	n	array:list10k.0.update_rate
10	config.json	/^                        "threads" : [1, 4, 8, 16, 24, 32, 40, 48, 56, 64, 72, 80, 96]$/;"	n	array:tree10k-aug10.0.threads
10	list.json	/^                        "threads" : [448, 392, 336, 280, 224, 196, 168, 140, 112, 84, 56, 28, 14/;"	n	array:list100k.0.threads
10	list.json	/^                        "threads" : [448, 392, 336, 280, 224, 196, 168, 140, 112, 84, 56, 28, 14/;"	n	array:list10k.0.threads
10	list.json	/^                        "threads" : [448, 392, 336, 280, 224, 196, 168, 140, 112, 84, 56, 28, 14/;"	n	array:list1k.0.threads
11	config.json	/^                        "threads" : [1, 4, 8, 16, 24, 32, 40, 48, 56, 64, 72, 80, 96]$/;"	n	array:tree10k-aug10.0.threads
11	list.json	/^                        "threads" : [448, 392, 336, 280, 224, 196, 168, 140, 112, 84, 56, 28, 14/;"	n	array:list100k.0.threads
11	list.json	/^                        "threads" : [448, 392, 336, 280, 224, 196, 168, 140, 112, 84, 56, 28, 14/;"	n	array:list10k.0.threads
11	list.json	/^                        "threads" : [448, 392, 336, 280, 224, 196, 168, 140, 112, 84, 56, 28, 14/;"	n	array:list1k.0.threads
12	config.json	/^                        "threads" : [1, 4, 8, 16, 24, 32, 40, 48, 56, 64, 72, 80, 96]$/;"	n	array:tree10k-aug10.0.threads
12	list.json	/^                        "threads" : [448, 392, 336, 280, 224, 196, 168, 140, 112, 84, 56, 28, 14/;"	n	array:list100k.0.threads
12	list.json	/^                        "threads" : [448, 392, 336, 280, 224, 196, 168, 140, 112, 84, 56, 28, 14/;"	n	array:list10k.0.threads
12	list.json	/^                        "threads" : [448, 392, 336, 280, 224, 196, 168, 140, 112, 84, 56, 28, 14/;"	n	array:list1k.0.threads
13	list.json	/^                        "threads" : [448, 392, 336, 280, 224, 196, 168, 140, 112, 84, 56, 28, 14/;"	n	array:list100k.0.threads
13	list.json	/^                        "threads" : [448, 392, 336, 280, 224, 196, 168, 140, 112, 84, 56, 28, 14/;"	n	array:list10k.0.threads
13	list.json	/^                        "threads" : [448, 392, 336, 280, 224, 196, 168, 140, 112, 84, 56, 28, 14/;"	n	array:list1k.0.threads
14	list.json	/^                        "threads" : [448, 392, 336, 280, 224, 196, 168, 140, 112, 84, 56, 28, 14/;"	n	array:list100k.0.threads
14	list.json	/^                        "threads" : [448, 392, 336, 280, 224, 196, 168, 140, 112, 84, 56, 28, 14/;"	n	array:list10k.0.threads
14	list.json	/^                        "threads" : [448, 392, 336, 280, 224, 196, 168, 140, 112, 84, 56, 28, 14/;"	n	array:list1k.0.threads
15	list.json	/^                        "threads" : [448, 392, 336, 280, 224, 196, 168, 140, 112, 84, 56, 28, 14/;"	n	array:list100k.0.threads
15	list.json	/^                        "threads" : [448, 392, 336, 280, 224, 196, 168, 140, 112, 84, 56, 28, 14/;"	n	array:list10k.0.threads
15	list.json	/^                        "threads" : [448, 392, 336, 280, 224, 196, 168, 140, 112, 84, 56, 28, 14/;"	n	array:list1k.0.threads
2	config-list.json	/^                        "threads" : [448, 336, 224, 168, 112, 56, 28, 14, 8, 1]$/;"	n	array:list10k.0.threads
2	config-list.json	/^                        "threads" : [448, 336, 224, 168, 112, 56, 28, 14, 8, 1]$/;"	n	array:list1k.0.threads
2	config-list.json	/^                        "threads" : [448, 336, 224, 168, 112, 56, 28, 14, 8, 1]$/;"	n	array:list50k.0.threads
2	config-list.json	/^                        "update_rate" : [20, 200, 800],$/;"	n	array:list10k.0.update_rate
2	config-list.json	/^                        "update_rate" : [20, 200, 800],$/;"	n	array:list1k.0.update_rate
2	config-list.json	/^                        "update_rate" : [20, 200, 800],$/;"	n	array:list50k.0.update_rate
2	config.json	/^                        "threads" : [1, 4, 8, 16, 24, 32, 40, 48, 56, 64, 72, 80, 96]$/;"	n	array:tree10k-aug10.0.threads
2	config.json	/^                        "update_rate" : [20, 200, 800],$/;"	n	array:tree10k-aug10.0.update_rate
2	list.json	/^                        "alg_type" : ["mvrlu_ordo_list", "rcu_list", "rlu_list", "vlist_list", "/;"	s	array:list100k.0.alg_type
2	list.json	/^                        "alg_type" : ["mvrlu_ordo_list", "rcu_list", "rlu_list", "vlist_list", "/;"	s	array:list10k.0.alg_type
2	list.json	/^                        "alg_type" : ["mvrlu_ordo_list", "rcu_list", "rlu_list", "vlist_list", "/;"	s	array:list1k.0.alg_type
2	list.json	/^                        "threads" : [448, 392, 336, 280, 224, 196, 168, 140, 112, 84, 56, 28, 14/;"	n	array:list100k.0.threads
2	list.json	/^                        "threads" : [448, 392, 336, 280, 224, 196, 168, 140, 112, 84, 56, 28, 14/;"	n	array:list10k.0.threads
2	list.json	/^                        "threads" : [448, 392, 336, 280, 224, 196, 168, 140, 112, 84, 56, 28, 14/;"	n	array:list1k.0.threads
2	list.json	/^                        "update_rate" : [0, 20, 200, 800],$/;"	n	array:list10k.0.update_rate
3	config-list.json	/^                        "threads" : [448, 336, 224, 168, 112, 56, 28, 14, 8, 1]$/;"	n	array:list10k.0.threads
3	config-list.json	/^                        "threads" : [448, 336, 224, 168, 112, 56, 28, 14, 8, 1]$/;"	n	array:list1k.0.threads
3	config-list.json	/^                        "threads" : [448, 336, 224, 168, 112, 56, 28, 14, 8, 1]$/;"	n	array:list50k.0.threads
3	config.json	/^                        "threads" : [1, 4, 8, 16, 24, 32, 40, 48, 56, 64, 72, 80, 96]$/;"	n	array:tree10k-aug10.0.threads
3	list.json	/^                        "alg_type" : ["mvrlu_ordo_list", "rcu_list", "rlu_list", "vlist_list", "/;"	s	array:list100k.0.alg_type
3	list.json	/^                        "alg_type" : ["mvrlu_ordo_list", "rcu_list", "rlu_list", "vlist_list", "/;"	s	array:list10k.0.alg_type
3	list.json	/^                        "alg_type" : ["mvrlu_ordo_list", "rcu_list", "rlu_list", "vlist_list", "/;"	s	array:list1k.0.alg_type
3	list.json	/^                        "threads" : [448, 392, 336, 280, 224, 196, 168, 140, 112, 84, 56, 28, 14/;"	n	array:list100k.0.threads
3	list.json	/^                        "threads" : [448, 392, 336, 280, 224, 196, 168, 140, 112, 84, 56, 28, 14/;"	n	array:list10k.0.threads
3	list.json	/^                        "threads" : [448, 392, 336, 280, 224, 196, 168, 140, 112, 84, 56, 28, 14/;"	n	array:list1k.0.threads
3	list.json	/^                        "update_rate" : [0, 20, 200, 800],$/;"	n	array:list10k.0.update_rate
4	config-list.json	/^                        "threads" : [448, 336, 224, 168, 112, 56, 28, 14, 8, 1]$/;"	n	array:list10k.0.threads
4	config-list.json	/^                        "threads" : [448, 336, 224, 168, 112, 56, 28, 14, 8, 1]$/;"	n	array:list1k.0.threads
4	config-list.json	/^                        "threads" : [448, 336, 224, 168, 112, 56, 28, 14, 8, 1]$/;"	n	array:list50k.0.threads
4	config.json	/^                        "threads" : [1, 4, 8, 16, 24, 32, 40, 48, 56, 64, 72, 80, 96]$/;"	n	array:tree10k-aug10.0.threads
4	list.json	/^                        "alg_type" : ["mvrlu_ordo_list", "rcu_list", "rlu_list", "vlist_list", "/;"	s	array:list100k.0.alg_type
4	list.json	/^                        "alg_type" : ["mvrlu_ordo_list", "rcu_list", "rlu_list", "vlist_list", "/;"	s	array:list10k.0.alg_type
4	list.json	/^                        "alg_type" : ["mvrlu_ordo_list", "rcu_list", "rlu_list", "vlist_list", "/;"	s	array:list1k.0.alg_type
4	list.json	/^                        "threads" : [448, 392, 336, 280, 224, 196, 168, 140, 112, 84, 56, 28, 14/;"	n	array:list100k.0.threads
4	list.json	/^                        "threads" : [448, 392, 336, 280, 224, 196, 168, 140, 112, 84, 56, 28, 14/;"	n	array:list10k.0.threads
4	list.json	/^                        "threads" : [448, 392, 336, 280, 224, 196, 168, 140, 112, 84, 56, 28, 14/;"	n	array:list1k.0.threads
5	config-list.json	/^                        "threads" : [448, 336, 224, 168, 112, 56, 28, 14, 8, 1]$/;"	n	array:list10k.0.threads
5	config-list.json	/^                        "threads" : [448, 336, 224, 168, 112, 56, 28, 14, 8, 1]$/;"	n	array:list1k.0.threads
5	config-list.json	/^                        "threads" : [448, 336, 224, 168, 112, 56, 28, 14, 8, 1]$/;"	n	array:list50k.0.threads
5	config.json	/^                        "threads" : [1, 4, 8, 16, 24, 32, 40, 48, 56, 64, 72, 80, 96]$/;"	n	array:tree10k-aug10.0.threads
5	list.json	/^                        "threads" : [448, 392, 336, 280, 224, 196, 168, 140, 112, 84, 56, 28, 14/;"	n	array:list100k.0.threads
5	list.json	/^                        "threads" : [448, 392, 336, 280, 224, 196, 168, 140, 112, 84, 56, 28, 14/;"	n	array:list10k.0.threads
5	list.json	/^                        "threads" : [448, 392, 336, 280, 224, 196, 168, 140, 112, 84, 56, 28, 14/;"	n	array:list1k.0.threads
6	config-list.json	/^                        "threads" : [448, 336, 224, 168, 112, 56, 28, 14, 8, 1]$/;"	n	array:list10k.0.threads
6	config-list.json	/^                        "threads" : [448, 336, 224, 168, 112, 56, 28, 14, 8, 1]$/;"	n	array:list1k.0.threads
6	config-list.json	/^                        "threads" : [448, 336, 224, 168, 112, 56, 28, 14, 8, 1]$/;"	n	array:list50k.0.threads
6	config.json	/^                        "threads" : [1, 4, 8, 16, 24, 32, 40, 48, 56, 64, 72, 80, 96]$/;"	n	array:tree10k-aug10.0.threads
6	list.json	/^                        "threads" : [448, 392, 336, 280, 224, 196, 168, 140, 112, 84, 56, 28, 14/;"	n	array:list100k.0.threads
6	list.json	/^                        "threads" : [448, 392, 336, 280, 224, 196, 168, 140, 112, 84, 56, 28, 14/;"	n	array:list10k.0.threads
6	list.json	/^                        "threads" : [448, 392, 336, 280, 224, 196, 168, 140, 112, 84, 56, 28, 14/;"	n	array:list1k.0.threads
7	config-list.json	/^                        "threads" : [448, 336, 224, 168, 112, 56, 28, 14, 8, 1]$/;"	n	array:list10k.0.threads
7	config-list.json	/^                        "threads" : [448, 336, 224, 168, 112, 56, 28, 14, 8, 1]$/;"	n	array:list1k.0.threads
7	config-list.json	/^                        "threads" : [448, 336, 224, 168, 112, 56, 28, 14, 8, 1]$/;"	n	array:list50k.0.threads
7	config.json	/^                        "threads" : [1, 4, 8, 16, 24, 32, 40, 48, 56, 64, 72, 80, 96]$/;"	n	array:tree10k-aug10.0.threads
7	list.json	/^                        "threads" : [448, 392, 336, 280, 224, 196, 168, 140, 112, 84, 56, 28, 14/;"	n	array:list100k.0.threads
7	list.json	/^                        "threads" : [448, 392, 336, 280, 224, 196, 168, 140, 112, 84, 56, 28, 14/;"	n	array:list10k.0.threads
7	list.json	/^                        "threads" : [448, 392, 336, 280, 224, 196, 168, 140, 112, 84, 56, 28, 14/;"	n	array:list1k.0.threads
8	config-list.json	/^                        "threads" : [448, 336, 224, 168, 112, 56, 28, 14, 8, 1]$/;"	n	array:list10k.0.threads
8	config-list.json	/^                        "threads" : [448, 336, 224, 168, 112, 56, 28, 14, 8, 1]$/;"	n	array:list1k.0.threads
8	config-list.json	/^                        "threads" : [448, 336, 224, 168, 112, 56, 28, 14, 8, 1]$/;"	n	array:list50k.0.threads
8	config.json	/^                        "threads" : [1, 4, 8, 16, 24, 32, 40, 48, 56, 64, 72, 80, 96]$/;"	n	array:tree10k-aug10.0.threads
8	list.json	/^                        "threads" : [448, 392, 336, 280, 224, 196, 168, 140, 112, 84, 56, 28, 14/;"	n	array:list100k.0.threads
8	list.json	/^                        "threads" : [448, 392, 336, 280, 224, 196, 168, 140, 112, 84, 56, 28, 14/;"	n	array:list10k.0.threads
8	list.json	/^                        "threads" : [448, 392, 336, 280, 224, 196, 168, 140, 112, 84, 56, 28, 14/;"	n	array:list1k.0.threads
9	config-list.json	/^                        "threads" : [448, 336, 224, 168, 112, 56, 28, 14, 8, 1]$/;"	n	array:list10k.0.threads
9	config-list.json	/^                        "threads" : [448, 336, 224, 168, 112, 56, 28, 14, 8, 1]$/;"	n	array:list1k.0.threads
9	config-list.json	/^                        "threads" : [448, 336, 224, 168, 112, 56, 28, 14, 8, 1]$/;"	n	array:list50k.0.threads
9	config.json	/^                        "threads" : [1, 4, 8, 16, 24, 32, 40, 48, 56, 64, 72, 80, 96]$/;"	n	array:tree10k-aug10.0.threads
9	list.json	/^                        "threads" : [448, 392, 336, 280, 224, 196, 168, 140, 112, 84, 56, 28, 14/;"	n	array:list100k.0.threads
9	list.json	/^                        "threads" : [448, 392, 336, 280, 224, 196, 168, 140, 112, 84, 56, 28, 14/;"	n	array:list10k.0.threads
9	list.json	/^                        "threads" : [448, 392, 336, 280, 224, 196, 168, 140, 112, 84, 56, 28, 14/;"	n	array:list1k.0.threads
ABORT	swisstm/src/dynamic/stats.h	/^			ABORT,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
ABORT	swisstm/src/epochstm/stats.h	/^			ABORT,$/;"	e	enum:wlpdstm::EpochSTMStats::Type
ABORT	swisstm/src/p-tlrw/stats.h	/^			ABORT,$/;"	e	enum:wlpdstm::TlrwStats::Type
ABORT	swisstm/src/rw/stats.h	/^			ABORT,$/;"	e	enum:wlpdstm::RwStats::Type
ABORT	swisstm/src/stm/stats.h	/^			ABORT,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
ABORT	swisstm/src/tlrw/stats.h	/^			ABORT,$/;"	e	enum:wlpdstm::TlrwStats::Type
ABORTED	swisstm/src/common/stats_base.h	/^			ABORTED,$/;"	e	enum:wlpdstm::ThreadStatsBase::__anon5b2d285c0103
ABORT_COMMIT_VALIDATE	swisstm/src/dynamic/stats.h	/^			ABORT_COMMIT_VALIDATE,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
ABORT_COMMIT_VALIDATE	swisstm/src/stm/stats.h	/^			ABORT_COMMIT_VALIDATE,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
ABORT_READ_LOCKED	swisstm/src/dynamic/stats.h	/^			ABORT_READ_LOCKED,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
ABORT_READ_LOCKED	swisstm/src/stm/stats.h	/^			ABORT_READ_LOCKED,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
ABORT_READ_VALIDATE	swisstm/src/dynamic/stats.h	/^			ABORT_READ_VALIDATE,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
ABORT_READ_VALIDATE	swisstm/src/stm/stats.h	/^			ABORT_READ_VALIDATE,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
ABORT_READ_WRITE	swisstm/src/epochstm/stats.h	/^			ABORT_READ_WRITE,$/;"	e	enum:wlpdstm::EpochSTMStats::Type
ABORT_READ_WRITE	swisstm/src/p-tlrw/stats.h	/^			ABORT_READ_WRITE,$/;"	e	enum:wlpdstm::TlrwStats::Type
ABORT_READ_WRITE	swisstm/src/rw/stats.h	/^			ABORT_READ_WRITE,$/;"	e	enum:wlpdstm::RwStats::Type
ABORT_READ_WRITE	swisstm/src/tlrw/stats.h	/^			ABORT_READ_WRITE,$/;"	e	enum:wlpdstm::TlrwStats::Type
ABORT_WRITE_LOCKED	swisstm/src/dynamic/stats.h	/^			ABORT_WRITE_LOCKED,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
ABORT_WRITE_LOCKED	swisstm/src/stm/stats.h	/^			ABORT_WRITE_LOCKED,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
ABORT_WRITE_READ	swisstm/src/epochstm/stats.h	/^			ABORT_WRITE_READ,$/;"	e	enum:wlpdstm::EpochSTMStats::Type
ABORT_WRITE_READ	swisstm/src/p-tlrw/stats.h	/^			ABORT_WRITE_READ,$/;"	e	enum:wlpdstm::TlrwStats::Type
ABORT_WRITE_READ	swisstm/src/rw/stats.h	/^			ABORT_WRITE_READ,$/;"	e	enum:wlpdstm::RwStats::Type
ABORT_WRITE_READ	swisstm/src/tlrw/stats.h	/^			ABORT_WRITE_READ,$/;"	e	enum:wlpdstm::TlrwStats::Type
ABORT_WRITE_VALIDATE	swisstm/src/dynamic/stats.h	/^			ABORT_WRITE_VALIDATE,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
ABORT_WRITE_VALIDATE	swisstm/src/stm/stats.h	/^			ABORT_WRITE_VALIDATE,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
ABORT_WRITE_WRITE	swisstm/src/epochstm/stats.h	/^			ABORT_WRITE_WRITE,$/;"	e	enum:wlpdstm::EpochSTMStats::Type
ABORT_WRITE_WRITE	swisstm/src/p-tlrw/stats.h	/^			ABORT_WRITE_WRITE,$/;"	e	enum:wlpdstm::TlrwStats::Type
ABORT_WRITE_WRITE	swisstm/src/rw/stats.h	/^			ABORT_WRITE_WRITE,$/;"	e	enum:wlpdstm::RwStats::Type
ABORT_WRITE_WRITE	swisstm/src/tlrw/stats.h	/^			ABORT_WRITE_WRITE,$/;"	e	enum:wlpdstm::TlrwStats::Type
ACCEPTABLE_OVERHEAD_SHIFT	swisstm/src/common/profiling/adaptive.h	/^			static const unsigned ACCEPTABLE_OVERHEAD_SHIFT = SHIFT_1_PCT;$/;"	m	class:wlpdstm::AdaptiveProfiling	typeref:typename:const unsigned
ACCEPTABLE_OVERHEAD_SHIFT	swisstm/src/common/profiling/non_tx_duration.h	/^			static const unsigned ACCEPTABLE_OVERHEAD_SHIFT = SHIFT_1_PCT;$/;"	m	class:wlpdstm::NonTxDurationProfiling	typeref:typename:const unsigned
ACCEPTABLE_OVERHEAD_SHIFT	swisstm/src/common/profiling/tx_duration.h	/^			static const unsigned ACCEPTABLE_OVERHEAD_SHIFT = SHIFT_1_PCT;$/;"	m	class:wlpdstm::TxDurationProfiling	typeref:typename:const unsigned
ACCEPTABLE_OVERHEAD_SHIFT	swisstm/src/dynamic/profiling/adaptive_dynamic.h	/^			static const unsigned ACCEPTABLE_OVERHEAD_SHIFT = SHIFT_1_PCT;$/;"	m	class:wlpdstm::AdaptiveDynamicProfiling	typeref:typename:const unsigned
ADDRESS_SPACE_SIZE	swisstm/src/common/constants.h	/^	const unsigned ADDRESS_SPACE_SIZE = 32;$/;"	v	namespace:wlpdstm	typeref:typename:const unsigned
ALIGN_MASK	rlu.c	/^#define ALIGN_MASK /;"	d	file:
ALIGN_NUMBER	rlu.c	/^#define ALIGN_NUMBER /;"	d	file:
ALIGN_OBJ_SIZE	rlu.c	/^#define ALIGN_OBJ_SIZE(/;"	d	file:
API_LINKAGE	swisstm/src/dynamic/api_linkage.h	/^#define API_LINKAGE /;"	d
API_LINKAGE	swisstm/src/dynamic/api_linkage.h	/^#define API_LINKAGE$/;"	d
APP_THREAD_CLEANUP_HELP	swisstm/src/epochstm/stats.h	/^			APP_THREAD_CLEANUP_HELP,$/;"	e	enum:wlpdstm::EpochSTMStats::Type
AR	swisstm/Makefile.in	/^AR = ar$/;"	m
ARCH	swisstm/Makefile.in	/^    ARCH = sparc64$/;"	m
ARCH	swisstm/Makefile.in	/^    ARCH = x86$/;"	m
ARCH	swisstm/Makefile.in	/^    ARCH = x86_64$/;"	m
ARCH_NAME	swisstm/Makefile.in	/^    ARCH_NAME = $(shell uname -m)$/;"	m
ATOMIC_H_	swisstm/src/common/atomic.h	/^#define ATOMIC_H_$/;"	d
ATOMIC_OPS_INCLUDE	swisstm/Makefile.in	/^ATOMIC_OPS_INCLUDE = \/home\/dragojev\/local\/libatomicops\/include\/$/;"	m
AVERAGE_STAT_COUNT	swisstm/src/dynamic/stats.h	/^		static const unsigned AVERAGE_STAT_COUNT = 20;$/;"	m	class:wlpdstm::TxMixinvStats	typeref:typename:const unsigned
AVERAGE_STAT_COUNT	swisstm/src/epochstm/stats.h	/^		static const unsigned AVERAGE_STAT_COUNT = 8;$/;"	m	class:wlpdstm::EpochSTMStats	typeref:typename:const unsigned
AVERAGE_STAT_COUNT	swisstm/src/p-tlrw/stats.h	/^		static const unsigned AVERAGE_STAT_COUNT = 8;$/;"	m	class:wlpdstm::TlrwStats	typeref:typename:const unsigned
AVERAGE_STAT_COUNT	swisstm/src/rw/stats.h	/^		static const unsigned AVERAGE_STAT_COUNT = 8;$/;"	m	class:wlpdstm::RwStats	typeref:typename:const unsigned
AVERAGE_STAT_COUNT	swisstm/src/stm/stats.h	/^		static const unsigned AVERAGE_STAT_COUNT = 12;$/;"	m	class:wlpdstm::TxMixinvStats	typeref:typename:const unsigned
AVERAGE_STAT_COUNT	swisstm/src/tlrw/stats.h	/^		static const unsigned AVERAGE_STAT_COUNT = 8;$/;"	m	class:wlpdstm::TlrwStats	typeref:typename:const unsigned
AbortCleanup	swisstm/src/epochstm/transaction.h	/^inline void wlpdstm::TransactionEpoch::AbortCleanup() {$/;"	f	class:wlpdstm::TransactionEpoch	typeref:typename:void
AbortCleanup	swisstm/src/p-tlrw/transaction.h	/^inline void wlpdstm::TransactionTlrw::AbortCleanup() {$/;"	f	class:wlpdstm::TransactionTlrw	typeref:typename:void
AbortCleanup	swisstm/src/rw/transaction.h	/^inline void wlpdstm::TransactionRw::AbortCleanup() {$/;"	f	class:wlpdstm::TransactionRw	typeref:typename:void
AbortCleanup	swisstm/src/tlrw/transaction.h	/^inline void wlpdstm::TransactionTlrw::AbortCleanup() {$/;"	f	class:wlpdstm::TransactionTlrw	typeref:typename:void
AbortJump	swisstm/src/dynamic/transaction.h	/^inline void wlpdstm::TransactionDynamic::AbortJump() {$/;"	f	class:wlpdstm::TransactionDynamic	typeref:typename:void
AbortJump	swisstm/src/epochstm/transaction.h	/^inline void wlpdstm::TransactionEpoch::AbortJump() {$/;"	f	class:wlpdstm::TransactionEpoch	typeref:typename:void
AbortJump	swisstm/src/p-tlrw/transaction.h	/^inline void wlpdstm::TransactionTlrw::AbortJump() {$/;"	f	class:wlpdstm::TransactionTlrw	typeref:typename:void
AbortJump	swisstm/src/rw/transaction.h	/^inline void wlpdstm::TransactionRw::AbortJump() {$/;"	f	class:wlpdstm::TransactionRw	typeref:typename:void
AbortJump	swisstm/src/stm/transaction_mixinv.h	/^inline void wlpdstm::TxMixinv::AbortJump() {$/;"	f	class:wlpdstm::TxMixinv	typeref:typename:void
AbortJump	swisstm/src/tlrw/transaction.h	/^inline void wlpdstm::TransactionTlrw::AbortJump() {$/;"	f	class:wlpdstm::TransactionTlrw	typeref:typename:void
Acquired	swisstm/src/common/atomic.h	/^				Acquired$/;"	e	enum:wlpdstm::PaddedSpinTryLock::SpinLockState
AdaptiveDynamicProfiling	swisstm/src/dynamic/profiling/adaptive_dynamic.h	/^	class AdaptiveDynamicProfiling {$/;"	c	namespace:wlpdstm
AdaptiveProfiling	swisstm/src/common/profiling/adaptive.h	/^	class AdaptiveProfiling {$/;"	c	namespace:wlpdstm
Add	swisstm/src/common/stats_base.h	/^			void Add(ThreadStatistics *stat) {$/;"	f	class:wlpdstm::ThreadStatsCollectionBase	typeref:typename:void
AddItem	swisstm/src/common/configuration.h	/^void wlpdstm::Config::AddItem(ConfigItem config_item) {$/;"	f	class:wlpdstm::Config	typeref:typename:void
AddToReadSet	swisstm/src/p-tlrw/transaction.h	/^inline void wlpdstm::TransactionTlrw::AddToReadSet(OwnershipRecord *orec) {$/;"	f	class:wlpdstm::TransactionTlrw	typeref:typename:void
AddToReadSet	swisstm/src/rw/transaction.h	/^inline void wlpdstm::TransactionRw::AddToReadSet(OwnershipRecord *orec) {$/;"	f	class:wlpdstm::TransactionRw	typeref:typename:void
AddToReadSet	swisstm/src/tlrw/transaction.h	/^inline void wlpdstm::TransactionTlrw::AddToReadSet(OwnershipRecord *orec) {$/;"	f	class:wlpdstm::TransactionTlrw	typeref:typename:void
AddToWriteLog	swisstm/src/epochstm/transaction.h	/^inline void wlpdstm::TransactionEpoch::AddToWriteLog(Word *addr, Word val) {$/;"	f	class:wlpdstm::TransactionEpoch	typeref:typename:void
AddToWriteLog	swisstm/src/p-tlrw/transaction.h	/^inline void wlpdstm::TransactionTlrw::AddToWriteLog(Word *addr, Word val) {$/;"	f	class:wlpdstm::TransactionTlrw	typeref:typename:void
AddToWriteLog	swisstm/src/rw/transaction.h	/^inline void wlpdstm::TransactionRw::AddToWriteLog(Word *addr, Word val) {$/;"	f	class:wlpdstm::TransactionRw	typeref:typename:void
AddToWriteLog	swisstm/src/tlrw/transaction.h	/^inline void wlpdstm::TransactionTlrw::AddToWriteLog(Word *addr, Word val) {$/;"	f	class:wlpdstm::TransactionTlrw	typeref:typename:void
AddToWriteSet	swisstm/src/p-tlrw/transaction.h	/^inline void wlpdstm::TransactionTlrw::AddToWriteSet(OwnershipRecord *orec) {$/;"	f	class:wlpdstm::TransactionTlrw	typeref:typename:void
AddToWriteSet	swisstm/src/rw/transaction.h	/^inline void wlpdstm::TransactionRw::AddToWriteSet(OwnershipRecord *orec) {$/;"	f	class:wlpdstm::TransactionRw	typeref:typename:void
AddToWriteSet	swisstm/src/tlrw/transaction.h	/^inline void wlpdstm::TransactionTlrw::AddToWriteSet(OwnershipRecord *orec) {$/;"	f	class:wlpdstm::TransactionTlrw	typeref:typename:void
AlignedAlloc	swisstm/src/common/cache_aligned_alloc.h	/^	class AlignedAlloc {$/;"	c	namespace:wlpdstm
Alloc	swisstm/src/common/alloc.h	/^	class Alloc {$/;"	c	namespace:wlpdstm
AllocateFreeBlocks	swisstm/src/epochstm/memory/memory_epoch.h	/^inline wlpdstm::MemoryBlock *wlpdstm::MemoryManager::AllocateFreeBlocks() {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:wlpdstm::MemoryBlock *
AllocatePtrBuffer	swisstm/src/dynamic/memory/memory_impl.h	/^inline wlpdstm::PtrBuffer *wlpdstm::MemoryManager::AllocatePtrBuffer() {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:wlpdstm::PtrBuffer *
AllocatePtrBuffer	swisstm/src/dynamic/memory/memory_impl_priv.h	/^inline wlpdstm::PtrBuffer *wlpdstm::MemoryManager::AllocatePtrBuffer() {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:wlpdstm::PtrBuffer *
AllocatePtrBuffer	swisstm/src/epochstm/memory/memory_txend.h	/^inline wlpdstm::PtrBuffer *wlpdstm::MemoryManager::AllocatePtrBuffer() {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:wlpdstm::PtrBuffer *
AllocatePtrBuffer	swisstm/src/p-tlrw/memory/memory_txend.h	/^inline wlpdstm::PtrBuffer *wlpdstm::MemoryManager::AllocatePtrBuffer() {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:wlpdstm::PtrBuffer *
AllocatePtrBuffer	swisstm/src/rw/memory/memory_txend.h	/^inline wlpdstm::PtrBuffer *wlpdstm::MemoryManager::AllocatePtrBuffer() {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:wlpdstm::PtrBuffer *
AllocatePtrBuffer	swisstm/src/stm/memory/memory_impl.h	/^inline wlpdstm::PtrBuffer *wlpdstm::MemoryManager::AllocatePtrBuffer() {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:wlpdstm::PtrBuffer *
AllocatePtrBuffer	swisstm/src/stm/memory/memory_impl_priv.h	/^inline wlpdstm::PtrBuffer *wlpdstm::MemoryManager::AllocatePtrBuffer() {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:wlpdstm::PtrBuffer *
AllocatePtrBuffer	swisstm/src/tlrw/memory/memory_txend.h	/^inline wlpdstm::PtrBuffer *wlpdstm::MemoryManager::AllocatePtrBuffer() {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:wlpdstm::PtrBuffer *
AtomicVariable	swisstm/src/common/atomic.h	/^			AtomicVariable() : value(INITIAL_VALUE)$/;"	f	class:wlpdstm::AtomicVariable
AtomicVariable	swisstm/src/common/atomic.h	/^	class AtomicVariable {$/;"	c	namespace:wlpdstm
AverageStat	swisstm/src/common/stats_base.h	/^	struct AverageStat {$/;"	s	namespace:wlpdstm
BEGIN_TRANSACTION	swisstm/src/include/stm.h	/^#define BEGIN_TRANSACTION /;"	d
BEGIN_TRANSACTION_DESC	swisstm/src/include/stm.h	/^#define BEGIN_TRANSACTION_DESC	/;"	d
BEGIN_TRANSACTION_DESC_ID	swisstm/src/include/stm.h	/^#define BEGIN_TRANSACTION_DESC_ID(/;"	d
BEGIN_TRANSACTION_ID	swisstm/src/include/stm.h	/^#define BEGIN_TRANSACTION_ID(/;"	d
BENCHMARK_LIST_H	benchmark_list.h	/^#define BENCHMARK_LIST_H$/;"	d
BENCHMARK_LIST_H	benchmark_list_move.h	/^#define BENCHMARK_LIST_H$/;"	d
BINS	Makefile	/^BINS = benchmark_list_spinlock      \\$/;"	m
BITS_PER_LONG	zipf/rand.h	/^#define BITS_PER_LONG /;"	d
BLACK	swisstm/src/mubench/rbtree.c	/^    BLACK = 1$/;"	e	enum:__anoned9e1f2b0103	file:
BYTES_IN_WORD	swisstm/src/common/constants.h	/^	const uintptr_t BYTES_IN_WORD = 1 << LOG_BYTES_IN_WORD;$/;"	v	namespace:wlpdstm	typeref:typename:const uintptr_t
BaseProfiling	swisstm/src/common/profiling/base.h	/^	class BaseProfiling {$/;"	c	namespace:wlpdstm
BindToCPU	swisstm/src/p-tlrw/transaction.h	/^inline void wlpdstm::TransactionTlrw::BindToCPU(int cpu_map) {$/;"	f	class:wlpdstm::TransactionTlrw	typeref:typename:void
CACHE_ALIGN	benchmark_list.h	/^#define CACHE_ALIGN /;"	d
CACHE_ALIGN	benchmark_list_move.h	/^#define CACHE_ALIGN /;"	d
CACHE_ALIGN	qsbr.c	/^#define CACHE_ALIGN /;"	d	file:
CACHE_ALIGN_SIZE	benchmark_list.h	/^#define CACHE_ALIGN_SIZE(/;"	d
CACHE_ALIGN_SIZE	benchmark_list_move.h	/^#define CACHE_ALIGN_SIZE(/;"	d
CACHE_LINE_ALIGNED	swisstm/src/common/constants.h	/^#define CACHE_LINE_ALIGNED /;"	d
CACHE_LINE_SIZE_BYTES	swisstm/src/common/constants.h	/^#define CACHE_LINE_SIZE_BYTES /;"	d
CACHE_MISSES	swisstm/src/dynamic/stats.h	/^			CACHE_MISSES,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
CACHE_MISSES	swisstm/src/epochstm/stats.h	/^			CACHE_MISSES,$/;"	e	enum:wlpdstm::EpochSTMStats::Type
CACHE_MISSES	swisstm/src/p-tlrw/stats.h	/^			CACHE_MISSES,$/;"	e	enum:wlpdstm::TlrwStats::Type
CACHE_MISSES	swisstm/src/rw/stats.h	/^			CACHE_MISSES,$/;"	e	enum:wlpdstm::RwStats::Type
CACHE_MISSES	swisstm/src/stm/stats.h	/^			CACHE_MISSES,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
CACHE_MISSES	swisstm/src/tlrw/stats.h	/^			CACHE_MISSES,$/;"	e	enum:wlpdstm::TlrwStats::Type
CACHE_MISSES_EVENT_IDX	swisstm/src/common/perfcnt/perf_cnt_papi.h	/^#define CACHE_MISSES_EVENT_IDX /;"	d
CACHE_MISSES_EVENT_NAME	swisstm/src/common/perfcnt/perf_cnt_papi.h	/^#define CACHE_MISSES_EVENT_NAME /;"	d
CACHE_MISSES_EVENT_NAME	swisstm/src/common/perfcnt/perf_cnt_solaris.h	/^#define CACHE_MISSES_EVENT_NAME /;"	d
CAS	rlu.c	/^#define CAS(/;"	d	file:
CAS	util.h	/^#define CAS(/;"	d
CC	Makefile	/^CC := gcc$/;"	m
CC	swisstm/Makefile.in	/^	CC = $(GNU_CC)$/;"	m
CC	swisstm/Makefile.in	/^	CC = $(INTEL_CC)$/;"	m
CC	swisstm/Makefile.in	/^	CC = $(SOLARIS_CC)$/;"	m
CHECK_FOR_CONCURRENT_READER	swisstm/src/epochstm/stats.h	/^			CHECK_FOR_CONCURRENT_READER,$/;"	e	enum:wlpdstm::EpochSTMStats::Type
CHECK_FOR_CONCURRENT_READER	swisstm/src/p-tlrw/stats.h	/^			CHECK_FOR_CONCURRENT_READER,$/;"	e	enum:wlpdstm::TlrwStats::Type
CHECK_FOR_CONCURRENT_READER	swisstm/src/rw/stats.h	/^			CHECK_FOR_CONCURRENT_READER,$/;"	e	enum:wlpdstm::RwStats::Type
CHECK_FOR_CONCURRENT_READER	swisstm/src/tlrw/stats.h	/^			CHECK_FOR_CONCURRENT_READER,$/;"	e	enum:wlpdstm::TlrwStats::Type
CHECK_FOR_CONCURRENT_READER_MIN_VERSION_HIT	swisstm/src/epochstm/stats.h	/^			CHECK_FOR_CONCURRENT_READER_MIN_VERSION_HIT,$/;"	e	enum:wlpdstm::EpochSTMStats::Type
CHECK_FOR_CONCURRENT_READER_NO_READER	swisstm/src/epochstm/stats.h	/^			CHECK_FOR_CONCURRENT_READER_NO_READER,$/;"	e	enum:wlpdstm::EpochSTMStats::Type
CHECK_FOR_CONCURRENT_READER_NO_READER	swisstm/src/p-tlrw/stats.h	/^			CHECK_FOR_CONCURRENT_READER_NO_READER,$/;"	e	enum:wlpdstm::TlrwStats::Type
CHECK_FOR_CONCURRENT_READER_NO_READER	swisstm/src/rw/stats.h	/^			CHECK_FOR_CONCURRENT_READER_NO_READER,$/;"	e	enum:wlpdstm::RwStats::Type
CHECK_FOR_CONCURRENT_READER_NO_READER	swisstm/src/tlrw/stats.h	/^			CHECK_FOR_CONCURRENT_READER_NO_READER,$/;"	e	enum:wlpdstm::TlrwStats::Type
CLEANUP_BIND_SAME_CORE	swisstm/src/p-tlrw/transaction.h	/^#define CLEANUP_BIND_SAME_CORE$/;"	d
CLEANUP_NO_CAS	swisstm/src/p-tlrw/transaction.h	/^#define CLEANUP_NO_CAS$/;"	d
CLEAR	swisstm/src/common/lock.h	/^		const static Word CLEAR = 0;$/;"	m	class:wlpdstm::cas_lock	typeref:typename:const Word
CLOCK_OVERFLOWS	swisstm/src/dynamic/stats.h	/^			CLOCK_OVERFLOWS,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
CLOCK_OVERFLOWS	swisstm/src/stm/stats.h	/^			CLOCK_OVERFLOWS,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
CMD_BASE	run_tests.py	/^CMD_BASE = {$/;"	v
CMD_BASE_BONSAI	run_tests.py	/^CMD_BASE_BONSAI = '.\/benchmark_tree_bonsai'$/;"	v
CMD_BASE_CITRUS_MVRLU_ORDO	run_tests.py	/^CMD_BASE_CITRUS_MVRLU_ORDO = '.\/benchmark_tree_citrus_mvrlu_ordo'$/;"	v
CMD_BASE_HARRIS	run_tests.py	/^CMD_BASE_HARRIS = '.\/benchmark_tree_harris'$/;"	v
CMD_BASE_HARRIS_LIST	run_tests.py	/^CMD_BASE_HARRIS_LIST = '.\/benchmark_list_harris'$/;"	v
CMD_BASE_HP_HARRIS	run_tests.py	/^CMD_BASE_HP_HARRIS = '.\/benchmark_tree_hp_harris'$/;"	v
CMD_BASE_MVRLU	run_tests.py	/^CMD_BASE_MVRLU = '.\/benchmark_tree_mvrlu'$/;"	v
CMD_BASE_MVRLU_L	run_tests.py	/^CMD_BASE_MVRLU_L = '.\/benchmark_tree_mvrlu_L'$/;"	v
CMD_BASE_MVRLU_ORDO	run_tests.py	/^CMD_BASE_MVRLU_ORDO = '.\/benchmark_tree_mvrlu_ordo'$/;"	v
CMD_BASE_MVRLU_ORDO_LIST	run_tests.py	/^CMD_BASE_MVRLU_ORDO_LIST = '.\/benchmark_list_timestone'$/;"	v
CMD_BASE_MVRLU_S	run_tests.py	/^CMD_BASE_MVRLU_S = '.\/benchmark_tree_mvrlu_S'$/;"	v
CMD_BASE_PRCU_D	run_tests.py	/^CMD_BASE_PRCU_D = '.\/benchmark_tree_prcu_d'$/;"	v
CMD_BASE_RCU	run_tests.py	/^CMD_BASE_RCU = '.\/benchmark_tree_rcu'$/;"	v
CMD_BASE_RCU_LIST	run_tests.py	/^CMD_BASE_RCU_LIST = '.\/benchmark_list_rcu'$/;"	v
CMD_BASE_RLU	run_tests.py	/^CMD_BASE_RLU = '.\/benchmark_tree_rlu'$/;"	v
CMD_BASE_RLU_LIST	run_tests.py	/^CMD_BASE_RLU_LIST = '.\/benchmark_list_rlu'$/;"	v
CMD_BASE_RLU_ORDO	run_tests.py	/^CMD_BASE_RLU_ORDO = '.\/benchmark_tree_rlu_ordo'$/;"	v
CMD_BASE_RLU_ORDO_LIST	run_tests.py	/^CMD_BASE_RLU_ORDO_LIST = '.\/benchmark_list_rlu_ordo'$/;"	v
CMD_BASE_SWISSTM	run_tests.py	/^CMD_BASE_SWISSTM = '.\/benchmark_tree_swisstm'$/;"	v
CMD_BASE_SWISSTM_LIST	run_tests.py	/^CMD_BASE_SWISSTM_LIST = '.\/benchmark_list_swisstm'$/;"	v
CMD_BASE_VLIST	run_tests.py	/^CMD_BASE_VLIST = '.\/benchmark_tree_vtree'$/;"	v
CMD_BASE_VLIST_LIST	run_tests.py	/^CMD_BASE_VLIST_LIST = '.\/benchmark_list_vlist'$/;"	v
CMD_BASE_VRBTREE	run_tests.py	/^CMD_BASE_VRBTREE = '.\/benchmark_tree_vrbtree'$/;"	v
CMD_NUMA_BIND_TO_CPU_0	run_tests.py	/^CMD_NUMA_BIND_TO_CPU_0 = 'numactl --cpunodebind=0 '$/;"	v
CMD_NUMA_BIND_TO_CPU_0_1	run_tests.py	/^CMD_NUMA_BIND_TO_CPU_0_1 = 'numactl --cpunodebind=0,1 '$/;"	v
CMD_NUMA_BIND_TO_CPU_1	run_tests.py	/^CMD_NUMA_BIND_TO_CPU_1 = 'numactl --cpunodebind=1 '$/;"	v
CMD_NUMA_PREFIX_10	run_tests.py	/^CMD_NUMA_PREFIX_10 = 'taskset -c 0-9 '$/;"	v
CMD_NUMA_PREFIX_105	run_tests.py	/^CMD_NUMA_PREFIX_105= 'taskset -c 0-104 '$/;"	v
CMD_NUMA_PREFIX_12	run_tests.py	/^CMD_NUMA_PREFIX_12 = 'taskset -c 0-11 '$/;"	v
CMD_NUMA_PREFIX_120	run_tests.py	/^CMD_NUMA_PREFIX_120= 'taskset -c 0-119 '$/;"	v
CMD_NUMA_PREFIX_14	run_tests.py	/^CMD_NUMA_PREFIX_14 = 'taskset -c 0-13 '$/;"	v
CMD_NUMA_PREFIX_15	run_tests.py	/^CMD_NUMA_PREFIX_15 = 'taskset -c 0-14 '$/;"	v
CMD_NUMA_PREFIX_16	run_tests.py	/^CMD_NUMA_PREFIX_16 = 'taskset -c 0-15 '$/;"	v
CMD_NUMA_PREFIX_30	run_tests.py	/^CMD_NUMA_PREFIX_30 = 'taskset -c 0-29 '$/;"	v
CMD_NUMA_PREFIX_45	run_tests.py	/^CMD_NUMA_PREFIX_45 = 'taskset -c 0-44 '$/;"	v
CMD_NUMA_PREFIX_60	run_tests.py	/^CMD_NUMA_PREFIX_60 = 'taskset -c 0-59 '$/;"	v
CMD_NUMA_PREFIX_75	run_tests.py	/^CMD_NUMA_PREFIX_75 = 'taskset -c 0-74 '$/;"	v
CMD_NUMA_PREFIX_8	run_tests.py	/^CMD_NUMA_PREFIX_8  = 'taskset -c 0-7 '$/;"	v
CMD_NUMA_PREFIX_90	run_tests.py	/^CMD_NUMA_PREFIX_90 = 'taskset -c 0-89 '$/;"	v
CMD_PARAMS	run_tests.py	/^CMD_PARAMS = '-d%d -u%d -i%d -r%d -z%lf -n%d'$/;"	v
CMD_PREFIX_LIBS	run_tests.py	/^CMD_PREFIX_LIBS = 'export LD_PRELOAD=\\\\"\/usr\/lib64\/libtcmalloc_minimal.so.4\\\\"'$/;"	v
CMD_PREFIX_PERF	run_tests.py	/^CMD_PREFIX_PERF = "perf stat -d -o %s" % (PERF_FILE,)$/;"	v
CMStrongerThan	swisstm/src/dynamic/transaction.h	/^inline bool wlpdstm::TransactionDynamic::CMStrongerThan(TransactionDynamic *other) {$/;"	f	class:wlpdstm::TransactionDynamic	typeref:typename:bool
CMStrongerThan	swisstm/src/stm/transaction_mixinv.h	/^inline bool wlpdstm::TxMixinv::CMStrongerThan(TxMixinv *other) {$/;"	f	class:wlpdstm::TxMixinv	typeref:typename:bool
CM_ACCESS_THRESHOLD	swisstm/src/dynamic/transaction.h	/^#define CM_ACCESS_THRESHOLD /;"	d
CM_ACCESS_THRESHOLD	swisstm/src/stm/transaction_mixinv.h	/^#define CM_ACCESS_THRESHOLD /;"	d
CM_DECIDE	swisstm/src/dynamic/stats.h	/^			CM_DECIDE,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
CM_DECIDE	swisstm/src/stm/stats.h	/^			CM_DECIDE,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
CM_PHASE_GREEDY	swisstm/src/dynamic/transaction.h	/^		CM_PHASE_GREEDY$/;"	e	enum:wlpdstm::CmPhase
CM_PHASE_GREEDY	swisstm/src/stm/transaction_mixinv.h	/^			CM_PHASE_GREEDY$/;"	e	enum:wlpdstm::TxMixinv::CmPhase
CM_PHASE_INITIAL	swisstm/src/dynamic/transaction.h	/^		CM_PHASE_INITIAL,$/;"	e	enum:wlpdstm::CmPhase
CM_PHASE_INITIAL	swisstm/src/stm/transaction_mixinv.h	/^			CM_PHASE_INITIAL,$/;"	e	enum:wlpdstm::TxMixinv::CmPhase
COLLECT_STATS	swisstm/Makefile.in	/^	COLLECT_STATS = yes$/;"	m
COLLECT_STATS_CPPFLAGS_no	swisstm/Makefile.in	/^COLLECT_STATS_CPPFLAGS_no =$/;"	m
COLLECT_STATS_CPPFLAGS_yes	swisstm/Makefile.in	/^COLLECT_STATS_CPPFLAGS_yes = -D COLLECT_STATS$/;"	m
COLOR_OF	swisstm/src/mubench/rbtree.c	/^#define COLOR_OF(/;"	d	file:
COMMIT	swisstm/src/dynamic/eager/eager.h	/^				COMMIT = 0,$/;"	e	enum:wlpdstm::TxEager::TryCommitResult
COMMIT	swisstm/src/dynamic/lazy/lazy.h	/^				COMMIT = 0,$/;"	e	enum:wlpdstm::TxLazy::TryCommitResult
COMMIT	swisstm/src/dynamic/mixed/mixed.h	/^				COMMIT = 0,$/;"	e	enum:wlpdstm::TxMixed::TryCommitResult
COMMIT	swisstm/src/dynamic/stats.h	/^			COMMIT,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
COMMIT	swisstm/src/dynamic/transaction.h	/^		COMMIT = 0,$/;"	e	enum:wlpdstm::TryCommitResult
COMMIT	swisstm/src/epochstm/stats.h	/^			COMMIT = 0,$/;"	e	enum:wlpdstm::EpochSTMStats::Type
COMMIT	swisstm/src/mubench/tm_spec.h	/^#define COMMIT /;"	d
COMMIT	swisstm/src/p-tlrw/stats.h	/^			COMMIT = 0,$/;"	e	enum:wlpdstm::TlrwStats::Type
COMMIT	swisstm/src/rw/stats.h	/^			COMMIT = 0,$/;"	e	enum:wlpdstm::RwStats::Type
COMMIT	swisstm/src/stm/stats.h	/^			COMMIT = 0,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
COMMIT	swisstm/src/stm/transaction_mixinv.h	/^			COMMIT = 0,$/;"	e	enum:wlpdstm::TxMixinv::TryCommitResult
COMMIT	swisstm/src/tlrw/stats.h	/^			COMMIT = 0,$/;"	e	enum:wlpdstm::TlrwStats::Type
COMMITTED	swisstm/src/common/profiling/non_tx_duration_pcnt_simple.h	/^				COMMITTED,$/;"	e	enum:wlpdstm::NonTxDurationPcntProfilingSimple::LastTransactionState
COMMITTED	swisstm/src/common/profiling/non_tx_duration_simple.h	/^				COMMITTED,$/;"	e	enum:wlpdstm::NonTxDurationProfilingSimple::LastTransactionState
COMMITTED	swisstm/src/common/stats_base.h	/^			COMMITTED,$/;"	e	enum:wlpdstm::ThreadStatsBase::__anon5b2d285c0103
COMMIT_READ_ONLY	swisstm/src/dynamic/stats.h	/^			COMMIT_READ_ONLY,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
COMMIT_READ_ONLY	swisstm/src/epochstm/stats.h	/^			COMMIT_READ_ONLY,$/;"	e	enum:wlpdstm::EpochSTMStats::Type
COMMIT_READ_ONLY	swisstm/src/p-tlrw/stats.h	/^			COMMIT_READ_ONLY,$/;"	e	enum:wlpdstm::TlrwStats::Type
COMMIT_READ_ONLY	swisstm/src/rw/stats.h	/^			COMMIT_READ_ONLY,$/;"	e	enum:wlpdstm::RwStats::Type
COMMIT_READ_ONLY	swisstm/src/stm/stats.h	/^			COMMIT_READ_ONLY,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
COMMIT_READ_ONLY	swisstm/src/tlrw/stats.h	/^			COMMIT_READ_ONLY,$/;"	e	enum:wlpdstm::TlrwStats::Type
COMMON_CPPFLAGS	swisstm/Makefile.in	/^COMMON_CPPFLAGS = -Wall -I$(ATOMIC_OPS_INCLUDE) -fno-strict-aliasing$/;"	m
COMMON_LDFLAGS	swisstm/Makefile.in	/^COMMON_LDFLAGS  =$/;"	m
COMPILER	swisstm/Makefile.in	/^	COMPILER = gnu$/;"	m
CONSECUTIVE_TRANSACTION_PROFILE	swisstm/src/common/profiling/adaptive.h	/^			static const unsigned CONSECUTIVE_TRANSACTION_PROFILE = 16;$/;"	m	class:wlpdstm::AdaptiveProfiling	typeref:typename:const unsigned
CONSECUTIVE_TRANSACTION_PROFILE	swisstm/src/common/profiling/non_tx_duration.h	/^			static const unsigned CONSECUTIVE_TRANSACTION_PROFILE = 16;$/;"	m	class:wlpdstm::NonTxDurationProfiling	typeref:typename:const unsigned
CONSECUTIVE_TRANSACTION_PROFILE	swisstm/src/common/profiling/tx_duration.h	/^			static const unsigned CONSECUTIVE_TRANSACTION_PROFILE = 16;$/;"	m	class:wlpdstm::TxDurationProfiling	typeref:typename:const unsigned
CONSECUTIVE_TRANSACTION_PROFILE	swisstm/src/dynamic/profiling/adaptive_dynamic.h	/^			static const unsigned CONSECUTIVE_TRANSACTION_PROFILE = 16;$/;"	m	class:wlpdstm::AdaptiveDynamicProfiling	typeref:typename:const unsigned
CONSUMED_ENERGY	swisstm/src/dynamic/stats.h	/^			CONSUMED_ENERGY,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
COUNT	swisstm/src/dynamic/stats.h	/^			COUNT$/;"	e	enum:wlpdstm::TxMixinvStats::Type
COUNT	swisstm/src/epochstm/stats.h	/^			COUNT$/;"	e	enum:wlpdstm::EpochSTMStats::Type
COUNT	swisstm/src/p-tlrw/stats.h	/^			COUNT$/;"	e	enum:wlpdstm::TlrwStats::Type
COUNT	swisstm/src/rw/stats.h	/^			COUNT$/;"	e	enum:wlpdstm::RwStats::Type
COUNT	swisstm/src/stm/stats.h	/^			COUNT$/;"	e	enum:wlpdstm::TxMixinvStats::Type
COUNT	swisstm/src/tlrw/stats.h	/^			COUNT$/;"	e	enum:wlpdstm::TlrwStats::Type
CPP	swisstm/Makefile.in	/^	CPP = $(GNU_CPP)$/;"	m
CPP	swisstm/Makefile.in	/^	CPP = $(INTEL_CPP)$/;"	m
CPP	swisstm/Makefile.in	/^	CPP = $(SOLARIS_CPP)$/;"	m
CPPFLAGS	swisstm/Makefile.in	/^CPPFLAGS = $(COMMON_CPPFLAGS)$/;"	m
CPPFLAGS_debug	swisstm/Makefile.in	/^CPPFLAGS_debug   =  -g -O0$/;"	m
CPPFLAGS_fast	swisstm/Makefile.in	/^CPPFLAGS_fast    =  -DNDEBUG -O3$/;"	m
CPPFLAGS_gp	swisstm/Makefile.in	/^CPPFLAGS_gp      =  -ggdb -pg -O3$/;"	m
CPPFLAGS_gp0	swisstm/Makefile.in	/^CPPFLAGS_gp0     =  -ggdb -pg -O0$/;"	m
CPPFLAGS_normal	swisstm/Makefile.in	/^CPPFLAGS_normal  =  -ggdb -O3$/;"	m
CPU	swisstm/Makefile.in	/^	CPU = niagara2$/;"	m
CPU_NAME	swisstm/Makefile.in	/^	CPU_NAME = $(shell uname -i)$/;"	m
CPU_RELAX	rlu.c	/^#define CPU_RELAX(/;"	d	file:
CREATE_TX_ID	swisstm/src/epochstm/transaction.h	/^#define CREATE_TX_ID(/;"	d
CREATE_WRITE_LOCK	swisstm/src/p-tlrw/transaction.h	/^#define CREATE_WRITE_LOCK(/;"	d
CUR_DIR	Makefile	/^CUR_DIR   := $(shell dirname $(realpath $(lastword $(MAKEFILE_LIST))))$/;"	m
CYCLES	swisstm/src/dynamic/stats.h	/^			CYCLES,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
CYCLES	swisstm/src/epochstm/stats.h	/^			CYCLES,$/;"	e	enum:wlpdstm::EpochSTMStats::Type
CYCLES	swisstm/src/p-tlrw/stats.h	/^			CYCLES,$/;"	e	enum:wlpdstm::TlrwStats::Type
CYCLES	swisstm/src/rw/stats.h	/^			CYCLES,$/;"	e	enum:wlpdstm::RwStats::Type
CYCLES	swisstm/src/stm/stats.h	/^			CYCLES,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
CYCLES	swisstm/src/tlrw/stats.h	/^			CYCLES,$/;"	e	enum:wlpdstm::TlrwStats::Type
CacheAlignedAlloc	swisstm/src/common/cache_aligned_alloc.h	/^	typedef AlignedAlloc<CACHE_LINE_SIZE_BYTES, Alloc> CacheAlignedAlloc;$/;"	t	namespace:wlpdstm	typeref:typename:AlignedAlloc<CACHE_LINE_SIZE_BYTES,Alloc>
CalculateEstimate	swisstm/src/common/profiling/adaptive.h	/^inline uint64_t wlpdstm::AdaptiveProfiling<STATS, STATS_TYPE>::CalculateEstimate(uint64_t old_va/;"	f	class:wlpdstm::AdaptiveProfiling	typeref:typename:uint64_t
CalculateEstimate	swisstm/src/common/profiling/non_tx_duration.h	/^inline uint64_t wlpdstm::NonTxDurationProfiling<STATS, STATS_TYPE>::CalculateEstimate(uint64_t o/;"	f	class:wlpdstm::NonTxDurationProfiling	typeref:typename:uint64_t
CalculateEstimate	swisstm/src/common/profiling/tx_duration.h	/^inline uint64_t wlpdstm::TxDurationProfiling<STATS, STATS_TYPE>::CalculateEstimate(uint64_t old_/;"	f	class:wlpdstm::TxDurationProfiling	typeref:typename:uint64_t
CalculateEstimate	swisstm/src/dynamic/profiling/adaptive_dynamic.h	/^inline uint64_t wlpdstm::AdaptiveDynamicProfiling<STATS, STATS_TYPE>::CalculateEstimate(uint64_t/;"	f	class:wlpdstm::AdaptiveDynamicProfiling	typeref:typename:uint64_t
CalculateMinimumCounter	swisstm/src/epochstm/transaction.h	/^inline void wlpdstm::TransactionEpoch::CalculateMinimumCounter() {$/;"	f	class:wlpdstm::TransactionEpoch	typeref:typename:void
CheckForConcurrentReaders	swisstm/src/epochstm/transaction.h	/^inline bool wlpdstm::TransactionEpoch::CheckForConcurrentReaders(OwnershipRecord *orec) {$/;"	f	class:wlpdstm::TransactionEpoch	typeref:typename:bool
CheckForConcurrentReaders	swisstm/src/p-tlrw/transaction.h	/^inline bool wlpdstm::TransactionTlrw::CheckForConcurrentReaders(OwnershipRecord *orec) {$/;"	f	class:wlpdstm::TransactionTlrw	typeref:typename:bool
CheckForConcurrentReaders	swisstm/src/rw/transaction.h	/^inline bool wlpdstm::TransactionRw::CheckForConcurrentReaders(OwnershipRecord *orec) {$/;"	f	class:wlpdstm::TransactionRw	typeref:typename:bool
CheckForConcurrentReaders	swisstm/src/tlrw/transaction.h	/^inline bool wlpdstm::TransactionTlrw::CheckForConcurrentReaders(OwnershipRecord *orec) {$/;"	f	class:wlpdstm::TransactionTlrw	typeref:typename:bool
CheckReader	swisstm/src/epochstm/transaction.h	/^inline bool wlpdstm::TransactionEpoch::CheckReader(Reader reader) {$/;"	f	class:wlpdstm::TransactionEpoch	typeref:typename:bool
ChooseTM	swisstm/src/dynamic/transaction.h	/^inline void wlpdstm::TransactionDynamic::ChooseTM(TmImplementation tm) {$/;"	f	class:wlpdstm::TransactionDynamic	typeref:typename:void
Clean	swisstm/src/stm/privatization_tree.h	/^inline void wlpdstm::PrivatizationTree::Clean() {$/;"	f	class:wlpdstm::PrivatizationTree	typeref:typename:void
CleanupEpoch	swisstm/src/epochstm/memory/memory_epoch.h	/^inline void wlpdstm::MemoryManager::CleanupEpoch(Epoch epoch) {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
CleanupEpoch	swisstm/src/epochstm/memory/memory_leak.h	/^inline void wlpdstm::MemoryManager::CleanupEpoch(Epoch epoch) {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
CleanupThread	swisstm/src/p-tlrw/transaction.h	/^inline void wlpdstm::TransactionTlrw::CleanupThread() {$/;"	f	class:wlpdstm::TransactionTlrw	typeref:typename:void
CleanupThreadStatic	swisstm/src/p-tlrw/transaction.h	/^inline void *wlpdstm::TransactionTlrw::CleanupThreadStatic(void *data) {$/;"	f	class:wlpdstm::TransactionTlrw	typeref:typename:void *
CleanupWorkItem	swisstm/src/epochstm/transaction.h	/^			} CleanupWorkItem;$/;"	t	class:wlpdstm::TransactionEpoch	typeref:struct:wlpdstm::TransactionEpoch::__anon706747f30408
CleanupWriter	swisstm/src/epochstm/transaction.h	/^inline bool wlpdstm::TransactionEpoch::CleanupWriter(OwnershipRecord *orec, WriteLock old_value)/;"	f	class:wlpdstm::TransactionEpoch	typeref:typename:bool
Clear	swisstm/src/dynamic/memory/memory_impl.h	/^		void Clear() {$/;"	f	struct:wlpdstm::PtrBufferT	typeref:typename:void
Clear	swisstm/src/dynamic/memory/memory_impl_priv.h	/^	void Clear() {$/;"	f	struct:wlpdstm::PtrBufferT	typeref:typename:void
Clear	swisstm/src/epochstm/memory/memory_txend.h	/^	void Clear() {$/;"	f	struct:wlpdstm::PtrBufferT	typeref:typename:void
Clear	swisstm/src/p-tlrw/memory/memory_txend.h	/^	void Clear() {$/;"	f	struct:wlpdstm::PtrBufferT	typeref:typename:void
Clear	swisstm/src/rw/memory/memory_txend.h	/^	void Clear() {$/;"	f	struct:wlpdstm::PtrBufferT	typeref:typename:void
Clear	swisstm/src/stm/large_lock_set.h	/^			void Clear() {$/;"	f	class:wlpdstm::LargeLockSet	typeref:typename:void
Clear	swisstm/src/stm/memory/memory_impl.h	/^		void Clear() {$/;"	f	struct:wlpdstm::PtrBufferT	typeref:typename:void
Clear	swisstm/src/stm/memory/memory_impl_priv.h	/^	void Clear() {$/;"	f	struct:wlpdstm::PtrBufferT	typeref:typename:void
Clear	swisstm/src/tlrw/memory/memory_txend.h	/^	void Clear() {$/;"	f	struct:wlpdstm::PtrBufferT	typeref:typename:void
ClearHashWriteSet	swisstm/src/stm/transaction_mixinv.h	/^inline void wlpdstm::TxMixinv::ClearHashWriteSet() {$/;"	f	class:wlpdstm::TxMixinv	typeref:typename:void
ClearSignals	swisstm/src/stm/transaction_mixinv.h	/^inline void wlpdstm::TxMixinv::ClearSignals() {$/;"	f	class:wlpdstm::TxMixinv	typeref:typename:void
ClearWordLogEntries	swisstm/src/dynamic/log.h	/^inline void wlpdstm::WriteLogEntry::ClearWordLogEntries() {$/;"	f	class:wlpdstm::WriteLogEntry	typeref:typename:void
ClearWordLogEntries	swisstm/src/stm/transaction_mixinv.h	/^inline void wlpdstm::TxMixinv::WriteLogEntry::ClearWordLogEntries() {$/;"	f	class:wlpdstm::TxMixinv::WriteLogEntry	typeref:typename:void
CmOnAccess	swisstm/src/dynamic/transaction.h	/^inline void wlpdstm::TransactionDynamic::CmOnAccess() {$/;"	f	class:wlpdstm::TransactionDynamic	typeref:typename:void
CmOnAccess	swisstm/src/stm/transaction_mixinv.h	/^inline void wlpdstm::TxMixinv::CmOnAccess() {$/;"	f	class:wlpdstm::TxMixinv	typeref:typename:void
CmPhase	swisstm/src/dynamic/transaction.h	/^	enum CmPhase {$/;"	g	namespace:wlpdstm
CmPhase	swisstm/src/stm/transaction_mixinv.h	/^		enum CmPhase {$/;"	g	class:wlpdstm::TxMixinv
CmStartTx	swisstm/src/dynamic/transaction.h	/^inline void wlpdstm::TransactionDynamic::CmStartTx() {$/;"	f	class:wlpdstm::TransactionDynamic	typeref:typename:void
CmStartTx	swisstm/src/stm/transaction_mixinv.h	/^inline void wlpdstm::TxMixinv::CmStartTx() {$/;"	f	class:wlpdstm::TxMixinv	typeref:typename:void
Commit	swisstm/src/dynamic/memory/memory_impl.h	/^		void Commit() {$/;"	f	struct:wlpdstm::PtrBufferT	typeref:typename:void
Commit	swisstm/src/dynamic/memory/memory_impl_priv.h	/^	void Commit() {$/;"	f	struct:wlpdstm::PtrBufferT	typeref:typename:void
Commit	swisstm/src/epochstm/memory/memory_txend.h	/^	void Commit() {$/;"	f	struct:wlpdstm::PtrBufferT	typeref:typename:void
Commit	swisstm/src/p-tlrw/memory/memory_txend.h	/^	void Commit() {$/;"	f	struct:wlpdstm::PtrBufferT	typeref:typename:void
Commit	swisstm/src/rw/memory/memory_txend.h	/^	void Commit() {$/;"	f	struct:wlpdstm::PtrBufferT	typeref:typename:void
Commit	swisstm/src/stm/memory/memory_impl.h	/^		void Commit() {$/;"	f	struct:wlpdstm::PtrBufferT	typeref:typename:void
Commit	swisstm/src/stm/memory/memory_impl_priv.h	/^	void Commit() {$/;"	f	struct:wlpdstm::PtrBufferT	typeref:typename:void
Commit	swisstm/src/tlrw/memory/memory_txend.h	/^	void Commit() {$/;"	f	struct:wlpdstm::PtrBufferT	typeref:typename:void
CommitWriteLog	swisstm/src/epochstm/transaction.h	/^inline void wlpdstm::TransactionEpoch::CommitWriteLog() {$/;"	f	class:wlpdstm::TransactionEpoch	typeref:typename:void
CommitWriteLog	swisstm/src/p-tlrw/transaction.h	/^inline void wlpdstm::TransactionTlrw::CommitWriteLog() {$/;"	f	class:wlpdstm::TransactionTlrw	typeref:typename:void
CommitWriteLog	swisstm/src/rw/transaction.h	/^inline void wlpdstm::TransactionRw::CommitWriteLog() {$/;"	f	class:wlpdstm::TransactionRw	typeref:typename:void
CommitWriteLog	swisstm/src/tlrw/transaction.h	/^inline void wlpdstm::TransactionTlrw::CommitWriteLog() {$/;"	f	class:wlpdstm::TransactionTlrw	typeref:typename:void
Config	swisstm/src/common/configuration.h	/^	class Config {$/;"	c	namespace:wlpdstm
ConfigItem	swisstm/src/common/configuration.h	/^		ConfigItem(std::string n, int dv) : name(n), default_value(str_to_int(dv)) {$/;"	f	struct:wlpdstm::ConfigItem
ConfigItem	swisstm/src/common/configuration.h	/^		ConfigItem(std::string n, std::string dv) : name(n), default_value(dv) {$/;"	f	struct:wlpdstm::ConfigItem
ConfigItem	swisstm/src/common/configuration.h	/^	struct ConfigItem {$/;"	s	namespace:wlpdstm
Contains	swisstm/src/stm/large_lock_set.h	/^			bool Contains(uint32_t el) const {$/;"	f	class:wlpdstm::LargeLockSet	typeref:typename:bool
ContentionManager	swisstm/src/epochstm/cm.h	/^	typedef Timid ContentionManager;$/;"	t	namespace:wlpdstm	typeref:typename:Timid
ContentionManager	swisstm/src/p-tlrw/cm.h	/^	typedef Timid ContentionManager;$/;"	t	namespace:wlpdstm	typeref:typename:Timid
ContentionManager	swisstm/src/rw/cm.h	/^	typedef Timid ContentionManager;$/;"	t	namespace:wlpdstm	typeref:typename:Timid
ContentionManager	swisstm/src/tlrw/cm.h	/^	typedef Timid ContentionManager;$/;"	t	namespace:wlpdstm	typeref:typename:Timid
ContinueWaitingForMe	swisstm/src/dynamic/transaction.h	/^inline void wlpdstm::TransactionDynamic::ContinueWaitingForMe() {$/;"	f	class:wlpdstm::TransactionDynamic	typeref:typename:void
CounterOF	swisstm/src/common/atomic.h	/^	class CounterOF : protected AtomicVariable<Word, 0> {$/;"	c	namespace:wlpdstm
CreateReaderArray	swisstm/src/epochstm/transaction.h	/^inline wlpdstm::TransactionEpoch::Reader *wlpdstm::TransactionEpoch::CreateReaderArray() {$/;"	f	class:wlpdstm::TransactionEpoch	typeref:typename:wlpdstm::TransactionEpoch::Reader *
CurrentTransaction	swisstm/src/stm_api/transaction.h	/^	class CurrentTransaction : public Tls<Transaction, true, true> {$/;"	c	namespace:wlpdstm
DEFAULT_DURATION	benchmark_list.c	/^#define DEFAULT_DURATION /;"	d	file:
DEFAULT_DURATION	benchmark_list_move.c	/^#define DEFAULT_DURATION /;"	d	file:
DEFAULT_DURATION	swisstm/src/mubench/intset-list-mv.c	/^#define DEFAULT_DURATION /;"	d	file:
DEFAULT_DURATION	swisstm/src/mubench/intset.c	/^#define DEFAULT_DURATION /;"	d	file:
DEFAULT_FOREST_DELETE_RATIO	swisstm/src/mubench/rbforest.cc	/^#define DEFAULT_FOREST_DELETE_RATIO /;"	d	file:
DEFAULT_FOREST_INSERT_RATIO	swisstm/src/mubench/rbforest.cc	/^#define DEFAULT_FOREST_INSERT_RATIO /;"	d	file:
DEFAULT_FOREST_LOOKUP_RATIO	swisstm/src/mubench/rbforest.cc	/^#define DEFAULT_FOREST_LOOKUP_RATIO /;"	d	file:
DEFAULT_FOREST_SIZE	swisstm/src/mubench/rbforest.cc	/^#define DEFAULT_FOREST_SIZE /;"	d	file:
DEFAULT_INITIAL	swisstm/src/mubench/intset-list-mv.c	/^#define DEFAULT_INITIAL /;"	d	file:
DEFAULT_INITIAL	swisstm/src/mubench/intset.c	/^#define DEFAULT_INITIAL /;"	d	file:
DEFAULT_ISIZE	benchmark_list.c	/^#define DEFAULT_ISIZE /;"	d	file:
DEFAULT_ISIZE	benchmark_list_move.c	/^#define DEFAULT_ISIZE /;"	d	file:
DEFAULT_LOCK_EXTENT_SIZE	swisstm/src/dynamic/transaction.h	/^#define DEFAULT_LOCK_EXTENT_SIZE /;"	d
DEFAULT_LOCK_EXTENT_SIZE	swisstm/src/stm/transaction_mixinv.h	/^#define DEFAULT_LOCK_EXTENT_SIZE /;"	d
DEFAULT_MAX_KEY_VALUE	swisstm/src/mubench/rbforest.cc	/^#define DEFAULT_MAX_KEY_VALUE /;"	d	file:
DEFAULT_MOVE_RATIO	swisstm/src/mubench/rbforest.cc	/^#define DEFAULT_MOVE_RATIO /;"	d	file:
DEFAULT_NB_THREADS	swisstm/src/mubench/intset-list-mv.c	/^#define DEFAULT_NB_THREADS /;"	d	file:
DEFAULT_NB_THREADS	swisstm/src/mubench/intset.c	/^#define DEFAULT_NB_THREADS /;"	d	file:
DEFAULT_NTHREADS	benchmark_list.c	/^#define DEFAULT_NTHREADS /;"	d	file:
DEFAULT_NTHREADS	benchmark_list_move.c	/^#define DEFAULT_NTHREADS /;"	d	file:
DEFAULT_OPERATION_COUNT	swisstm/src/mubench/rbforest.cc	/^#define DEFAULT_OPERATION_COUNT /;"	d	file:
DEFAULT_RANDOM_FREQ	swisstm/src/common/sampling.h	/^#define DEFAULT_RANDOM_FREQ /;"	d
DEFAULT_RANGE	swisstm/src/mubench/intset-list-mv.c	/^#define DEFAULT_RANGE /;"	d	file:
DEFAULT_RANGE	swisstm/src/mubench/intset.c	/^#define DEFAULT_RANGE /;"	d	file:
DEFAULT_SEED	swisstm/src/mubench/intset-list-mv.c	/^#define DEFAULT_SEED /;"	d	file:
DEFAULT_SEED	swisstm/src/mubench/intset.c	/^#define DEFAULT_SEED /;"	d	file:
DEFAULT_THREAD_COUNT	swisstm/src/mubench/rbforest.cc	/^#define DEFAULT_THREAD_COUNT /;"	d	file:
DEFAULT_TREE_DELETE_RATIO	swisstm/src/mubench/rbforest.cc	/^#define DEFAULT_TREE_DELETE_RATIO /;"	d	file:
DEFAULT_TREE_INSERT_RATIO	swisstm/src/mubench/rbforest.cc	/^#define DEFAULT_TREE_INSERT_RATIO /;"	d	file:
DEFAULT_TREE_LOOKUP_RATIO	swisstm/src/mubench/rbforest.cc	/^#define DEFAULT_TREE_LOOKUP_RATIO /;"	d	file:
DEFAULT_UPDATE	swisstm/src/mubench/intset.c	/^#define DEFAULT_UPDATE /;"	d	file:
DEFAULT_URATIO	benchmark_list.c	/^#define DEFAULT_URATIO /;"	d	file:
DEFAULT_VRANGE	benchmark_list.c	/^#define DEFAULT_VRANGE /;"	d	file:
DEFAULT_VRANGE	benchmark_list_move.c	/^#define DEFAULT_VRANGE /;"	d	file:
DEFAULT_ZIPF_DIST_VAL	benchmark_list.c	/^#define DEFAULT_ZIPF_DIST_VAL /;"	d	file:
DEFAULT_ZIPF_DIST_VAL	swisstm/src/mubench/intset.c	/^#define DEFAULT_ZIPF_DIST_VAL /;"	d	file:
DEF_NR_OUTPUT	zipf/test.c	/^#define DEF_NR_OUTPUT	/;"	d	file:
DEF_ZIPF_VAL	zipf/test.c	/^#define DEF_ZIPF_VAL	/;"	d	file:
DELETE_OP	swisstm/src/dynamic/constants.h	/^		DELETE_OP = 3$/;"	e	enum:wlpdstm::OperationType
DELETE_OP	swisstm/src/stm/constants.h	/^		DELETE_OP = 3$/;"	e	enum:wlpdstm::OperationType
DETAILED_STATS	swisstm/Makefile.in	/^	DETAILED_STATS = no$/;"	m
DETAILED_STATS_CPPFLAGS_no	swisstm/Makefile.in	/^DETAILED_STATS_CPPFLAGS_no =$/;"	m
DETAILED_STATS_CPPFLAGS_yes	swisstm/Makefile.in	/^DETAILED_STATS_CPPFLAGS_yes = -D DETAILED_STATS$/;"	m
DYNAMIC_SRC_DIR	swisstm/Makefile.in	/^DYNAMIC_SRC_DIR = $(SRC_DIR)\/dynamic$/;"	m
ENABLE_PERFORMANCE_COUNTING	swisstm/Makefile.in	/^    ENABLE_PERFORMANCE_COUNTING = yes$/;"	m
END_TRANSACTION	swisstm/src/include/stm.h	/^#define END_TRANSACTION	/;"	d
END_TRANSACTION_DESC	swisstm/src/include/stm.h	/^#define END_TRANSACTION_DESC	/;"	d
EPOCHSTM_SRC_DIR	swisstm/Makefile.in	/^EPOCHSTM_SRC_DIR = $(SRC_DIR)\/epochstm$/;"	m
EPOCHS_IN_WORD	swisstm/src/epochstm/constants.h	/^	const unsigned EPOCHS_IN_WORD = sizeof(Word) \/ sizeof(Epoch);$/;"	v	namespace:wlpdstm	typeref:typename:const unsigned
EPOCH_MASK	swisstm/src/epochstm/constants.h	/^	const uint16_t EPOCH_MASK = 0xffff;$/;"	v	namespace:wlpdstm	typeref:typename:const uint16_t
EPOCH_MASK	swisstm/src/epochstm/constants.h	/^	const uint8_t EPOCH_MASK = 0xff;$/;"	v	namespace:wlpdstm	typeref:typename:const uint8_t
EPOCH_SIZE_IN_BYTES_2	swisstm/src/epochstm/constants.h	/^#define EPOCH_SIZE_IN_BYTES_2$/;"	d
ESTIMATE_FUN_PROFILING_COST	swisstm/src/common/profiling/adaptive.h	/^#define ESTIMATE_FUN_PROFILING_COST(/;"	d
ESTIMATE_FUN_PROFILING_COST	swisstm/src/common/profiling/non_tx_duration.h	/^#define ESTIMATE_FUN_PROFILING_COST(/;"	d
ESTIMATE_FUN_PROFILING_COST	swisstm/src/common/profiling/tx_duration.h	/^#define ESTIMATE_FUN_PROFILING_COST(/;"	d
ESTIMATE_FUN_PROFILING_COST	swisstm/src/dynamic/profiling/adaptive_dynamic.h	/^#define ESTIMATE_FUN_PROFILING_COST(/;"	d
EXTEND_FAILURE	swisstm/src/dynamic/stats.h	/^			EXTEND_FAILURE,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
EXTEND_FAILURE	swisstm/src/stm/stats.h	/^			EXTEND_FAILURE,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
EXTEND_SUCCESS	swisstm/src/dynamic/stats.h	/^			EXTEND_SUCCESS,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
EXTEND_SUCCESS	swisstm/src/stm/stats.h	/^			EXTEND_SUCCESS,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
EnableThreadCancelation	swisstm/src/p-tlrw/transaction.h	/^inline void wlpdstm::TransactionTlrw::EnableThreadCancelation() {$/;"	f	class:wlpdstm::TransactionTlrw	typeref:typename:void
End	swisstm/src/common/perfcnt/perf_cnt_papi.h	/^inline void wlpdstm::PerfCntPapi::End() {$/;"	f	class:wlpdstm::PerfCntPapi	typeref:typename:void
End	swisstm/src/common/perfcnt/perf_cnt_solaris.h	/^inline void wlpdstm::PerfCntSolaris::End() {$/;"	f	class:wlpdstm::PerfCntSolaris	typeref:typename:void
EndProfilingTx	swisstm/src/common/profiling/adaptive.h	/^inline void wlpdstm::AdaptiveProfiling<STATS, STATS_TYPE>::EndProfilingTx(uint64_t tx_duration) /;"	f	class:wlpdstm::AdaptiveProfiling	typeref:typename:void
EndProfilingTx	swisstm/src/common/profiling/non_tx_duration.h	/^inline void wlpdstm::NonTxDurationProfiling<STATS, STATS_TYPE>::EndProfilingTx(uint64_t tx_durat/;"	f	class:wlpdstm::NonTxDurationProfiling	typeref:typename:void
EndProfilingTx	swisstm/src/common/profiling/tx_duration.h	/^inline void wlpdstm::TxDurationProfiling<STATS, STATS_TYPE>::EndProfilingTx(uint64_t tx_duration/;"	f	class:wlpdstm::TxDurationProfiling	typeref:typename:void
EndProfilingTx	swisstm/src/dynamic/profiling/adaptive_dynamic.h	/^inline void wlpdstm::AdaptiveDynamicProfiling<STATS, STATS_TYPE>::EndProfilingTx(uint64_t tx_dur/;"	f	class:wlpdstm::AdaptiveDynamicProfiling	typeref:typename:void
EndSynchronization	swisstm/src/dynamic/transaction.h	/^inline void wlpdstm::TransactionDynamic::EndSynchronization() {$/;"	f	class:wlpdstm::TransactionDynamic	typeref:typename:void
EndSynchronization	swisstm/src/stm/transaction_mixinv.h	/^inline void wlpdstm::TxMixinv::EndSynchronization() {$/;"	f	class:wlpdstm::TxMixinv	typeref:typename:void
EndThreadProfiling	swisstm/src/dynamic/transaction.h	/^inline void wlpdstm::TransactionDynamic::EndThreadProfiling() {$/;"	f	class:wlpdstm::TransactionDynamic	typeref:typename:void
EndThreadProfiling	swisstm/src/stm/transaction_mixinv.h	/^inline void wlpdstm::TxMixinv::EndThreadProfiling() {$/;"	f	class:wlpdstm::TxMixinv	typeref:typename:void
Energy	swisstm/src/common/energy.h	/^	class Energy {$/;"	c	namespace:wlpdstm
Epoch	swisstm/src/epochstm/constants.h	/^	typedef uint16_t Epoch;$/;"	t	namespace:wlpdstm	typeref:typename:uint16_t
Epoch	swisstm/src/epochstm/constants.h	/^	typedef uint8_t Epoch;$/;"	t	namespace:wlpdstm	typeref:typename:uint8_t
EpochSTMStats	swisstm/src/epochstm/stats.h	/^	class EpochSTMStats {$/;"	c	namespace:wlpdstm
EstimateProfilingCosts	swisstm/src/common/profiling/adaptive.h	/^inline void wlpdstm::AdaptiveProfiling<STATS, STATS_TYPE>::EstimateProfilingCosts() {$/;"	f	class:wlpdstm::AdaptiveProfiling	typeref:typename:void
EstimateProfilingCosts	swisstm/src/common/profiling/non_tx_duration.h	/^inline void wlpdstm::NonTxDurationProfiling<STATS, STATS_TYPE>::EstimateProfilingCosts() {$/;"	f	class:wlpdstm::NonTxDurationProfiling	typeref:typename:void
EstimateProfilingCosts	swisstm/src/common/profiling/tx_duration.h	/^inline void wlpdstm::TxDurationProfiling<STATS, STATS_TYPE>::EstimateProfilingCosts() {$/;"	f	class:wlpdstm::TxDurationProfiling	typeref:typename:void
EstimateProfilingCosts	swisstm/src/dynamic/profiling/adaptive_dynamic.h	/^inline void wlpdstm::AdaptiveDynamicProfiling<STATS, STATS_TYPE>::EstimateProfilingCosts() {$/;"	f	class:wlpdstm::AdaptiveDynamicProfiling	typeref:typename:void
Extend	swisstm/src/dynamic/eager/eager_impl_inline.h	/^inline bool wlpdstm::TxEager::Extend(TransactionDynamic *desc) {$/;"	f	class:wlpdstm::TxEager	typeref:typename:bool
Extend	swisstm/src/dynamic/lazy/lazy_impl_inline.h	/^inline bool wlpdstm::TxLazy::Extend(TransactionDynamic *desc) {$/;"	f	class:wlpdstm::TxLazy	typeref:typename:bool
Extend	swisstm/src/dynamic/mixed/mixed_inline_fun.h	/^inline bool wlpdstm::TxMixed::Extend(TransactionDynamic *desc) {$/;"	f	class:wlpdstm::TxMixed	typeref:typename:bool
Extend	swisstm/src/stm/transaction_mixinv.h	/^inline bool wlpdstm::TxMixinv::Extend() {$/;"	f	class:wlpdstm::TxMixinv	typeref:typename:bool
FALSE	swisstm/src/mubench/types.h	/^    FALSE = 0,$/;"	e	enum:__anoncebd37810103
FALSE_ABORTS_READ	swisstm/src/dynamic/stats.h	/^			FALSE_ABORTS_READ,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
FALSE_ABORTS_READ	swisstm/src/stm/stats.h	/^			FALSE_ABORTS_READ,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
FALSE_ABORTS_WRITE	swisstm/src/dynamic/stats.h	/^			FALSE_ABORTS_WRITE,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
FALSE_ABORTS_WRITE	swisstm/src/stm/stats.h	/^			FALSE_ABORTS_WRITE,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
FALSE_CONFLICTS	swisstm/src/dynamic/stats.h	/^			FALSE_CONFLICTS,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
FALSE_CONFLICTS	swisstm/src/stm/stats.h	/^			FALSE_CONFLICTS,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
FETCH_AND_ADD	rlu.c	/^#define FETCH_AND_ADD(/;"	d	file:
FETCH_AND_ADD	util.h	/^#define FETCH_AND_ADD(/;"	d
FIO_MIN_MAX_H	zipf/minmax.h	/^#define FIO_MIN_MAX_H$/;"	d
FIO_RAND_H	zipf/rand.h	/^#define FIO_RAND_H$/;"	d
FIO_TYPES_H	zipf/types.h	/^#define FIO_TYPES_H$/;"	d
FIO_ZIPF_H	zipf/zipf.h	/^#define FIO_ZIPF_H$/;"	d
FIX_AFTER_DELETION	swisstm/src/mubench/rbtree.c	/^#define FIX_AFTER_DELETION(/;"	d	file:
FIX_AFTER_INSERTION	swisstm/src/mubench/rbtree.c	/^#define FIX_AFTER_INSERTION(/;"	d	file:
FLIST_HEAD	zipf/flist.h	/^#define FLIST_HEAD(/;"	d
FLIST_HEAD_INIT	zipf/flist.h	/^#define FLIST_HEAD_INIT(/;"	d
FORCE_ACTUAL	rlu.c	/^#define FORCE_ACTUAL(/;"	d	file:
FRAND32_MAX	zipf/rand.h	/^#define FRAND32_MAX	/;"	d
FRAND64_MAX	zipf/rand.h	/^#define FRAND64_MAX	/;"	d
FREE	swisstm/src/mubench/tm_spec.h	/^#define FREE(/;"	d
FREE_DOMINATED	swisstm/src/dynamic/stats.h	/^			FREE_DOMINATED,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
FREE_DOMINATED	swisstm/src/stm/stats.h	/^			FREE_DOMINATED,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
FULL_VERSION_LOCK_TABLE_SIZE	swisstm/src/dynamic/transaction.h	/^#define FULL_VERSION_LOCK_TABLE_SIZE /;"	d
FULL_VERSION_LOCK_TABLE_SIZE	swisstm/src/stm/transaction_mixinv.h	/^#define FULL_VERSION_LOCK_TABLE_SIZE /;"	d
FindWordLogEntry	swisstm/src/dynamic/log.h	/^inline wlpdstm::WriteWordLogEntry *wlpdstm::WriteLogEntry::FindWordLogEntry(Word *address) {$/;"	f	class:wlpdstm::WriteLogEntry	typeref:typename:wlpdstm::WriteWordLogEntry *
FindWordLogEntry	swisstm/src/stm/transaction_mixinv.h	/^inline wlpdstm::TxMixinv::WriteWordLogEntry *wlpdstm::TxMixinv::WriteLogEntry::FindWordLogEntry(/;"	f	class:wlpdstm::TxMixinv::WriteLogEntry	typeref:typename:wlpdstm::TxMixinv::WriteWordLogEntry *
FirstWriteSetFunPtr	swisstm/src/dynamic/eager/eager_impl_inline.h	/^inline void wlpdstm::TxEager::FirstWriteSetFunPtr(TransactionDynamic *desc) {$/;"	f	class:wlpdstm::TxEager	typeref:typename:void
FirstWriteSetFunPtr	swisstm/src/dynamic/lazy/lazy_impl_inline.h	/^inline void wlpdstm::TxLazy::FirstWriteSetFunPtr(TransactionDynamic *desc) {$/;"	f	class:wlpdstm::TxLazy	typeref:typename:void
FirstWriteSetFunPtr	swisstm/src/dynamic/mixed/mixed_inline_fun.h	/^inline void wlpdstm::TxMixed::FirstWriteSetFunPtr(TransactionDynamic *desc) {$/;"	f	class:wlpdstm::TxMixed	typeref:typename:void
FirstWriteSetFunPtrProfiled	swisstm/src/dynamic/eager/eager_impl_inline.h	/^inline void wlpdstm::TxLazy::FirstWriteSetFunPtrProfiled(TransactionDynamic *desc) {$/;"	f	class:wlpdstm::TxLazy	typeref:typename:void
FirstWriteSetFunPtrProfiled	swisstm/src/dynamic/lazy/lazy_impl_inline.h	/^inline void wlpdstm::TxLazy::FirstWriteSetFunPtrProfiled(TransactionDynamic *desc) {$/;"	f	class:wlpdstm::TxLazy	typeref:typename:void
FirstWriteSetFunPtrProfiled	swisstm/src/dynamic/mixed/mixed_inline_fun.h	/^inline void wlpdstm::TxMixed::FirstWriteSetFunPtrProfiled(TransactionDynamic *desc) {$/;"	f	class:wlpdstm::TxMixed	typeref:typename:void
Free	swisstm/src/common/alloc.h	/^			static void Free(void *ptr) {$/;"	f	class:wlpdstm::Alloc	typeref:typename:void
Free	swisstm/src/common/atomic.h	/^				Free,$/;"	e	enum:wlpdstm::PaddedSpinTryLock::SpinLockState
Free	swisstm/src/dynamic/memory/memory_impl.h	/^inline void wlpdstm::MemoryManager::Free(void *ptr) {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
Free	swisstm/src/dynamic/memory/memory_impl_priv.h	/^inline void wlpdstm::MemoryManager::Free(void *ptr) {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
Free	swisstm/src/stm/memory/memory_impl.h	/^inline void wlpdstm::MemoryManager::Free(void *ptr) {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
Free	swisstm/src/stm/memory/memory_impl_priv.h	/^inline void wlpdstm::MemoryManager::Free(void *ptr) {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
FreeDominated	swisstm/src/dynamic/memory/memory_impl.h	/^inline void wlpdstm::MemoryManager::FreeDominated() {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
FreeDominated	swisstm/src/stm/memory/memory_impl.h	/^inline void wlpdstm::MemoryManager::FreeDominated() {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
FreeMemoryPtr	swisstm/src/dynamic/memory/memory_impl.h	/^inline void wlpdstm::MemoryManager::FreeMemoryPtr(void *ptr) {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
FreeMemoryPtr	swisstm/src/dynamic/memory/memory_impl_priv.h	/^inline void wlpdstm::MemoryManager::FreeMemoryPtr(void *ptr) {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
FreeMemoryPtr	swisstm/src/epochstm/memory/memory_txend.h	/^inline void wlpdstm::MemoryManager::FreeMemoryPtr(void *ptr) {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
FreeMemoryPtr	swisstm/src/p-tlrw/memory/memory_txend.h	/^inline void wlpdstm::MemoryManager::FreeMemoryPtr(void *ptr) {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
FreeMemoryPtr	swisstm/src/rw/memory/memory_txend.h	/^inline void wlpdstm::MemoryManager::FreeMemoryPtr(void *ptr) {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
FreeMemoryPtr	swisstm/src/stm/memory/memory_impl.h	/^inline void wlpdstm::MemoryManager::FreeMemoryPtr(void *ptr) {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
FreeMemoryPtr	swisstm/src/stm/memory/memory_impl_priv.h	/^inline void wlpdstm::MemoryManager::FreeMemoryPtr(void *ptr) {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
FreeMemoryPtr	swisstm/src/tlrw/memory/memory_txend.h	/^inline void wlpdstm::MemoryManager::FreeMemoryPtr(void *ptr) {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
FreePtrs	swisstm/src/dynamic/memory/memory_impl.h	/^inline void wlpdstm::MemoryManager::FreePtrs(PtrBuffer *buf) {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
FreePtrs	swisstm/src/dynamic/memory/memory_impl_priv.h	/^inline void wlpdstm::MemoryManager::FreePtrs(PtrBuffer *buf) {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
FreePtrs	swisstm/src/epochstm/memory/memory_txend.h	/^inline void wlpdstm::MemoryManager::FreePtrs(PtrBuffer *buf) {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
FreePtrs	swisstm/src/p-tlrw/memory/memory_txend.h	/^inline void wlpdstm::MemoryManager::FreePtrs(PtrBuffer *buf) {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
FreePtrs	swisstm/src/rw/memory/memory_txend.h	/^inline void wlpdstm::MemoryManager::FreePtrs(PtrBuffer *buf) {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
FreePtrs	swisstm/src/stm/memory/memory_impl.h	/^inline void wlpdstm::MemoryManager::FreePtrs(PtrBuffer *buf) {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
FreePtrs	swisstm/src/stm/memory/memory_impl_priv.h	/^inline void wlpdstm::MemoryManager::FreePtrs(PtrBuffer *buf) {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
FreePtrs	swisstm/src/tlrw/memory/memory_txend.h	/^inline void wlpdstm::MemoryManager::FreePtrs(PtrBuffer *buf) {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
FreeReaderArray	swisstm/src/epochstm/transaction.h	/^inline void wlpdstm::TransactionEpoch::FreeReaderArray(Reader *first_in_array) {$/;"	f	class:wlpdstm::TransactionEpoch	typeref:typename:void
GET_ACTUAL	rlu.c	/^#define GET_ACTUAL(/;"	d	file:
GET_COPY	rlu.c	/^#define GET_COPY(/;"	d	file:
GET_THREAD_ID	rlu.c	/^#define GET_THREAD_ID(/;"	d	file:
GET_TX_ID_CNT	swisstm/src/epochstm/transaction.h	/^#define GET_TX_ID_CNT(/;"	d
GET_TX_ID_THREAD	swisstm/src/epochstm/transaction.h	/^#define GET_TX_ID_THREAD(/;"	d
GNU_CPP	swisstm/Makefile.in	/^GNU_CPP = g++$/;"	m
GOLDEN_RATIO_32	zipf/hash.h	/^#define GOLDEN_RATIO_32 /;"	d
GOLDEN_RATIO_64	zipf/hash.h	/^#define GOLDEN_RATIO_64 /;"	d
GOLDEN_RATIO_PRIME	zipf/hash.h	/^#define GOLDEN_RATIO_PRIME /;"	d
GOTO_REAL	swisstm/src/mubench/tm.h	/^#  define GOTO_REAL(/;"	d
GOTO_SIM	swisstm/src/mubench/tm.h	/^#  define GOTO_SIM(/;"	d
GREEN_CM	swisstm/Makefile.in	/^	GREEN_CM = no$/;"	m
GREEN_CM_CONTINUE	swisstm/src/dynamic/transaction.h	/^		GREEN_CM_CONTINUE = 1,$/;"	e	enum:wlpdstm::GreenCMDecision
GREEN_CM_CPPFLAGS_no	swisstm/Makefile.in	/^GREEN_CM_CPPFLAGS_no =$/;"	m
GREEN_CM_CPPFLAGS_yes	swisstm/Makefile.in	/^GREEN_CM_CPPFLAGS_yes = -D GREEN_CM$/;"	m
GREEN_CM_NO_DECISION	swisstm/src/dynamic/transaction.h	/^		GREEN_CM_NO_DECISION = 0,$/;"	e	enum:wlpdstm::GreenCMDecision
GREEN_CM_RESTART	swisstm/src/dynamic/transaction.h	/^		GREEN_CM_RESTART = 2$/;"	e	enum:wlpdstm::GreenCMDecision
GatherOwnershipTableStats	swisstm/src/epochstm/transaction.h	/^inline void wlpdstm::TransactionEpoch::GatherOwnershipTableStats(OrecTableReadStats &read_stats)/;"	f	class:wlpdstm::TransactionEpoch	typeref:typename:void
GenerateTsGV4	swisstm/src/dynamic/timestamp.h	/^inline Word wlpdstm::GlobalTimestamp::GenerateTsGV4() {$/;"	f	class:wlpdstm::GlobalTimestamp	typeref:typename:Word
GenerateTsGV4	swisstm/src/stm/timestamp.h	/^inline Word wlpdstm::GlobalTimestamp::GenerateTsGV4() {$/;"	f	class:wlpdstm::GlobalTimestamp	typeref:typename:Word
Get	swisstm/src/common/random.h	/^			int Get() {$/;"	f	class:wlpdstm::Random	typeref:typename:int
Get	swisstm/src/common/stats_base.h	/^		uint64_t Get(Type stat) {$/;"	f	class:wlpdstm::StatsBase	typeref:typename:uint64_t
Get	swisstm/src/common/tid.h	/^			unsigned Get() {$/;"	f	class:wlpdstm::Tid	typeref:typename:unsigned
Get	swisstm/src/common/tls.h	/^			static T *Get() {$/;"	f	class:wlpdstm::Tls	typeref:typename:T *
Get	swisstm/src/common/tls.h	/^inline T *wlpdstm::Tls<T, GLOBAL_INIT, THREAD_INIT>::Get() {$/;"	f	class:wlpdstm::Tls	typeref:typename:T *
GetAverageStats	swisstm/src/dynamic/stats.h	/^		static const AverageStat *GetAverageStats() {$/;"	f	class:wlpdstm::TxMixinvStats	typeref:typename:const AverageStat *
GetAverageStats	swisstm/src/epochstm/stats.h	/^		static const AverageStat *GetAverageStats() {$/;"	f	class:wlpdstm::EpochSTMStats	typeref:typename:const AverageStat *
GetAverageStats	swisstm/src/p-tlrw/stats.h	/^		static const AverageStat *GetAverageStats() {$/;"	f	class:wlpdstm::TlrwStats	typeref:typename:const AverageStat *
GetAverageStats	swisstm/src/rw/stats.h	/^		static const AverageStat *GetAverageStats() {$/;"	f	class:wlpdstm::RwStats	typeref:typename:const AverageStat *
GetAverageStats	swisstm/src/stm/stats.h	/^		static const AverageStat *GetAverageStats() {$/;"	f	class:wlpdstm::TxMixinvStats	typeref:typename:const AverageStat *
GetAverageStats	swisstm/src/tlrw/stats.h	/^		static const AverageStat *GetAverageStats() {$/;"	f	class:wlpdstm::TlrwStats	typeref:typename:const AverageStat *
GetCacheMisses	swisstm/src/common/perfcnt/perf_cnt_papi.h	/^inline uint64_t wlpdstm::PerfCntPapi::GetCacheMisses() {$/;"	f	class:wlpdstm::PerfCntPapi	typeref:typename:uint64_t
GetCacheMisses	swisstm/src/common/perfcnt/perf_cnt_solaris.h	/^inline uint64_t wlpdstm::PerfCntSolaris::GetCacheMisses() {$/;"	f	class:wlpdstm::PerfCntSolaris	typeref:typename:uint64_t
GetCacheMisses	swisstm/src/dynamic/perf_cnt.h	/^            uint64_t GetCacheMisses() {$/;"	f	class:wlpdstm::PerfCnt	typeref:typename:uint64_t
GetCleanPtrBuffer	swisstm/src/dynamic/memory/memory_impl.h	/^inline wlpdstm::PtrBuffer *wlpdstm::MemoryManager::GetCleanPtrBuffer() {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:wlpdstm::PtrBuffer *
GetCleanPtrBuffer	swisstm/src/dynamic/memory/memory_impl_priv.h	/^inline wlpdstm::PtrBuffer *wlpdstm::MemoryManager::GetCleanPtrBuffer() {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:wlpdstm::PtrBuffer *
GetCleanPtrBuffer	swisstm/src/epochstm/memory/memory_txend.h	/^inline wlpdstm::PtrBuffer *wlpdstm::MemoryManager::GetCleanPtrBuffer() {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:wlpdstm::PtrBuffer *
GetCleanPtrBuffer	swisstm/src/p-tlrw/memory/memory_txend.h	/^inline wlpdstm::PtrBuffer *wlpdstm::MemoryManager::GetCleanPtrBuffer() {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:wlpdstm::PtrBuffer *
GetCleanPtrBuffer	swisstm/src/rw/memory/memory_txend.h	/^inline wlpdstm::PtrBuffer *wlpdstm::MemoryManager::GetCleanPtrBuffer() {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:wlpdstm::PtrBuffer *
GetCleanPtrBuffer	swisstm/src/stm/memory/memory_impl.h	/^inline wlpdstm::PtrBuffer *wlpdstm::MemoryManager::GetCleanPtrBuffer() {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:wlpdstm::PtrBuffer *
GetCleanPtrBuffer	swisstm/src/stm/memory/memory_impl_priv.h	/^inline wlpdstm::PtrBuffer *wlpdstm::MemoryManager::GetCleanPtrBuffer() {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:wlpdstm::PtrBuffer *
GetCleanPtrBuffer	swisstm/src/tlrw/memory/memory_txend.h	/^inline wlpdstm::PtrBuffer *wlpdstm::MemoryManager::GetCleanPtrBuffer() {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:wlpdstm::PtrBuffer *
GetCounter	swisstm/src/common/tid.h	/^			static CounterOF &GetCounter() {$/;"	f	class:wlpdstm::Tid	typeref:typename:CounterOF &
GetCpuMap	swisstm/src/p-tlrw/transaction.h	/^inline int wlpdstm::TransactionTlrw::GetCpuMap(unsigned thread_id) {$/;"	f	class:wlpdstm::TransactionTlrw	typeref:typename:int
GetElapsedCycles	swisstm/src/common/perfcnt/perf_cnt_papi.h	/^inline uint64_t wlpdstm::PerfCntPapi::GetElapsedCycles() {$/;"	f	class:wlpdstm::PerfCntPapi	typeref:typename:uint64_t
GetElapsedCycles	swisstm/src/common/perfcnt/perf_cnt_solaris.h	/^inline uint64_t wlpdstm::PerfCntSolaris::GetElapsedCycles() {$/;"	f	class:wlpdstm::PerfCntSolaris	typeref:typename:uint64_t
GetElapsedCycles	swisstm/src/dynamic/perf_cnt.h	/^            uint64_t GetElapsedCycles() {$/;"	f	class:wlpdstm::PerfCnt	typeref:typename:uint64_t
GetFreeMemoryBlock	swisstm/src/epochstm/memory/memory_epoch.h	/^inline wlpdstm::MemoryBlock *wlpdstm::MemoryManager::GetFreeMemoryBlock() {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:wlpdstm::MemoryBlock *
GetImplementationVariant	swisstm/src/dynamic/transaction.h	/^inline unsigned wlpdstm::TransactionDynamic::GetImplementationVariant(unsigned tm_implementation/;"	f	class:wlpdstm::TransactionDynamic	typeref:typename:unsigned
GetLongJmpBuf	swisstm/src/stm_api/transaction.h	/^		static LONG_JMP_BUF *GetLongJmpBuf() {$/;"	f	class:wlpdstm::CurrentTransaction	typeref:typename:LONG_JMP_BUF *
GetMinimumObservedTs	swisstm/src/dynamic/transaction.h	/^inline Word wlpdstm::TransactionDynamic::GetMinimumObservedTs() {$/;"	f	class:wlpdstm::TransactionDynamic	typeref:typename:Word
GetMinimumObservedTs	swisstm/src/stm/transaction_mixinv.h	/^inline Word wlpdstm::TxMixinv::GetMinimumObservedTs() {$/;"	f	class:wlpdstm::TxMixinv	typeref:typename:Word
GetNextSetPointers	swisstm/src/p-tlrw/transaction.h	/^inline void wlpdstm::TransactionTlrw::GetNextSetPointers() {$/;"	f	class:wlpdstm::TransactionTlrw	typeref:typename:void
GetNextTxCounter	swisstm/src/p-tlrw/transaction.h	/^inline wlpdstm::TransactionTlrw::TxCounter wlpdstm::TransactionTlrw::GetNextTxCounter(TxCounter /;"	f	class:wlpdstm::TransactionTlrw	typeref:typename:wlpdstm::TransactionTlrw::TxCounter
GetProfilingVariant	swisstm/src/dynamic/transaction.h	/^inline unsigned wlpdstm::TransactionDynamic::GetProfilingVariant(unsigned tm_implementation) {$/;"	f	class:wlpdstm::TransactionDynamic	typeref:typename:unsigned
GetReader	swisstm/src/epochstm/transaction.h	/^inline wlpdstm::TransactionEpoch::Reader *wlpdstm::TransactionEpoch::GetReader(unsigned orec_idx/;"	f	class:wlpdstm::TransactionEpoch	typeref:typename:wlpdstm::TransactionEpoch::Reader *
GetRetiredInstructions	swisstm/src/common/perfcnt/perf_cnt_papi.h	/^inline uint64_t wlpdstm::PerfCntPapi::GetRetiredInstructions() {$/;"	f	class:wlpdstm::PerfCntPapi	typeref:typename:uint64_t
GetRetiredInstructions	swisstm/src/common/perfcnt/perf_cnt_solaris.h	/^inline uint64_t wlpdstm::PerfCntSolaris::GetRetiredInstructions() {$/;"	f	class:wlpdstm::PerfCntSolaris	typeref:typename:uint64_t
GetRetiredInstructions	swisstm/src/dynamic/perf_cnt.h	/^            uint64_t GetRetiredInstructions() {$/;"	f	class:wlpdstm::PerfCnt	typeref:typename:uint64_t
GetSize	swisstm/src/dynamic/memory/memory_impl.h	/^		unsigned GetSize() const {$/;"	f	struct:wlpdstm::PtrBufferT	typeref:typename:unsigned
GetSize	swisstm/src/dynamic/memory/memory_impl_priv.h	/^	unsigned GetSize() const {$/;"	f	struct:wlpdstm::PtrBufferT	typeref:typename:unsigned
GetSize	swisstm/src/epochstm/memory/memory_txend.h	/^	unsigned GetSize() const {$/;"	f	struct:wlpdstm::PtrBufferT	typeref:typename:unsigned
GetSize	swisstm/src/p-tlrw/memory/memory_txend.h	/^	unsigned GetSize() const {$/;"	f	struct:wlpdstm::PtrBufferT	typeref:typename:unsigned
GetSize	swisstm/src/rw/memory/memory_txend.h	/^	unsigned GetSize() const {$/;"	f	struct:wlpdstm::PtrBufferT	typeref:typename:unsigned
GetSize	swisstm/src/stm/memory/memory_impl.h	/^		unsigned GetSize() const {$/;"	f	struct:wlpdstm::PtrBufferT	typeref:typename:unsigned
GetSize	swisstm/src/stm/memory/memory_impl_priv.h	/^	unsigned GetSize() const {$/;"	f	struct:wlpdstm::PtrBufferT	typeref:typename:unsigned
GetSize	swisstm/src/tlrw/memory/memory_txend.h	/^	unsigned GetSize() const {$/;"	f	struct:wlpdstm::PtrBufferT	typeref:typename:unsigned
GetStatForLexicalTx	swisstm/src/common/stats_base.h	/^		inline uint64_t GetStatForLexicalTx(Type type) {$/;"	f	struct:wlpdstm::ThreadStatsBase	typeref:typename:uint64_t
GetThreadId	swisstm/src/dynamic/transaction.h	/^inline int wlpdstm::TransactionDynamic::GetThreadId() {$/;"	f	class:wlpdstm::TransactionDynamic	typeref:typename:int
GetThreadId	swisstm/src/p-tlrw/transaction.h	/^				uint8_t GetThreadId() const {$/;"	f	class:wlpdstm::TransactionTlrw::ReadSet	typeref:typename:uint8_t
GetThreadId	swisstm/src/p-tlrw/transaction.h	/^				uint8_t GetThreadId() const {$/;"	f	class:wlpdstm::TransactionTlrw::WriteSet	typeref:typename:uint8_t
GetThreadId	swisstm/src/stm/transaction_mixinv.h	/^inline int wlpdstm::TxMixinv::GetThreadId() {$/;"	f	class:wlpdstm::TxMixinv	typeref:typename:int
GetTouchedOrecsCount	swisstm/src/epochstm/transaction.h	/^inline unsigned wlpdstm::TransactionEpoch::GetTouchedOrecsCount() {$/;"	f	class:wlpdstm::TransactionEpoch	typeref:typename:unsigned
GetTransactionId	swisstm/src/dynamic/transaction.h	/^inline int wlpdstm::TransactionDynamic::GetTransactionId() const {$/;"	f	class:wlpdstm::TransactionDynamic	typeref:typename:int
GetTransactionId	swisstm/src/stm/transaction_mixinv.h	/^inline int wlpdstm::TxMixinv::GetTransactionId() const {$/;"	f	class:wlpdstm::TxMixinv	typeref:typename:int
GetTxStatus	swisstm/src/dynamic/transaction.h	/^inline wlpdstm::TxStatus wlpdstm::TransactionDynamic::GetTxStatus() const {$/;"	f	class:wlpdstm::TransactionDynamic	typeref:typename:wlpdstm::TxStatus
GetTxStatus	swisstm/src/stm/transaction_mixinv.h	/^inline wlpdstm::TxMixinv::TxStatus wlpdstm::TxMixinv::GetTxStatus() const {$/;"	f	class:wlpdstm::TxMixinv	typeref:typename:wlpdstm::TxMixinv::TxStatus
GetTypeName	swisstm/src/dynamic/stats.h	/^		static const char *GetTypeName(Type type) {$/;"	f	class:wlpdstm::TxMixinvStats	typeref:typename:const char *
GetTypeName	swisstm/src/epochstm/stats.h	/^		static const char *GetTypeName(Type type) {$/;"	f	class:wlpdstm::EpochSTMStats	typeref:typename:const char *
GetTypeName	swisstm/src/p-tlrw/stats.h	/^		static const char *GetTypeName(Type type) {$/;"	f	class:wlpdstm::TlrwStats	typeref:typename:const char *
GetTypeName	swisstm/src/rw/stats.h	/^		static const char *GetTypeName(Type type) {$/;"	f	class:wlpdstm::RwStats	typeref:typename:const char *
GetTypeName	swisstm/src/stm/stats.h	/^		static const char *GetTypeName(Type type) {$/;"	f	class:wlpdstm::TxMixinvStats	typeref:typename:const char *
GetTypeName	swisstm/src/tlrw/stats.h	/^		static const char *GetTypeName(Type type) {$/;"	f	class:wlpdstm::TlrwStats	typeref:typename:const char *
GetValueInt	swisstm/src/common/configuration.h	/^bool wlpdstm::Config::GetValueInt(std::string name, int &value) {$/;"	f	class:wlpdstm::Config	typeref:typename:bool
GetValueString	swisstm/src/common/configuration.h	/^bool wlpdstm::Config::GetValueString(std::string name, std::string &value) {$/;"	f	class:wlpdstm::Config	typeref:typename:bool
GlobalInit	swisstm/src/common/perfcnt/perf_cnt_papi.h	/^inline void wlpdstm::PerfCntPapi::GlobalInit() {$/;"	f	class:wlpdstm::PerfCntPapi	typeref:typename:void
GlobalInit	swisstm/src/common/perfcnt/perf_cnt_solaris.h	/^inline void wlpdstm::PerfCntSolaris::GlobalInit() {$/;"	f	class:wlpdstm::PerfCntSolaris	typeref:typename:void
GlobalInit	swisstm/src/common/profiling/adaptive.h	/^			static void GlobalInit() {$/;"	f	class:wlpdstm::AdaptiveProfiling	typeref:typename:void
GlobalInit	swisstm/src/common/profiling/base.h	/^			static void GlobalInit() {$/;"	f	class:wlpdstm::BaseProfiling	typeref:typename:void
GlobalInit	swisstm/src/common/profiling/non_tx_duration.h	/^			static void GlobalInit() {$/;"	f	class:wlpdstm::NonTxDurationProfiling	typeref:typename:void
GlobalInit	swisstm/src/common/profiling/non_tx_duration_pcnt_simple.h	/^			static void GlobalInit() {$/;"	f	class:wlpdstm::NonTxDurationPcntProfilingSimple	typeref:typename:void
GlobalInit	swisstm/src/common/profiling/non_tx_duration_simple.h	/^			static void GlobalInit() {$/;"	f	class:wlpdstm::NonTxDurationProfilingSimple	typeref:typename:void
GlobalInit	swisstm/src/common/profiling/simple.h	/^			static void GlobalInit() {$/;"	f	class:wlpdstm::SimpleProfiling	typeref:typename:void
GlobalInit	swisstm/src/common/profiling/tx_duration.h	/^			static void GlobalInit() {$/;"	f	class:wlpdstm::TxDurationProfiling	typeref:typename:void
GlobalInit	swisstm/src/common/tls.h	/^			static void GlobalInit() {$/;"	f	class:wlpdstm::Tls	typeref:typename:void
GlobalInit	swisstm/src/common/tls.h	/^		static void GlobalInit() {$/;"	f	struct:wlpdstm::GlobalInitInvoker	typeref:typename:void
GlobalInit	swisstm/src/common/tls.h	/^inline void wlpdstm::Tls<T, GLOBAL_INIT, THREAD_INIT>::GlobalInit() {$/;"	f	class:wlpdstm::Tls	typeref:typename:void
GlobalInit	swisstm/src/dynamic/memory/memory_impl.h	/^inline void wlpdstm::MemoryManager::GlobalInit() {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
GlobalInit	swisstm/src/dynamic/memory/memory_impl_priv.h	/^inline void wlpdstm::MemoryManager::GlobalInit() {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
GlobalInit	swisstm/src/dynamic/perf_cnt.h	/^            static void GlobalInit() {$/;"	f	class:wlpdstm::PerfCnt	typeref:typename:void
GlobalInit	swisstm/src/dynamic/profiling/adaptive_dynamic.h	/^			static void GlobalInit() {$/;"	f	class:wlpdstm::AdaptiveDynamicProfiling	typeref:typename:void
GlobalInit	swisstm/src/dynamic/transaction.h	/^inline void wlpdstm::TransactionDynamic::GlobalInit() {$/;"	f	class:wlpdstm::TransactionDynamic	typeref:typename:void
GlobalInit	swisstm/src/epochstm/cm.h	/^			static void GlobalInit() {$/;"	f	class:wlpdstm::Timid	typeref:typename:void
GlobalInit	swisstm/src/epochstm/cm.h	/^		static void GlobalInit() {$/;"	f	class:wlpdstm::Greedy	typeref:typename:void
GlobalInit	swisstm/src/epochstm/memory/memory_epoch.h	/^inline void wlpdstm::MemoryManager::GlobalInit() {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
GlobalInit	swisstm/src/epochstm/memory/memory_leak.h	/^inline void wlpdstm::MemoryManager::GlobalInit() {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
GlobalInit	swisstm/src/epochstm/memory/memory_txend.h	/^inline void wlpdstm::MemoryManager::GlobalInit() {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
GlobalInit	swisstm/src/epochstm/transaction.h	/^inline void wlpdstm::TransactionEpoch::GlobalInit() {$/;"	f	class:wlpdstm::TransactionEpoch	typeref:typename:void
GlobalInit	swisstm/src/p-tlrw/cm.h	/^			static void GlobalInit() {$/;"	f	class:wlpdstm::Timid	typeref:typename:void
GlobalInit	swisstm/src/p-tlrw/cm.h	/^		static void GlobalInit() {$/;"	f	class:wlpdstm::Greedy	typeref:typename:void
GlobalInit	swisstm/src/p-tlrw/memory/memory_txend.h	/^inline void wlpdstm::MemoryManager::GlobalInit() {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
GlobalInit	swisstm/src/p-tlrw/transaction.h	/^inline void wlpdstm::TransactionTlrw::GlobalInit() {$/;"	f	class:wlpdstm::TransactionTlrw	typeref:typename:void
GlobalInit	swisstm/src/rw/cm.h	/^			static void GlobalInit() {$/;"	f	class:wlpdstm::Timid	typeref:typename:void
GlobalInit	swisstm/src/rw/cm.h	/^		static void GlobalInit() {$/;"	f	class:wlpdstm::Greedy	typeref:typename:void
GlobalInit	swisstm/src/rw/memory/memory_txend.h	/^inline void wlpdstm::MemoryManager::GlobalInit() {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
GlobalInit	swisstm/src/rw/transaction.h	/^inline void wlpdstm::TransactionRw::GlobalInit() {$/;"	f	class:wlpdstm::TransactionRw	typeref:typename:void
GlobalInit	swisstm/src/stm/memory/memory_impl.h	/^inline void wlpdstm::MemoryManager::GlobalInit() {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
GlobalInit	swisstm/src/stm/memory/memory_impl_priv.h	/^inline void wlpdstm::MemoryManager::GlobalInit() {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
GlobalInit	swisstm/src/stm/privatization_tree.h	/^inline void wlpdstm::PrivatizationTree::GlobalInit() {$/;"	f	class:wlpdstm::PrivatizationTree	typeref:typename:void
GlobalInit	swisstm/src/stm/transaction_mixinv.h	/^inline void wlpdstm::TxMixinv::GlobalInit() {$/;"	f	class:wlpdstm::TxMixinv	typeref:typename:void
GlobalInit	swisstm/src/tlrw/cm.h	/^			static void GlobalInit() {$/;"	f	class:wlpdstm::Timid	typeref:typename:void
GlobalInit	swisstm/src/tlrw/cm.h	/^		static void GlobalInit() {$/;"	f	class:wlpdstm::Greedy	typeref:typename:void
GlobalInit	swisstm/src/tlrw/memory/memory_txend.h	/^inline void wlpdstm::MemoryManager::GlobalInit() {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
GlobalInit	swisstm/src/tlrw/transaction.h	/^inline void wlpdstm::TransactionTlrw::GlobalInit() {$/;"	f	class:wlpdstm::TransactionTlrw	typeref:typename:void
GlobalInitInvoker	swisstm/src/common/tls.h	/^	struct GlobalInitInvoker {$/;"	s	namespace:wlpdstm
GlobalInitInvoker	swisstm/src/common/tls.h	/^	struct GlobalInitInvoker<T, false> {$/;"	s	namespace:wlpdstm
GlobalShutdown	swisstm/src/dynamic/transaction.h	/^inline void wlpdstm::TransactionDynamic::GlobalShutdown() {$/;"	f	class:wlpdstm::TransactionDynamic	typeref:typename:void
GlobalShutdown	swisstm/src/epochstm/transaction.h	/^inline void wlpdstm::TransactionEpoch::GlobalShutdown() {$/;"	f	class:wlpdstm::TransactionEpoch	typeref:typename:void
GlobalShutdown	swisstm/src/p-tlrw/transaction.h	/^inline void wlpdstm::TransactionTlrw::GlobalShutdown() {$/;"	f	class:wlpdstm::TransactionTlrw	typeref:typename:void
GlobalShutdown	swisstm/src/rw/transaction.h	/^inline void wlpdstm::TransactionRw::GlobalShutdown() {$/;"	f	class:wlpdstm::TransactionRw	typeref:typename:void
GlobalShutdown	swisstm/src/stm/transaction_mixinv.h	/^inline void wlpdstm::TxMixinv::GlobalShutdown() {$/;"	f	class:wlpdstm::TxMixinv	typeref:typename:void
GlobalShutdown	swisstm/src/tlrw/transaction.h	/^inline void wlpdstm::TransactionTlrw::GlobalShutdown() {$/;"	f	class:wlpdstm::TransactionTlrw	typeref:typename:void
GlobalTimestamp	swisstm/src/dynamic/timestamp.h	/^			GlobalTimestamp() : ts(MINIMUM_TS + 1) {  }$/;"	f	class:wlpdstm::GlobalTimestamp
GlobalTimestamp	swisstm/src/dynamic/timestamp.h	/^	class GlobalTimestamp {$/;"	c	namespace:wlpdstm
GlobalTimestamp	swisstm/src/stm/timestamp.h	/^			GlobalTimestamp() : ts(MINIMUM_TS + 1) {  }$/;"	f	class:wlpdstm::GlobalTimestamp
GlobalTimestamp	swisstm/src/stm/timestamp.h	/^	class GlobalTimestamp {$/;"	c	namespace:wlpdstm
Greedy	swisstm/src/epochstm/cm.h	/^	class Greedy {$/;"	c	namespace:wlpdstm
Greedy	swisstm/src/p-tlrw/cm.h	/^	class Greedy {$/;"	c	namespace:wlpdstm
Greedy	swisstm/src/rw/cm.h	/^	class Greedy {$/;"	c	namespace:wlpdstm
Greedy	swisstm/src/tlrw/cm.h	/^	class Greedy {$/;"	c	namespace:wlpdstm
GreenCMDecision	swisstm/src/dynamic/transaction.h	/^	enum GreenCMDecision {$/;"	g	namespace:wlpdstm
GreenCMQueueItem	swisstm/src/dynamic/transaction.h	/^	struct GreenCMQueueItem {$/;"	s	namespace:wlpdstm
HASH_MASK	swisstm/src/dynamic/lazy/hashtable.h	/^		static const unsigned HASH_MASK = SIZE - 1;$/;"	m	class:wlpdstm::Hashtable	typeref:typename:const unsigned
HASH_WRITE_SET_MARKERS_SIZE_WORDS	swisstm/src/stm/transaction_mixinv.h	/^		static const unsigned HASH_WRITE_SET_MARKERS_SIZE_WORDS = HASH_WRITE_SET_SIZE \/ BYTES_IN_WORD/;"	m	class:wlpdstm::TxMixinv	typeref:typename:const unsigned
HASH_WRITE_SET_MASK	swisstm/src/stm/transaction_mixinv.h	/^		static const unsigned HASH_WRITE_SET_MASK = HASH_WRITE_SET_SIZE - 1;$/;"	m	class:wlpdstm::TxMixinv	typeref:typename:const unsigned
HASH_WRITE_SET_SIZE	swisstm/src/stm/transaction_mixinv.h	/^		static const unsigned HASH_WRITE_SET_SIZE = 256;$/;"	m	class:wlpdstm::TxMixinv	typeref:typename:const unsigned
HLIST_SCRIPT	run_tests.py	/^HLIST_SCRIPT = 'plot_scripts\/hlist'$/;"	v
H_TO_OBJ	rlu.c	/^#define H_TO_OBJ(/;"	d	file:
Hashtable	swisstm/src/dynamic/lazy/hashtable.h	/^	class Hashtable {$/;"	c	namespace:wlpdstm
INACTIVE_EPOCH	list_move_vlist.c	/^#define INACTIVE_EPOCH /;"	d	file:
INACTIVE_EPOCH	list_vlist.c	/^#define INACTIVE_EPOCH /;"	d	file:
INACTIVE_EPOCH	tree_vrbtree.c	/^#define INACTIVE_EPOCH /;"	d	file:
INACTIVE_EPOCH	tree_vtree.c	/^#define INACTIVE_EPOCH /;"	d	file:
INCLUDE_DIR	swisstm/Makefile.in	/^INCLUDE_DIR = .\/include$/;"	m
INCLUDE_DIR_TS	swisstm/Makefile	/^INCLUDE_DIR_TS = $(INCLUDE_DIR)\/.ts$/;"	m
INCLUDE_IN_FILE	swisstm/Makefile.in	/^INCLUDE_IN_FILE = $(INCLUDE_SRC_DIR)\/stm.h$/;"	m
INCLUDE_OUT_FILE	swisstm/Makefile.in	/^INCLUDE_OUT_FILE = $(INCLUDE_DIR)\/stm.h$/;"	m
INCLUDE_SRC_DIR	swisstm/Makefile.in	/^INCLUDE_SRC_DIR = $(SRC_DIR)\/include$/;"	m
INDIRECT_EPOCH	list_move_vlist.c	/^#define INDIRECT_EPOCH /;"	d	file:
INDIRECT_EPOCH	list_vlist.c	/^#define INDIRECT_EPOCH /;"	d	file:
INDIRECT_EPOCH	tree_vrbtree.c	/^#define INDIRECT_EPOCH /;"	d	file:
INDIRECT_EPOCH	tree_vtree.c	/^#define INDIRECT_EPOCH /;"	d	file:
INIT_FLIST_HEAD	zipf/flist.h	/^#define INIT_FLIST_HEAD(/;"	d
INPLACE	tree_bonsai.c	/^#define INPLACE /;"	d	file:
INSERT	swisstm/src/mubench/rbtree.c	/^#define INSERT(/;"	d	file:
INSTRUCTION_COUNT_EVENT_IDX	swisstm/src/common/perfcnt/perf_cnt_papi.h	/^#define INSTRUCTION_COUNT_EVENT_IDX /;"	d
INSTRUCTION_COUNT_EVENT_NAME	swisstm/src/common/perfcnt/perf_cnt_papi.h	/^#define INSTRUCTION_COUNT_EVENT_NAME /;"	d
INSTRUCTION_COUNT_EVENT_NAME	swisstm/src/common/perfcnt/perf_cnt_solaris.h	/^#define INSTRUCTION_COUNT_EVENT_NAME /;"	d
INTEL_CC	swisstm/Makefile.in	/^INTEL_CC = icc$/;"	m
INTEL_CPP	swisstm/Makefile.in	/^INTEL_CPP = icpc$/;"	m
IO_FLUSH	swisstm/src/mubench/intset-list-mv.c	/^#define IO_FLUSH /;"	d	file:
IO_FLUSH	swisstm/src/mubench/intset.c	/^#define IO_FLUSH /;"	d	file:
IS_2_SOCKET	run_tests.py	/^IS_2_SOCKET = 0$/;"	v
IS_COPY	rlu.c	/^#define IS_COPY(/;"	d	file:
IS_IN_SIM	swisstm/src/mubench/tm.h	/^#  define IS_IN_SIM(/;"	d
IS_NUMA	run_tests.py	/^IS_NUMA = 0$/;"	v
IS_PERF	run_tests.py	/^IS_PERF = 0$/;"	v
IS_UNLOCKED	rlu.c	/^#define IS_UNLOCKED(/;"	d	file:
Increment	swisstm/src/common/stats_base.h	/^		void Increment(Type stat, uint64_t inc = 1) {$/;"	f	class:wlpdstm::StatsBase	typeref:typename:void
IncrementCommitTs	swisstm/src/dynamic/transaction.h	/^inline Word wlpdstm::TransactionDynamic::IncrementCommitTs() {$/;"	f	class:wlpdstm::TransactionDynamic	typeref:typename:Word
IncrementCommitTs	swisstm/src/stm/transaction_mixinv.h	/^inline Word wlpdstm::TxMixinv::IncrementCommitTs() {$/;"	f	class:wlpdstm::TxMixinv	typeref:typename:Word
IncrementCounter	swisstm/src/epochstm/transaction.h	/^inline void wlpdstm::TransactionEpoch::IncrementCounter() {$/;"	f	class:wlpdstm::TransactionEpoch	typeref:typename:void
IncrementCurrentTx	swisstm/src/p-tlrw/transaction.h	/^inline void wlpdstm::TransactionTlrw::IncrementCurrentTx() {$/;"	f	class:wlpdstm::TransactionTlrw	typeref:typename:void
IncrementStatistics	swisstm/src/common/stats_base.h	/^		inline void IncrementStatistics(Type type, uint64_t inc = 1) {$/;"	f	struct:wlpdstm::ThreadStatsBase	typeref:typename:void
IncrementStatistics	swisstm/src/dynamic/memory/memory_impl.h	/^			void IncrementStatistics(Statistics::Type type) {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
IncrementStatistics	swisstm/src/dynamic/memory/memory_impl_priv.h	/^	void IncrementStatistics(Statistics::Type type) {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
IncrementStatistics	swisstm/src/stm/memory/memory_impl.h	/^			void IncrementStatistics(Statistics::Type type) {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
IncrementStatistics	swisstm/src/stm/memory/memory_impl_priv.h	/^	void IncrementStatistics(Statistics::Type type) {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
IncrementStatisticsInner	swisstm/src/common/stats_base.h	/^		inline void IncrementStatisticsInner(Type type, uint64_t inc = 1) {$/;"	f	struct:wlpdstm::ThreadStatsBase	typeref:typename:void
IncrementStatisticsPerTxType	swisstm/src/common/stats_base.h	/^		inline void IncrementStatisticsPerTxType(Type type, uint64_t inc = 1) {$/;"	f	struct:wlpdstm::ThreadStatsBase	typeref:typename:void
IncrementStatisticsPerTxTypeInner	swisstm/src/common/stats_base.h	/^		inline void IncrementStatisticsPerTxTypeInner(Type type, uint64_t inc = 1) {$/;"	f	struct:wlpdstm::ThreadStatsBase	typeref:typename:void
Init	swisstm/src/common/perfcnt/perf_cnt_papi.h	/^inline void wlpdstm::PerfCntPapi::Init() {$/;"	f	class:wlpdstm::PerfCntPapi	typeref:typename:void
Init	swisstm/src/common/perfcnt/perf_cnt_solaris.h	/^inline void wlpdstm::PerfCntSolaris::Init() {$/;"	f	class:wlpdstm::PerfCntSolaris	typeref:typename:void
Init	swisstm/src/epochstm/transaction.h	/^inline void wlpdstm::TransactionEpoch::OrecTableStatsArray<ROWS>::Init() {$/;"	f	class:wlpdstm::TransactionEpoch::OrecTableStatsArray	typeref:typename:void
InitLastObservedTs	swisstm/src/dynamic/transaction.h	/^inline void wlpdstm::TransactionDynamic::InitLastObservedTs() {$/;"	f	class:wlpdstm::TransactionDynamic	typeref:typename:void
InitLastObservedTs	swisstm/src/stm/transaction_mixinv.h	/^inline void wlpdstm::TxMixinv::InitLastObservedTs() {$/;"	f	class:wlpdstm::TxMixinv	typeref:typename:void
InitStats	swisstm/src/dynamic/memory/memory_impl.h	/^			void InitStats(ThreadStatistics *st) {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
InitStats	swisstm/src/dynamic/memory/memory_impl_priv.h	/^	void InitStats(ThreadStatistics *st) {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
InitStats	swisstm/src/stm/memory/memory_impl.h	/^			void InitStats(ThreadStatistics *st) {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
InitStats	swisstm/src/stm/memory/memory_impl_priv.h	/^	void InitStats(ThreadStatistics *st) {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
Initialize	swisstm/src/common/configuration.h	/^void wlpdstm::Config::Initialize() {$/;"	f	class:wlpdstm::Config	typeref:typename:void
InitializeCountToRootMap	swisstm/src/stm/privatization_tree.h	/^inline void wlpdstm::PrivatizationTree::InitializeCountToRootMap() {$/;"	f	class:wlpdstm::PrivatizationTree	typeref:typename:void
InitializeCurrentWriteLock	swisstm/src/epochstm/transaction.h	/^inline void wlpdstm::TransactionEpoch::InitializeCurrentWriteLock(uint32_t cnt) {$/;"	f	class:wlpdstm::TransactionEpoch	typeref:typename:void
InitializeDefault	swisstm/src/common/configuration.h	/^void wlpdstm::Config::InitializeDefault() {$/;"	f	class:wlpdstm::Config	typeref:typename:void
InitializeFunPtrTable	swisstm/src/dynamic/transaction.h	/^inline void wlpdstm::TransactionDynamic::InitializeFunPtrTable() {$/;"	f	class:wlpdstm::TransactionDynamic	typeref:typename:void
InitializeQuiescenceTimestamps	swisstm/src/dynamic/transaction.h	/^inline void wlpdstm::TransactionDynamic::InitializeQuiescenceTimestamps() {$/;"	f	class:wlpdstm::TransactionDynamic	typeref:typename:void
InitializeQuiescenceTimestamps	swisstm/src/stm/transaction_mixinv.h	/^inline void wlpdstm::TxMixinv::InitializeQuiescenceTimestamps() {$/;"	f	class:wlpdstm::TxMixinv	typeref:typename:void
InitializeReadLocks	swisstm/src/dynamic/transaction.h	/^inline void wlpdstm::TransactionDynamic::InitializeReadLocks() {$/;"	f	class:wlpdstm::TransactionDynamic	typeref:typename:void
InitializeReadLocks	swisstm/src/stm/transaction_mixinv.h	/^inline void wlpdstm::TxMixinv::InitializeReadLocks() {$/;"	f	class:wlpdstm::TxMixinv	typeref:typename:void
InitializeSignaling	swisstm/src/stm/transaction_mixinv.h	/^inline void wlpdstm::TxMixinv::InitializeSignaling() {$/;"	f	class:wlpdstm::TxMixinv	typeref:typename:void
InitializeWriteLocks	swisstm/src/dynamic/transaction.h	/^inline void wlpdstm::TransactionDynamic::InitializeWriteLocks() {$/;"	f	class:wlpdstm::TransactionDynamic	typeref:typename:void
InitializeWriteLocks	swisstm/src/stm/transaction_mixinv.h	/^inline void wlpdstm::TxMixinv::InitializeWriteLocks() {$/;"	f	class:wlpdstm::TxMixinv	typeref:typename:void
InsertWordLogEntry	swisstm/src/dynamic/log.h	/^inline void wlpdstm::WriteLogEntry::InsertWordLogEntry(WriteWordLogMemPool &write_word_log_mem_p/;"	f	class:wlpdstm::WriteLogEntry	typeref:typename:void
InsertWordLogEntry	swisstm/src/stm/transaction_mixinv.h	/^inline void wlpdstm::TxMixinv::WriteLogEntry::InsertWordLogEntry(Word *address, Word value, Word/;"	f	class:wlpdstm::TxMixinv::WriteLogEntry	typeref:typename:void
InvokeLockMemoryStripe	swisstm/src/dynamic/transaction.h	/^inline wlpdstm::WriteLogEntry *wlpdstm::TransactionDynamic::InvokeLockMemoryStripe(TransactionDy/;"	f	class:wlpdstm::TransactionDynamic	typeref:typename:wlpdstm::WriteLogEntry *
InvokeReadWord	swisstm/src/dynamic/transaction.h	/^inline Word wlpdstm::TransactionDynamic::InvokeReadWord(TransactionDynamic *desc, Word *addr) {$/;"	f	class:wlpdstm::TransactionDynamic	typeref:typename:Word
InvokeRollbackRunning	swisstm/src/dynamic/transaction.h	/^inline void wlpdstm::TransactionDynamic::InvokeRollbackRunning(TransactionDynamic *desc) {$/;"	f	class:wlpdstm::TransactionDynamic	typeref:typename:void
InvokeTxCommit	swisstm/src/dynamic/transaction.h	/^inline void wlpdstm::TransactionDynamic::InvokeTxCommit(TransactionDynamic *desc) {$/;"	f	class:wlpdstm::TransactionDynamic	typeref:typename:void
IsExecuting	swisstm/src/dynamic/transaction.h	/^inline bool wlpdstm::TransactionDynamic::IsExecuting() const {$/;"	f	class:wlpdstm::TransactionDynamic	typeref:typename:bool
IsExecuting	swisstm/src/stm/transaction_mixinv.h	/^inline bool wlpdstm::TxMixinv::IsExecuting() const {$/;"	f	class:wlpdstm::TxMixinv	typeref:typename:bool
IsFull	swisstm/src/dynamic/memory/memory_impl.h	/^		bool IsFull() const {$/;"	f	struct:wlpdstm::PtrBufferT	typeref:typename:bool
IsFull	swisstm/src/dynamic/memory/memory_impl_priv.h	/^	bool IsFull() const {$/;"	f	struct:wlpdstm::PtrBufferT	typeref:typename:bool
IsFull	swisstm/src/epochstm/memory/memory_txend.h	/^	bool IsFull() const {$/;"	f	struct:wlpdstm::PtrBufferT	typeref:typename:bool
IsFull	swisstm/src/p-tlrw/memory/memory_txend.h	/^	bool IsFull() const {$/;"	f	struct:wlpdstm::PtrBufferT	typeref:typename:bool
IsFull	swisstm/src/rw/memory/memory_txend.h	/^	bool IsFull() const {$/;"	f	struct:wlpdstm::PtrBufferT	typeref:typename:bool
IsFull	swisstm/src/stm/memory/memory_impl.h	/^		bool IsFull() const {$/;"	f	struct:wlpdstm::PtrBufferT	typeref:typename:bool
IsFull	swisstm/src/stm/memory/memory_impl_priv.h	/^	bool IsFull() const {$/;"	f	struct:wlpdstm::PtrBufferT	typeref:typename:bool
IsFull	swisstm/src/tlrw/memory/memory_txend.h	/^	bool IsFull() const {$/;"	f	struct:wlpdstm::PtrBufferT	typeref:typename:bool
IsNotCurrentTx	swisstm/src/epochstm/transaction.h	/^inline bool wlpdstm::TransactionEpoch::IsNotCurrentTx(uint32_t thread, uint32_t cnt) {$/;"	f	class:wlpdstm::TransactionEpoch	typeref:typename:bool
IsSampling	swisstm/src/common/sampling.h	/^			bool IsSampling() const {$/;"	f	class:wlpdstm::NoTxSampling	typeref:typename:bool
IsSampling	swisstm/src/common/sampling.h	/^			bool IsSampling() const {$/;"	f	class:wlpdstm::RandomTxSampling	typeref:typename:bool
IsSignalSet	swisstm/src/stm/transaction_mixinv.h	/^inline bool wlpdstm::TxMixinv::IsSignalSet(TxSignals signal) {$/;"	f	class:wlpdstm::TxMixinv	typeref:typename:bool
IsThreadStopped	swisstm/src/p-tlrw/transaction.h	/^inline bool wlpdstm::TransactionTlrw::IsThreadStopped() {$/;"	f	class:wlpdstm::TransactionTlrw	typeref:typename:bool
JHASH_INITVAL	zipf/hash.h	/^#define JHASH_INITVAL	/;"	d
JUMP_RESTART	swisstm/src/dynamic/eager/eager.h	/^				JUMP_RESTART,$/;"	e	enum:wlpdstm::TxEager::TryCommitResult
JUMP_RESTART	swisstm/src/dynamic/lazy/lazy.h	/^				JUMP_RESTART,$/;"	e	enum:wlpdstm::TxLazy::TryCommitResult
JUMP_RESTART	swisstm/src/dynamic/mixed/mixed.h	/^				JUMP_RESTART,$/;"	e	enum:wlpdstm::TxMixed::TryCommitResult
JUMP_RESTART	swisstm/src/dynamic/transaction.h	/^		JUMP_RESTART,$/;"	e	enum:wlpdstm::TryCommitResult
JUMP_RESTART	swisstm/src/stm/transaction_mixinv.h	/^			JUMP_RESTART,$/;"	e	enum:wlpdstm::TxMixinv::TryCommitResult
KEY_FIELD	swisstm/src/dynamic/lazy/hashtable.h	/^#define KEY_FIELD /;"	d
LARGER_TABLE_READ_HITS	swisstm/src/dynamic/stats.h	/^			LARGER_TABLE_READ_HITS,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
LARGER_TABLE_READ_HITS	swisstm/src/stm/stats.h	/^			LARGER_TABLE_READ_HITS,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
LARGER_TABLE_WRITE_HITS	swisstm/src/dynamic/stats.h	/^			LARGER_TABLE_WRITE_HITS,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
LARGER_TABLE_WRITE_HITS	swisstm/src/stm/stats.h	/^			LARGER_TABLE_WRITE_HITS,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
LCG	zipf/rand.c	/^#define LCG(/;"	d	file:
LCG64	zipf/rand.c	/^#define LCG64(/;"	d	file:
LD	Makefile	/^LD := gcc$/;"	m
LDA	swisstm/src/mubench/rbtree.c	/^#define LDA(/;"	d	file:
LDC	swisstm/src/mubench/rbtree.c	/^#define LDC(/;"	d	file:
LDF	swisstm/src/mubench/rbtree.c	/^#define LDF(/;"	d	file:
LDNODE	swisstm/src/mubench/rbtree.c	/^#define LDNODE(/;"	d	file:
LDV	swisstm/src/mubench/rbtree.c	/^#define LDV(/;"	d	file:
LEFT_OF	swisstm/src/mubench/rbtree.c	/^#define LEFT_OF(/;"	d	file:
LIBPAPI_DIR	swisstm/Makefile.in	/^LIBPAPI_DIR = \/home\/dragojev\/local64$/;"	m
LIB_DIR	swisstm/Makefile.in	/^LIB_DIR = .\/lib$/;"	m
LIB_DIR_TS	swisstm/Makefile	/^LIB_DIR_TS = $(LIB_DIR)\/.ts$/;"	m
LLIST_SCRIPT	run_tests.py	/^LLIST_SCRIPT = 'plot_scripts\/llist'$/;"	v
LOAD	swisstm/src/mubench/tm_spec.h	/^#define LOAD(/;"	d
LOCK_EXTENT	swisstm/src/dynamic/transaction.h	/^#define LOCK_EXTENT /;"	d
LOCK_EXTENT	swisstm/src/epochstm/transaction.h	/^#define LOCK_EXTENT /;"	d
LOCK_EXTENT	swisstm/src/p-tlrw/transaction.h	/^#define LOCK_EXTENT /;"	d
LOCK_EXTENT	swisstm/src/rw/transaction.h	/^#define LOCK_EXTENT /;"	d
LOCK_EXTENT	swisstm/src/stm/transaction_mixinv.h	/^#define LOCK_EXTENT /;"	d
LOCK_EXTENT	swisstm/src/tlrw/transaction.h	/^#define LOCK_EXTENT /;"	d
LOCK_ID	rlu.c	/^#define LOCK_ID(/;"	d	file:
LOCK_RESERVED_BITS	swisstm/src/dynamic/constants.h	/^	const unsigned LOCK_RESERVED_BITS = 2;$/;"	v	namespace:wlpdstm	typeref:typename:const unsigned
LOCK_RESERVED_BITS	swisstm/src/stm/constants.h	/^	const unsigned LOCK_RESERVED_BITS = 2;$/;"	v	namespace:wlpdstm	typeref:typename:const unsigned
LOCK_TABLE_RECONFIGURATIONS	swisstm/src/dynamic/stats.h	/^			LOCK_TABLE_RECONFIGURATIONS,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
LOCK_TABLE_RECONFIGURATIONS	swisstm/src/stm/stats.h	/^			LOCK_TABLE_RECONFIGURATIONS,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
LOG	swisstm/Makefile.in	/^	LOG = chunked$/;"	m
LOG_BYTES_IN_WORD	swisstm/src/common/constants.h	/^	const unsigned LOG_BYTES_IN_WORD = 2;$/;"	v	namespace:wlpdstm	typeref:typename:const unsigned
LOG_CACHE_LINE_SIZE_BYTES	swisstm/src/common/constants.h	/^#define LOG_CACHE_LINE_SIZE_BYTES /;"	d
LOG_CPPFLAGS_chunked	swisstm/Makefile.in	/^LOG_CPPFLAGS_chunked = -D CHUNKED_LOG$/;"	m
LOG_CPPFLAGS_linked	swisstm/Makefile.in	/^LOG_CPPFLAGS_linked = -D LINKED_LOG$/;"	m
LOG_CPPFLAGS_vector	swisstm/Makefile.in	/^LOG_CPPFLAGS_vector = -D VECTOR_LOG$/;"	m
LOG_DEFAULT_LOCK_EXTENT_SIZE_WORDS	swisstm/src/dynamic/transaction.h	/^#define LOG_DEFAULT_LOCK_EXTENT_SIZE_WORDS /;"	d
LOG_DEFAULT_LOCK_EXTENT_SIZE_WORDS	swisstm/src/stm/transaction_mixinv.h	/^#define LOG_DEFAULT_LOCK_EXTENT_SIZE_WORDS /;"	d
LOG_ENTRY_UNMASKED	swisstm/src/common/constants.h	/^	static const Word LOG_ENTRY_UNMASKED = ~0x0;$/;"	v	namespace:wlpdstm	typeref:typename:const Word
LONG_JMP_ABORT_FLAG	swisstm/src/common/jmp.h	/^#define LONG_JMP_ABORT_FLAG /;"	d
LONG_JMP_BUF	swisstm/src/common/jmp.h	/^#define LONG_JMP_BUF /;"	d
LONG_JMP_FIRST_FLAG	swisstm/src/common/jmp.h	/^#define LONG_JMP_FIRST_FLAG /;"	d
LONG_JMP_RESTART_FLAG	swisstm/src/common/jmp.h	/^#define LONG_JMP_RESTART_FLAG /;"	d
LOOKUP	swisstm/src/mubench/rbtree.c	/^#define LOOKUP(/;"	d	file:
LPDSTM_CPPFLAGS	swisstm/Makefile.in	/^    LPDSTM_CPPFLAGS = -D WLPDSTM_LINUXOS$/;"	m
LPDSTM_CPPFLAGS	swisstm/Makefile.in	/^    LPDSTM_CPPFLAGS = -D WLPDSTM_MACOS$/;"	m
LPDSTM_CPPFLAGS	swisstm/Makefile.in	/^    LPDSTM_CPPFLAGS = -D WLPDSTM_SOLARIS$/;"	m
LSB	swisstm/src/dynamic/constants.h	/^#define LSB /;"	d
LSB	swisstm/src/stm/constants.h	/^#define LSB /;"	d
LargeLockSet	swisstm/src/stm/large_lock_set.h	/^			LargeLockSet() {$/;"	f	class:wlpdstm::LargeLockSet
LargeLockSet	swisstm/src/stm/large_lock_set.h	/^	class LargeLockSet {$/;"	c	namespace:wlpdstm
LastTransactionState	swisstm/src/common/profiling/non_tx_duration_pcnt_simple.h	/^			enum LastTransactionState {$/;"	g	class:wlpdstm::NonTxDurationPcntProfilingSimple
LastTransactionState	swisstm/src/common/profiling/non_tx_duration_simple.h	/^			enum LastTransactionState {$/;"	g	class:wlpdstm::NonTxDurationProfilingSimple
LockMemoryBlock	swisstm/src/dynamic/transaction.h	/^inline void wlpdstm::TransactionDynamic::LockMemoryBlock(void *address, size_t size) {$/;"	f	class:wlpdstm::TransactionDynamic	typeref:typename:void
LockMemoryBlock	swisstm/src/epochstm/transaction.h	/^inline void wlpdstm::TransactionEpoch::LockMemoryBlock(void *address, size_t size) {$/;"	f	class:wlpdstm::TransactionEpoch	typeref:typename:void
LockMemoryBlock	swisstm/src/p-tlrw/transaction.h	/^inline void wlpdstm::TransactionTlrw::LockMemoryBlock(void *address, size_t size) {$/;"	f	class:wlpdstm::TransactionTlrw	typeref:typename:void
LockMemoryBlock	swisstm/src/rw/transaction.h	/^inline void wlpdstm::TransactionRw::LockMemoryBlock(void *address, size_t size) {$/;"	f	class:wlpdstm::TransactionRw	typeref:typename:void
LockMemoryBlock	swisstm/src/stm/transaction_mixinv.h	/^inline void wlpdstm::TxMixinv::LockMemoryBlock(void *address, size_t size) {$/;"	f	class:wlpdstm::TxMixinv	typeref:typename:void
LockMemoryBlock	swisstm/src/tlrw/transaction.h	/^inline void wlpdstm::TransactionTlrw::LockMemoryBlock(void *address, size_t size) {$/;"	f	class:wlpdstm::TransactionTlrw	typeref:typename:void
LockMemoryStripe	swisstm/src/dynamic/eager/eager.cc	/^wlpdstm::WriteLogEntry *wlpdstm::TxEager::LockMemoryStripe(TransactionDynamic *desc, WriteLock */;"	f	class:wlpdstm::TxEager	typeref:typename:wlpdstm::WriteLogEntry *
LockMemoryStripe	swisstm/src/dynamic/lazy/lazy.cc	/^wlpdstm::WriteLogEntry *wlpdstm::TxLazy::LockMemoryStripe(TransactionDynamic *desc, WriteLock *w/;"	f	class:wlpdstm::TxLazy	typeref:typename:wlpdstm::WriteLogEntry *
LockMemoryStripe	swisstm/src/dynamic/mixed/mixed.cc	/^wlpdstm::WriteLogEntry *wlpdstm::TxMixed::LockMemoryStripe(TransactionDynamic *desc, WriteLock */;"	f	class:wlpdstm::TxMixed	typeref:typename:wlpdstm::WriteLogEntry *
LockMemoryStripe	swisstm/src/epochstm/transaction.h	/^inline void wlpdstm::TransactionEpoch::LockMemoryStripe(Word *addr, unsigned orec_idx) {$/;"	f	class:wlpdstm::TransactionEpoch	typeref:typename:void
LockMemoryStripe	swisstm/src/p-tlrw/transaction.h	/^inline void wlpdstm::TransactionTlrw::LockMemoryStripe(Word *addr, unsigned orec_idx) {$/;"	f	class:wlpdstm::TransactionTlrw	typeref:typename:void
LockMemoryStripe	swisstm/src/rw/transaction.h	/^inline void wlpdstm::TransactionRw::LockMemoryStripe(Word *addr, unsigned orec_idx) {$/;"	f	class:wlpdstm::TransactionRw	typeref:typename:void
LockMemoryStripe	swisstm/src/stm/transaction_mixinv.h	/^inline wlpdstm::TxMixinv::WriteLogEntry *wlpdstm::TxMixinv::LockMemoryStripe(WriteLock *write_lo/;"	f	class:wlpdstm::TxMixinv	typeref:typename:wlpdstm::TxMixinv::WriteLogEntry *
LockMemoryStripe	swisstm/src/tlrw/transaction.h	/^inline void wlpdstm::TransactionTlrw::LockMemoryStripe(Word *addr, unsigned orec_idx) {$/;"	f	class:wlpdstm::TransactionTlrw	typeref:typename:void
LockMemoryStripeFunPtr	swisstm/src/dynamic/transaction.h	/^			typedef WriteLogEntry *(*LockMemoryStripeFunPtr)(TransactionDynamic *desc, WriteLock *write_l/;"	t	class:wlpdstm::TransactionDynamic	typeref:typename:WriteLogEntry * (*)(TransactionDynamic * desc,WriteLock * write_lock,Word * address)
LockMemoryStripeInline	swisstm/src/dynamic/eager/eager_impl_inline.h	/^inline wlpdstm::WriteLogEntry *wlpdstm::TxEager::LockMemoryStripeInline(TransactionDynamic *desc/;"	f	class:wlpdstm::TxEager	typeref:typename:wlpdstm::WriteLogEntry *
LockMemoryStripeInline	swisstm/src/dynamic/lazy/lazy_impl_inline.h	/^inline wlpdstm::WriteLogEntry *wlpdstm::TxLazy::LockMemoryStripeInline(TransactionDynamic *desc,/;"	f	class:wlpdstm::TxLazy	typeref:typename:wlpdstm::WriteLogEntry *
LockMemoryStripeInline	swisstm/src/dynamic/mixed/mixed_inline_fun.h	/^inline wlpdstm::WriteLogEntry *wlpdstm::TxMixed::LockMemoryStripeInline(TransactionDynamic *desc/;"	f	class:wlpdstm::TxMixed	typeref:typename:wlpdstm::WriteLogEntry *
LockMemoryStripeReadOnly	swisstm/src/dynamic/eager/eager.cc	/^wlpdstm::WriteLogEntry *wlpdstm::TxEager::LockMemoryStripeReadOnly(TransactionDynamic *desc, Wri/;"	f	class:wlpdstm::TxEager	typeref:typename:wlpdstm::WriteLogEntry *
LockMemoryStripeReadOnly	swisstm/src/dynamic/lazy/lazy.cc	/^wlpdstm::WriteLogEntry *wlpdstm::TxLazy::LockMemoryStripeReadOnly(TransactionDynamic *desc, Writ/;"	f	class:wlpdstm::TxLazy	typeref:typename:wlpdstm::WriteLogEntry *
LockMemoryStripeReadOnly	swisstm/src/dynamic/mixed/mixed.cc	/^wlpdstm::WriteLogEntry *wlpdstm::TxMixed::LockMemoryStripeReadOnly(TransactionDynamic *desc, Wri/;"	f	class:wlpdstm::TxMixed	typeref:typename:wlpdstm::WriteLogEntry *
LockMemoryStripeReadOnlyProfiled	swisstm/src/dynamic/eager/eager.cc	/^wlpdstm::WriteLogEntry *wlpdstm::TxEager::LockMemoryStripeReadOnlyProfiled(TransactionDynamic *d/;"	f	class:wlpdstm::TxEager	typeref:typename:wlpdstm::WriteLogEntry *
LockMemoryStripeReadOnlyProfiled	swisstm/src/dynamic/lazy/lazy.cc	/^wlpdstm::WriteLogEntry *wlpdstm::TxLazy::LockMemoryStripeReadOnlyProfiled(TransactionDynamic *de/;"	f	class:wlpdstm::TxLazy	typeref:typename:wlpdstm::WriteLogEntry *
LockMemoryStripeReadOnlyProfiled	swisstm/src/dynamic/mixed/mixed.cc	/^wlpdstm::WriteLogEntry *wlpdstm::TxMixed::LockMemoryStripeReadOnlyProfiled(TransactionDynamic *d/;"	f	class:wlpdstm::TxMixed	typeref:typename:wlpdstm::WriteLogEntry *
LockMemoryStripeStatic	swisstm/src/dynamic/eager/eager_static.h	/^API_LINKAGE wlpdstm::WriteLogEntry *wlpdstm::TxEager::LockMemoryStripeStatic(TransactionDynamic /;"	f	class:wlpdstm::TxEager	typeref:typename:API_LINKAGE wlpdstm::WriteLogEntry *
LockMemoryStripeStatic	swisstm/src/dynamic/lazy/lazy_static.h	/^API_LINKAGE wlpdstm::WriteLogEntry *wlpdstm::TxLazy::LockMemoryStripeStatic(TransactionDynamic */;"	f	class:wlpdstm::TxLazy	typeref:typename:API_LINKAGE wlpdstm::WriteLogEntry *
LockMemoryStripeStatic	swisstm/src/dynamic/mixed/mixed_inline.h	/^API_LINKAGE wlpdstm::WriteLogEntry *wlpdstm::TxMixed::LockMemoryStripeStatic(TransactionDynamic /;"	f	class:wlpdstm::TxMixed	typeref:typename:API_LINKAGE wlpdstm::WriteLogEntry *
LockWriteSet	swisstm/src/dynamic/lazy/lazy_impl_inline.h	/^inline bool wlpdstm::TxLazy::LockWriteSet(TransactionDynamic *desc) {$/;"	f	class:wlpdstm::TxLazy	typeref:typename:bool
LockedByMe	swisstm/src/dynamic/transaction.h	/^inline bool wlpdstm::TransactionDynamic::LockedByMe(WriteLogEntry *log_entry) {$/;"	f	class:wlpdstm::TransactionDynamic	typeref:typename:bool
LockedByMe	swisstm/src/stm/transaction_mixinv.h	/^inline bool wlpdstm::TxMixinv::LockedByMe(WriteLogEntry *log_entry) {$/;"	f	class:wlpdstm::TxMixinv	typeref:typename:bool
Log	swisstm/src/common/log.h	/^			Log() : array((T *)wlpdstm::malloc(INITIAL_SIZE * sizeof(T))),$/;"	f	class:wlpdstm::Log
Log	swisstm/src/common/log.h	/^			Log() : head(new LogChunk()), lastChunk(head),$/;"	f	class:wlpdstm::Log
Log	swisstm/src/common/log.h	/^	class Log : public WlpdstmAlloced {$/;"	c	namespace:wlpdstm
Log	swisstm/src/common/log.h	/^	inline Log<T, INITIAL_SIZE, GROWTH_FACTOR>::Log() : head(NULL), tail(NULL) {$/;"	f	class:wlpdstm::Log
LogChunk	swisstm/src/common/log.h	/^				LogChunk() : next(NULL), prev(NULL) { }$/;"	f	struct:wlpdstm::Log::LogChunk
LogChunk	swisstm/src/common/log.h	/^			struct LogChunk : public WlpdstmAlloced {$/;"	s	class:wlpdstm::Log
MAIN	swisstm/src/mubench/tm.h	/^#  define MAIN(/;"	d
MAIN_RETURN	swisstm/src/mubench/tm.h	/^#  define MAIN_RETURN(/;"	d
MAKE	Makefile	/^MAKE := make$/;"	m
MALLOC	swisstm/src/mubench/tm_spec.h	/^#define MALLOC(/;"	d
MASK	swisstm/src/stm_api/read_write.h	/^#	define MASK /;"	d
MASK_32	swisstm/src/stm_api/read_write.h	/^#define MASK_32 /;"	d
MASK_64	swisstm/src/stm_api/read_write.h	/^#define MASK_64 /;"	d
MAXIMUM_TS	swisstm/src/dynamic/constants.h	/^	const Word MAXIMUM_TS = (1l << (ADDRESS_SPACE_SIZE - LOCK_RESERVED_BITS)) - 1 - MAX_THREADS;$/;"	v	namespace:wlpdstm	typeref:typename:const Word
MAXIMUM_TS	swisstm/src/stm/constants.h	/^	const Word MAXIMUM_TS = (1l << (ADDRESS_SPACE_SIZE - LOCK_RESERVED_BITS)) - 1 - MAX_THREADS;$/;"	v	namespace:wlpdstm	typeref:typename:const Word
MAX_CLEANUP_THREADS	swisstm/src/epochstm/constants.h	/^	const unsigned MAX_CLEANUP_THREADS = 128;$/;"	v	namespace:wlpdstm	typeref:typename:const unsigned
MAX_EPOCH	swisstm/src/dynamic/lazy/hashtable.h	/^		static const uint8_t MAX_EPOCH = 255;$/;"	m	class:wlpdstm::Hashtable	typeref:typename:const uint8_t
MAX_EPOCH	swisstm/src/epochstm/constants.h	/^	const unsigned MAX_EPOCH = (1 << 16) - 1;$/;"	v	namespace:wlpdstm	typeref:typename:const unsigned
MAX_EPOCH	swisstm/src/epochstm/constants.h	/^	const unsigned MAX_EPOCH = 255;$/;"	v	namespace:wlpdstm	typeref:typename:const unsigned
MAX_EVENTS	swisstm/src/common/perfcnt/perf_cnt_papi.h	/^#define MAX_EVENTS /;"	d
MAX_LEXICAL_TX	swisstm/src/common/constants.h	/^    const int MAX_LEXICAL_TX = 64;$/;"	v	namespace:wlpdstm	typeref:typename:const int
MAX_LEXICAL_TX	swisstm/src/common/stats_base.h	/^		static const int MAX_LEXICAL_TX = 64;$/;"	m	struct:wlpdstm::ThreadStatsBase	typeref:typename:const int
MAX_LOCK_EXTENT_SIZE	swisstm/src/dynamic/transaction.h	/^#define MAX_LOCK_EXTENT_SIZE /;"	d
MAX_LOCK_EXTENT_SIZE	swisstm/src/stm/transaction_mixinv.h	/^#define MAX_LOCK_EXTENT_SIZE /;"	d
MAX_SET_VERSION	swisstm/src/stm/large_lock_set.h	/^			static const uint32_t MAX_SET_VERSION = (uint32_t)-1;$/;"	m	class:wlpdstm::LargeLockSet	typeref:typename:const uint32_t
MAX_SHIFT	swisstm/src/stm/privatization_tree.h	/^#define MAX_SHIFT /;"	d
MAX_THREADS	swisstm/src/dynamic/constants.h	/^	const unsigned MAX_THREADS = 128;$/;"	v	namespace:wlpdstm	typeref:typename:const unsigned
MAX_THREADS	swisstm/src/epochstm/constants.h	/^	const unsigned MAX_THREADS = 64;$/;"	v	namespace:wlpdstm	typeref:typename:const unsigned
MAX_THREADS	swisstm/src/p-tlrw/constants.h	/^	const unsigned MAX_THREADS = 64;$/;"	v	namespace:wlpdstm	typeref:typename:const unsigned
MAX_THREADS	swisstm/src/rw/constants.h	/^	const unsigned MAX_THREADS = 64;$/;"	v	namespace:wlpdstm	typeref:typename:const unsigned
MAX_THREADS	swisstm/src/stm/constants.h	/^	const unsigned MAX_THREADS = 128;$/;"	v	namespace:wlpdstm	typeref:typename:const unsigned
MAX_THREADS	swisstm/src/tlrw/constants.h	/^	const unsigned MAX_THREADS = 64;$/;"	v	namespace:wlpdstm	typeref:typename:const unsigned
MAX_TRANSACTION_COUNT	swisstm/src/epochstm/transaction.h	/^#define MAX_TRANSACTION_COUNT /;"	d
MAX_TRANSACTION_COUNT	swisstm/src/p-tlrw/transaction.h	/^#define MAX_TRANSACTION_COUNT /;"	d
MAX_VERSION	rlu.c	/^#define MAX_VERSION /;"	d	file:
MEMBARSTLD	rlu.c	/^#define MEMBARSTLD(/;"	d	file:
MEMBARSTLD	util.h	/^#define MEMBARSTLD(/;"	d
MEMORY_BLOCK_BUFFER_SIZE	swisstm/src/epochstm/memory/memory_epoch.h	/^#define MEMORY_BLOCK_BUFFER_SIZE /;"	d
MEMORY_DEALLOC_COUNT	swisstm/src/dynamic/stats.h	/^			MEMORY_DEALLOC_COUNT,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
MEMORY_DEALLOC_COUNT	swisstm/src/stm/stats.h	/^			MEMORY_DEALLOC_COUNT,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
MEMORY_DEALLOC_LOCKS	swisstm/src/dynamic/stats.h	/^			MEMORY_DEALLOC_LOCKS,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
MEMORY_DEALLOC_LOCKS	swisstm/src/stm/stats.h	/^			MEMORY_DEALLOC_LOCKS,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
MEMORY_DEALLOC_SIZE	swisstm/src/dynamic/stats.h	/^			MEMORY_DEALLOC_SIZE,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
MEMORY_DEALLOC_SIZE	swisstm/src/stm/stats.h	/^			MEMORY_DEALLOC_SIZE,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
MFLAGS	swisstm/Makefile.in	/^MFLAGS = -j2$/;"	m
MILLISECONDS_IN_SECOND	swisstm/src/mubench/time.h	/^#define MILLISECONDS_IN_SECOND /;"	d
MINIMUM_SAMPLING_PERIOD	swisstm/src/common/profiling/adaptive.h	/^			static const unsigned MINIMUM_SAMPLING_PERIOD = 1;$/;"	m	class:wlpdstm::AdaptiveProfiling	typeref:typename:const unsigned
MINIMUM_SAMPLING_PERIOD	swisstm/src/common/profiling/non_tx_duration.h	/^			static const unsigned MINIMUM_SAMPLING_PERIOD = 1;$/;"	m	class:wlpdstm::NonTxDurationProfiling	typeref:typename:const unsigned
MINIMUM_SAMPLING_PERIOD	swisstm/src/common/profiling/tx_duration.h	/^			static const unsigned MINIMUM_SAMPLING_PERIOD = 1;$/;"	m	class:wlpdstm::TxDurationProfiling	typeref:typename:const unsigned
MINIMUM_SAMPLING_PERIOD	swisstm/src/dynamic/profiling/adaptive_dynamic.h	/^			static const unsigned MINIMUM_SAMPLING_PERIOD = 1;$/;"	m	class:wlpdstm::AdaptiveDynamicProfiling	typeref:typename:const unsigned
MINIMUM_TS	swisstm/src/dynamic/constants.h	/^	const unsigned MINIMUM_TS = 0;$/;"	v	namespace:wlpdstm	typeref:typename:const unsigned
MINIMUM_TS	swisstm/src/stm/constants.h	/^	const unsigned MINIMUM_TS = 0;$/;"	v	namespace:wlpdstm	typeref:typename:const unsigned
MINIMUM_VERSION	swisstm/src/dynamic/constants.h	/^#define MINIMUM_VERSION /;"	d
MINIMUM_VERSION	swisstm/src/stm/constants.h	/^#define MINIMUM_VERSION /;"	d
MIN_EPOCH	swisstm/src/epochstm/constants.h	/^	const unsigned MIN_EPOCH = 1;$/;"	v	namespace:wlpdstm	typeref:typename:const unsigned
MIN_LOCK_EXTENT_SIZE	swisstm/src/dynamic/transaction.h	/^#define MIN_LOCK_EXTENT_SIZE /;"	d
MIN_LOCK_EXTENT_SIZE	swisstm/src/stm/transaction_mixinv.h	/^#define MIN_LOCK_EXTENT_SIZE /;"	d
MIN_SET_VERSION	swisstm/src/stm/large_lock_set.h	/^			static const uint32_t MIN_SET_VERSION = 0;$/;"	m	class:wlpdstm::LargeLockSet	typeref:typename:const uint32_t
MIN_TRANSACTION_COUNT	swisstm/src/epochstm/transaction.h	/^#define MIN_TRANSACTION_COUNT /;"	d
MIN_TRANSACTION_COUNT	swisstm/src/p-tlrw/transaction.h	/^#define MIN_TRANSACTION_COUNT /;"	d
MOVE_PTR_BACK	rlu.c	/^#define MOVE_PTR_BACK(/;"	d	file:
MOVE_PTR_FORWARD	rlu.c	/^#define MOVE_PTR_FORWARD(/;"	d	file:
MUBENCH_CPPFLAGS	swisstm/Makefile.in	/^    MUBENCH_CPPFLAGS = -D MUBENCH_LINUXOS$/;"	m
MUBENCH_CPPFLAGS	swisstm/Makefile.in	/^    MUBENCH_CPPFLAGS = -D MUBENCH_MACOS$/;"	m
MUBENCH_CPPFLAGS	swisstm/Makefile.in	/^    MUBENCH_CPPFLAGS = -D MUBENCH_SOLARIS$/;"	m
MUBENCH_RBFOREST_OBJFILES	swisstm/Makefile	/^MUBENCH_RBFOREST_OBJFILES = $(OBJ_DIR)\/rbforest.o$/;"	m
MUBENCH_RBTREE_OBJFILES	swisstm/Makefile	/^MUBENCH_RBTREE_OBJFILES = $(OBJ_DIR)\/intset-rbtree.o$/;"	m
MUBENCH_SRC_DIR	swisstm/Makefile.in	/^MUBENCH_SRC_DIR = $(SRC_DIR)\/mubench$/;"	m
MUBENCH_TIME_H_	swisstm/src/mubench/time.h	/^#define MUBENCH_TIME_H_$/;"	d
MUBENCH_TM_SPEC_H_	swisstm/src/mubench/tm_spec.h	/^#define MUBENCH_TM_SPEC_H_$/;"	d
Malloc	swisstm/src/common/alloc.h	/^			static void *Malloc(size_t size) {$/;"	f	class:wlpdstm::Alloc	typeref:typename:void *
Malloc	swisstm/src/dynamic/memory/memory_impl.h	/^inline void *wlpdstm::MemoryManager::Malloc(size_t size) {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void *
Malloc	swisstm/src/dynamic/memory/memory_impl_priv.h	/^inline void *wlpdstm::MemoryManager::Malloc(size_t size) {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void *
Malloc	swisstm/src/stm/memory/memory_impl.h	/^inline void *wlpdstm::MemoryManager::Malloc(size_t size) {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void *
Malloc	swisstm/src/stm/memory/memory_impl_priv.h	/^inline void *wlpdstm::MemoryManager::Malloc(size_t size) {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void *
MaskWord	swisstm/src/dynamic/log.h	/^inline Word wlpdstm::MaskWord(Word old, Word val, Word mask) {$/;"	f	class:wlpdstm	typeref:typename:Word
MaskWord	swisstm/src/dynamic/log.h	/^inline Word wlpdstm::WriteWordLogEntry::MaskWord() {$/;"	f	class:wlpdstm::WriteWordLogEntry	typeref:typename:Word
MaskWord	swisstm/src/epochstm/transaction.h	/^inline Word wlpdstm::TransactionEpoch::MaskWord(Word old, Word val, Word mask) {$/;"	f	class:wlpdstm::TransactionEpoch	typeref:typename:Word
MaskWord	swisstm/src/p-tlrw/transaction.h	/^inline Word wlpdstm::TransactionTlrw::MaskWord(Word old, Word val, Word mask) {$/;"	f	class:wlpdstm::TransactionTlrw	typeref:typename:Word
MaskWord	swisstm/src/rw/transaction.h	/^inline Word wlpdstm::TransactionRw::MaskWord(Word old, Word val, Word mask) {$/;"	f	class:wlpdstm::TransactionRw	typeref:typename:Word
MaskWord	swisstm/src/stm/transaction_mixinv.h	/^inline Word wlpdstm::TxMixinv::MaskWord(Word old, Word val, Word mask) {$/;"	f	class:wlpdstm::TxMixinv	typeref:typename:Word
MaskWord	swisstm/src/stm/transaction_mixinv.h	/^inline Word wlpdstm::TxMixinv::MaskWord(WriteWordLogEntry *entry) {$/;"	f	class:wlpdstm::TxMixinv	typeref:typename:Word
MaskWord	swisstm/src/tlrw/transaction.h	/^inline Word wlpdstm::TransactionTlrw::MaskWord(Word old, Word val, Word mask) {$/;"	f	class:wlpdstm::TransactionTlrw	typeref:typename:Word
MemoryBlock	swisstm/src/epochstm/memory/memory_epoch.h	/^	} MemoryBlock;$/;"	t	namespace:wlpdstm	typeref:struct:wlpdstm::MemoryBlockS
MemoryBlockBuf	swisstm/src/epochstm/memory/memory_epoch.h	/^	} MemoryBlockBuf;$/;"	t	namespace:wlpdstm	typeref:struct:wlpdstm::MemoryBlockBufS
MemoryBlockBufS	swisstm/src/epochstm/memory/memory_epoch.h	/^	typedef struct MemoryBlockBufS {$/;"	s	namespace:wlpdstm
MemoryBlockS	swisstm/src/epochstm/memory/memory_epoch.h	/^	typedef struct MemoryBlockS {$/;"	s	namespace:wlpdstm
MemoryManager	swisstm/src/dynamic/memory/memory_impl.h	/^	class MemoryManager {$/;"	c	namespace:wlpdstm
MemoryManager	swisstm/src/dynamic/memory/memory_impl_priv.h	/^class MemoryManager {$/;"	c	namespace:wlpdstm
MemoryManager	swisstm/src/epochstm/memory/memory_epoch.h	/^	class MemoryManager : public Alloc {$/;"	c	namespace:wlpdstm
MemoryManager	swisstm/src/epochstm/memory/memory_leak.h	/^	class MemoryManager : public Alloc {$/;"	c	namespace:wlpdstm
MemoryManager	swisstm/src/epochstm/memory/memory_txend.h	/^class MemoryManager : public Alloc {$/;"	c	namespace:wlpdstm
MemoryManager	swisstm/src/p-tlrw/memory/memory_txend.h	/^class MemoryManager : public Alloc {$/;"	c	namespace:wlpdstm
MemoryManager	swisstm/src/rw/memory/memory_txend.h	/^class MemoryManager : public Alloc {$/;"	c	namespace:wlpdstm
MemoryManager	swisstm/src/stm/memory/memory_impl.h	/^	class MemoryManager {$/;"	c	namespace:wlpdstm
MemoryManager	swisstm/src/stm/memory/memory_impl_priv.h	/^class MemoryManager {$/;"	c	namespace:wlpdstm
MemoryManager	swisstm/src/tlrw/memory/memory_txend.h	/^class MemoryManager : public Alloc {$/;"	c	namespace:wlpdstm
Merge	swisstm/src/common/stats_base.h	/^		void Merge(StatsBase<STATS_TYPES, ALLOCATOR, COUNT> *other) {$/;"	f	class:wlpdstm::StatsBase	typeref:typename:void
Merge	swisstm/src/common/stats_base.h	/^		void Merge(const ThreadStatsBase<STATS_TYPES, ALLOCATOR, COUNT> *tstat) {$/;"	f	struct:wlpdstm::ThreadStatsBase	typeref:typename:void
MergeAll	swisstm/src/common/stats_base.h	/^			ThreadStatistics MergeAll() {$/;"	f	class:wlpdstm::ThreadStatsCollectionBase	typeref:typename:ThreadStatistics
MergeTouchedOrecsArrays	swisstm/src/epochstm/transaction.h	/^inline void wlpdstm::TransactionEpoch::MergeTouchedOrecsArrays(uint8_t *result, unsigned threads/;"	f	class:wlpdstm::TransactionEpoch	typeref:typename:void
NANOSECONDS_IN_MILLISECOND	swisstm/src/mubench/time.h	/^#define NANOSECONDS_IN_MILLISECOND /;"	d
NANOSECONDS_IN_SECOND	swisstm/src/mubench/time.h	/^#define NANOSECONDS_IN_SECOND /;"	d
NEW_READS	swisstm/src/dynamic/stats.h	/^			NEW_READS,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
NEW_READS	swisstm/src/stm/stats.h	/^			NEW_READS,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
NEW_WRITES	swisstm/src/dynamic/stats.h	/^			NEW_WRITES,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
NEW_WRITES	swisstm/src/stm/stats.h	/^			NEW_WRITES,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
NON_TX_DURATION	swisstm/src/dynamic/stats.h	/^			NON_TX_DURATION,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
NON_TX_PROFILED	swisstm/src/dynamic/stats.h	/^			NON_TX_PROFILED,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
NO_EPOCH	swisstm/src/epochstm/constants.h	/^	const unsigned NO_EPOCH = MIN_EPOCH - 1;$/;"	v	namespace:wlpdstm	typeref:typename:const unsigned
NO_FREE_NEXT_EPOCH	swisstm/src/epochstm/stats.h	/^			NO_FREE_NEXT_EPOCH,$/;"	e	enum:wlpdstm::EpochSTMStats::Type
NO_LEXICAL_TX	swisstm/src/common/constants.h	/^#define NO_LEXICAL_TX /;"	d
NO_OP	swisstm/src/dynamic/constants.h	/^		NO_OP = 0,$/;"	e	enum:wlpdstm::OperationType
NO_OP	swisstm/src/stm/constants.h	/^		NO_OP = 0,$/;"	e	enum:wlpdstm::OperationType
NO_READERS	swisstm/src/rw/transaction.h	/^#define NO_READERS /;"	d
NO_READERS_64	swisstm/src/epochstm/constants.h	/^	const uint64_t NO_READERS_64 = (uint64_t)0;$/;"	v	namespace:wlpdstm	typeref:typename:const uint64_t
NO_READERS_WORD	swisstm/src/epochstm/constants.h	/^	const Word NO_READERS_WORD = (Word)0;	$/;"	v	namespace:wlpdstm	typeref:typename:const Word
NO_READY_RW_SET	swisstm/src/p-tlrw/stats.h	/^			NO_READY_RW_SET,$/;"	e	enum:wlpdstm::TlrwStats::Type
NO_RESTART	swisstm/src/epochstm/transaction.h	/^				NO_RESTART = 0,$/;"	e	enum:wlpdstm::TransactionEpoch::RestartCause
NO_RESTART	swisstm/src/p-tlrw/transaction.h	/^			NO_RESTART = 0,$/;"	e	enum:wlpdstm::TransactionTlrw::RestartCause
NO_RESTART	swisstm/src/rw/transaction.h	/^			NO_RESTART = 0,$/;"	e	enum:wlpdstm::TransactionRw::RestartCause
NO_RESTART	swisstm/src/tlrw/transaction.h	/^			NO_RESTART = 0,$/;"	e	enum:wlpdstm::TransactionTlrw::RestartCause
NO_THREAD_TID	swisstm/src/epochstm/transaction.h	/^#define NO_THREAD_TID /;"	d
NO_THREAD_TX_ID	swisstm/src/epochstm/transaction.h	/^#define NO_THREAD_TX_ID /;"	d
NO_TRANSACTION_COUNT	swisstm/src/epochstm/transaction.h	/^#define NO_TRANSACTION_COUNT /;"	d
NO_TX	swisstm/src/common/profiling/non_tx_duration_pcnt_simple.h	/^				NO_TX,$/;"	e	enum:wlpdstm::NonTxDurationPcntProfilingSimple::LastTransactionState
NO_TX	swisstm/src/common/profiling/non_tx_duration_simple.h	/^				NO_TX,$/;"	e	enum:wlpdstm::NonTxDurationProfilingSimple::LastTransactionState
NO_WRITER	swisstm/src/p-tlrw/transaction.h	/^#define NO_WRITER /;"	d
NO_WRITER	swisstm/src/rw/transaction.h	/^#define NO_WRITER /;"	d
NO_WRITER	swisstm/src/tlrw/transaction.h	/^#define NO_WRITER /;"	d
NUM_ITERATIONS	swisstm/src/mubench/thread.c	/^#define NUM_ITERATIONS /;"	d	file:
NUM_THREADS	swisstm/src/mubench/thread.c	/^#define NUM_THREADS /;"	d	file:
Need to forcely call stat_thread_merge(self) in ts_thread_finish()	NOTE.md	/^### Need to forcely call stat_thread_merge(self) in ts_thread_finish()$/;"	S	section:Note for versioning/""Stats
NoTxSampling	swisstm/src/common/sampling.h	/^	class NoTxSampling {$/;"	c	namespace:wlpdstm
Node	swisstm/src/common/log.h	/^			struct Node : public WlpdstmAlloced {$/;"	s	class:wlpdstm::Log
NonTxDurationPcntProfilingSimple	swisstm/src/common/profiling/non_tx_duration_pcnt_simple.h	/^	class NonTxDurationPcntProfilingSimple {$/;"	c	namespace:wlpdstm
NonTxDurationProfiling	swisstm/src/common/profiling/non_tx_duration.h	/^	class NonTxDurationProfiling {$/;"	c	namespace:wlpdstm
NonTxDurationProfilingSimple	swisstm/src/common/profiling/non_tx_duration_simple.h	/^	class NonTxDurationProfilingSimple {$/;"	c	namespace:wlpdstm
Note for versioning/	NOTE.md	/^# Note for versioning\/$/;"	c
OBJFILES	swisstm/Makefile	/^OBJFILES = $(OBJ_DIR)\/wlpdstm.o$/;"	m
OBJ_COPY_TO_WS_H	rlu.c	/^#define OBJ_COPY_TO_WS_H(/;"	d	file:
OBJ_DIR	swisstm/Makefile.in	/^OBJ_DIR = $(TARGET_DIR)\/obj$/;"	m
OBJ_DIR_TS	swisstm/Makefile	/^OBJ_DIR_TS = $(OBJ_DIR)\/.ts$/;"	m
OBJ_HEADER_SIZE	rlu.c	/^#define OBJ_HEADER_SIZE /;"	d	file:
OBJ_TO_H	rlu.c	/^#define OBJ_TO_H(/;"	d	file:
OP_FOREST_DELETE	swisstm/src/mubench/rbforest.cc	/^    OP_FOREST_DELETE,$/;"	e	enum:optype_t	file:
OP_FOREST_INSERT	swisstm/src/mubench/rbforest.cc	/^    OP_FOREST_INSERT,$/;"	e	enum:optype_t	file:
OP_FOREST_LOOKUP	swisstm/src/mubench/rbforest.cc	/^    OP_FOREST_LOOKUP,$/;"	e	enum:optype_t	file:
OP_TOTAL	swisstm/src/mubench/rbforest.cc	/^    OP_TOTAL$/;"	e	enum:optype_t	file:
OP_TREE_DELETE	swisstm/src/mubench/rbforest.cc	/^    OP_TREE_DELETE,$/;"	e	enum:optype_t	file:
OP_TREE_INSERT	swisstm/src/mubench/rbforest.cc	/^    OP_TREE_INSERT,$/;"	e	enum:optype_t	file:
OP_TREE_LOOKUP	swisstm/src/mubench/rbforest.cc	/^    OP_TREE_LOOKUP = 0,$/;"	e	enum:optype_t	file:
OP_TREE_MOVE	swisstm/src/mubench/rbforest.cc	/^    OP_TREE_MOVE,$/;"	e	enum:optype_t	file:
OREC_EPOCH_SIZE_WORDS	swisstm/src/epochstm/constants.h	/^	const unsigned OREC_EPOCH_SIZE_WORDS = MAX_THREADS \/ EPOCHS_IN_WORD + (MAX_THREADS % EPOCHS_IN/;"	v	namespace:wlpdstm	typeref:typename:const unsigned
OS	swisstm/Makefile.in	/^    OS = Linux$/;"	m
OS	swisstm/Makefile.in	/^    OS = MacOS$/;"	m
OS	swisstm/Makefile.in	/^    OS = Solaris$/;"	m
OS_NAME	swisstm/Makefile.in	/^OS_NAME = $(shell uname -s)$/;"	m
OUTPUT_CSV	zipf/test.c	/^	OUTPUT_CSV,$/;"	e	enum:__anon7286301e0203	file:
OUTPUT_FILENAME	run_tests.py	/^OUTPUT_FILENAME = '___temp.file'$/;"	v
OUTPUT_NORMAL	zipf/test.c	/^	OUTPUT_NORMAL,$/;"	e	enum:__anon7286301e0203	file:
OWNERSHIP_RECORD_SIZE	swisstm/src/epochstm/transaction.h	/^#define OWNERSHIP_RECORD_SIZE /;"	d
OWNERSHIP_RECORD_SIZE	swisstm/src/p-tlrw/transaction.h	/^#define OWNERSHIP_RECORD_SIZE /;"	d
OWNERSHIP_RECORD_SIZE	swisstm/src/tlrw/transaction.h	/^#define OWNERSHIP_RECORD_SIZE /;"	d
OWNERSHIP_TABLE_LOG_SIZE	swisstm/src/epochstm/transaction.h	/^#define OWNERSHIP_TABLE_LOG_SIZE /;"	d
OWNERSHIP_TABLE_LOG_SIZE	swisstm/src/p-tlrw/transaction.h	/^#define OWNERSHIP_TABLE_LOG_SIZE /;"	d
OWNERSHIP_TABLE_LOG_SIZE	swisstm/src/rw/transaction.h	/^#define OWNERSHIP_TABLE_LOG_SIZE /;"	d
OWNERSHIP_TABLE_LOG_SIZE	swisstm/src/tlrw/transaction.h	/^#define OWNERSHIP_TABLE_LOG_SIZE /;"	d
OWNERSHIP_TABLE_SIZE	swisstm/src/epochstm/transaction.h	/^#define OWNERSHIP_TABLE_SIZE /;"	d
OWNERSHIP_TABLE_SIZE	swisstm/src/p-tlrw/transaction.h	/^#define OWNERSHIP_TABLE_SIZE /;"	d
OWNERSHIP_TABLE_SIZE	swisstm/src/rw/transaction.h	/^#define OWNERSHIP_TABLE_SIZE /;"	d
OWNERSHIP_TABLE_SIZE	swisstm/src/tlrw/transaction.h	/^#define OWNERSHIP_TABLE_SIZE /;"	d
OnStack	swisstm/src/dynamic/transaction.h	/^inline bool wlpdstm::TransactionDynamic::OnStack(uintptr_t addr) {$/;"	f	class:wlpdstm::TransactionDynamic	typeref:typename:bool
OnStack	swisstm/src/dynamic/transaction.h	/^inline bool wlpdstm::TransactionDynamic::OnStack(uintptr_t addr, uintptr_t current_sp) {$/;"	f	class:wlpdstm::TransactionDynamic	typeref:typename:bool
OnStack	swisstm/src/stm/transaction_mixinv.h	/^inline bool wlpdstm::TxMixinv::OnStack(uintptr_t addr) {$/;"	f	class:wlpdstm::TxMixinv	typeref:typename:bool
OnStack	swisstm/src/stm/transaction_mixinv.h	/^inline bool wlpdstm::TxMixinv::OnStack(uintptr_t addr, uintptr_t current_sp) {$/;"	f	class:wlpdstm::TxMixinv	typeref:typename:bool
OperationType	swisstm/src/dynamic/constants.h	/^	enum OperationType {$/;"	g	namespace:wlpdstm
OperationType	swisstm/src/stm/constants.h	/^	enum OperationType {$/;"	g	namespace:wlpdstm
OrecTableReadStats	swisstm/src/epochstm/transaction.h	/^			typedef OrecTableStatsArray<READ_STATS_ARRAY_ROWS> OrecTableReadStats;$/;"	t	class:wlpdstm::TransactionEpoch	typeref:typename:OrecTableStatsArray<READ_STATS_ARRAY_ROWS>
OrecTableStatsArray	swisstm/src/epochstm/transaction.h	/^			struct OrecTableStatsArray {$/;"	s	class:wlpdstm::TransactionEpoch
OwnershipRecord	swisstm/src/epochstm/transaction.h	/^			struct OwnershipRecord {$/;"	s	class:wlpdstm::TransactionEpoch
OwnershipRecord	swisstm/src/p-tlrw/transaction.h	/^		struct OwnershipRecord {$/;"	s	class:wlpdstm::TransactionTlrw
OwnershipRecord	swisstm/src/rw/transaction.h	/^		struct OwnershipRecord {$/;"	s	class:wlpdstm::TransactionRw
OwnershipRecord	swisstm/src/tlrw/transaction.h	/^		struct OwnershipRecord {$/;"	s	class:wlpdstm::TransactionTlrw
PARENT_OF	swisstm/src/mubench/rbtree.c	/^#define PARENT_OF(/;"	d	file:
PERFORMANCE_COUNTING	swisstm/Makefile.in	/^	PERFORMANCE_COUNTING = no$/;"	m
PERFORMANCE_COUNTING_no	swisstm/Makefile.in	/^PERFORMANCE_COUNTING_no = $/;"	m
PERFORMANCE_COUNTING_yes	swisstm/Makefile.in	/^PERFORMANCE_COUNTING_yes = -D PERFORMANCE_COUNTING$/;"	m
PERFORM_ALIGNMENT	rlu.c	/^#define PERFORM_ALIGNMENT(/;"	d	file:
PERF_FILE	run_tests.py	/^PERF_FILE = "__perf_output.file"$/;"	v
PER_ABORT_COMMIT_STATS	swisstm/Makefile.in	/^	PER_ABORT_COMMIT_STATS = no$/;"	m
PER_ABORT_COMMIT_STATS_CPPFLAGS_no	swisstm/Makefile.in	/^PER_ABORT_COMMIT_STATS_CPPFLAGS_no =$/;"	m
PER_ABORT_COMMIT_STATS_CPPFLAGS_yes	swisstm/Makefile.in	/^PER_ABORT_COMMIT_STATS_CPPFLAGS_yes = -D PER_ABORT_COMMIT_STATS$/;"	m
PRCU_TABLE_SIZE	tree_prcu.c	/^#define PRCU_TABLE_SIZE /;"	d	file:
PREEMPTIVE_UTILS_H_	swisstm/src/common/preemptive_utils.h	/^#define PREEMPTIVE_UTILS_H_$/;"	d
PRIVATIZATION_TREE_NODE_COUNT	swisstm/src/stm/privatization_tree.h	/^#define PRIVATIZATION_TREE_NODE_COUNT /;"	d
PRIVATIZATION_TREE_PROXY_COUNT	swisstm/src/stm/privatization_tree.h	/^#define PRIVATIZATION_TREE_PROXY_COUNT /;"	d
PRIu64	swisstm/src/common/print_utils.h	/^#define PRIu64 /;"	d
PROFILE	swisstm/Makefile.in	/^		PROFILE = fast$/;"	m
PROFILE	swisstm/Makefile.in	/^		PROFILE = normal$/;"	m
PROFILING_COSTS_ESTIMATION_ITERATIONS	swisstm/src/common/profiling/adaptive.h	/^			static const unsigned PROFILING_COSTS_ESTIMATION_ITERATIONS = 1000;$/;"	m	class:wlpdstm::AdaptiveProfiling	typeref:typename:const unsigned
PROFILING_COSTS_ESTIMATION_ITERATIONS	swisstm/src/common/profiling/non_tx_duration.h	/^			static const unsigned PROFILING_COSTS_ESTIMATION_ITERATIONS = 1000;$/;"	m	class:wlpdstm::NonTxDurationProfiling	typeref:typename:const unsigned
PROFILING_COSTS_ESTIMATION_ITERATIONS	swisstm/src/common/profiling/tx_duration.h	/^			static const unsigned PROFILING_COSTS_ESTIMATION_ITERATIONS = 1000;$/;"	m	class:wlpdstm::TxDurationProfiling	typeref:typename:const unsigned
PROFILING_COSTS_ESTIMATION_ITERATIONS	swisstm/src/dynamic/profiling/adaptive_dynamic.h	/^			static const unsigned PROFILING_COSTS_ESTIMATION_ITERATIONS = 1000;$/;"	m	class:wlpdstm::AdaptiveDynamicProfiling	typeref:typename:const unsigned
PROFILING_COSTS_ESTIMATION_LEXICAL_TX_ID	swisstm/src/common/profiling/adaptive.h	/^			static const unsigned PROFILING_COSTS_ESTIMATION_LEXICAL_TX_ID = 1;$/;"	m	class:wlpdstm::AdaptiveProfiling	typeref:typename:const unsigned
PROFILING_COSTS_ESTIMATION_LEXICAL_TX_ID	swisstm/src/common/profiling/non_tx_duration.h	/^			static const unsigned PROFILING_COSTS_ESTIMATION_LEXICAL_TX_ID = 1;$/;"	m	class:wlpdstm::NonTxDurationProfiling	typeref:typename:const unsigned
PROFILING_COSTS_ESTIMATION_LEXICAL_TX_ID	swisstm/src/common/profiling/tx_duration.h	/^			static const unsigned PROFILING_COSTS_ESTIMATION_LEXICAL_TX_ID = 1;$/;"	m	class:wlpdstm::TxDurationProfiling	typeref:typename:const unsigned
PROFILING_COSTS_ESTIMATION_LEXICAL_TX_ID	swisstm/src/dynamic/profiling/adaptive_dynamic.h	/^			static const unsigned PROFILING_COSTS_ESTIMATION_LEXICAL_TX_ID = 1;$/;"	m	class:wlpdstm::AdaptiveDynamicProfiling	typeref:typename:const unsigned
PROFILING_COST_ABORT	swisstm/src/dynamic/stats.h	/^			PROFILING_COST_ABORT,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
PROFILING_COST_COMMIT	swisstm/src/dynamic/stats.h	/^			PROFILING_COST_COMMIT,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
PROFILING_COST_NON_TX	swisstm/src/dynamic/stats.h	/^			PROFILING_COST_NON_TX,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
PROFILING_COST_RESTART	swisstm/src/dynamic/stats.h	/^			PROFILING_COST_RESTART,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
PROFILING_COST_START	swisstm/src/dynamic/stats.h	/^			PROFILING_COST_START,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
PTHREAD_PADDING	benchmark_list.h	/^#define PTHREAD_PADDING /;"	d
PTHREAD_PADDING	benchmark_list_move.h	/^#define PTHREAD_PADDING /;"	d
PTR_GET_WS_HEADER	rlu.c	/^#define PTR_GET_WS_HEADER(/;"	d	file:
PTR_ID_OBJ_COPY	rlu.c	/^#define PTR_ID_OBJ_COPY /;"	d	file:
PTR_IS_COPY	rlu.c	/^#define PTR_IS_COPY(/;"	d	file:
PTR_IS_LOCKED	rlu.c	/^#define PTR_IS_LOCKED(/;"	d	file:
P_FREE	swisstm/src/mubench/tm.h	/^#    define P_FREE(/;"	d
P_FREE	swisstm/src/mubench/tm.h	/^#  define P_FREE(/;"	d
P_MALLOC	swisstm/src/mubench/tm.h	/^#    define P_MALLOC(/;"	d
P_MALLOC	swisstm/src/mubench/tm.h	/^#  define P_MALLOC(/;"	d
P_MEMORY_SHUTDOWN	swisstm/src/mubench/tm.h	/^#  define P_MEMORY_SHUTDOWN(/;"	d
P_MEMORY_STARTUP	swisstm/src/mubench/tm.h	/^#  define P_MEMORY_STARTUP(/;"	d
P_TLRW_SRC_DIR	swisstm/Makefile.in	/^P_TLRW_SRC_DIR = $(SRC_DIR)\/p-tlrw$/;"	m
PaddedBool	swisstm/src/common/padded.h	/^	union PaddedBool {$/;"	u	namespace:wlpdstm
PaddedSpinTryLock	swisstm/src/common/atomic.h	/^			PaddedSpinTryLock() {$/;"	f	class:wlpdstm::PaddedSpinTryLock
PaddedSpinTryLock	swisstm/src/common/atomic.h	/^	class PaddedSpinTryLock {$/;"	c	namespace:wlpdstm
PaddedTxCounter	swisstm/src/epochstm/transaction.h	/^			union PaddedTxCounter {$/;"	u	class:wlpdstm::TransactionEpoch
PaddedUnsigned	swisstm/src/common/padded.h	/^	union PaddedUnsigned {$/;"	u	namespace:wlpdstm
PaddedWord	swisstm/src/common/padded.h	/^	union PaddedWord {$/;"	u	namespace:wlpdstm
PerfCnt	swisstm/src/dynamic/perf_cnt.h	/^    class PerfCnt {$/;"	c	namespace:wlpdstm
PerfCntImpl	swisstm/src/common/perfcnt/perf_cnt_papi.h	/^	typedef PerfCntPapi PerfCntImpl;$/;"	t	namespace:wlpdstm	typeref:typename:PerfCntPapi
PerfCntImpl	swisstm/src/common/perfcnt/perf_cnt_solaris.h	/^	typedef PerfCntSolaris PerfCntImpl;$/;"	t	namespace:wlpdstm	typeref:typename:PerfCntSolaris
PerfCntPapi	swisstm/src/common/perfcnt/perf_cnt_papi.h	/^	class PerfCntPapi {$/;"	c	namespace:wlpdstm
PerfCntSolaris	swisstm/src/common/perfcnt/perf_cnt_solaris.h	/^	class PerfCntSolaris {$/;"	c	namespace:wlpdstm
Print	swisstm/src/common/stats_base.h	/^inline void wlpdstm::ThreadStatsBase<STATS_TYPES, ALLOCATOR, COUNT>::Print(FILE *out_file, unsig/;"	f	class:wlpdstm::ThreadStatsBase	typeref:typename:void
Print	swisstm/src/epochstm/transaction.h	/^inline void wlpdstm::TransactionEpoch::OrecTableStatsArray<ROWS>::Print(const char *msg, FILE *o/;"	f	class:wlpdstm::TransactionEpoch::OrecTableStatsArray	typeref:typename:void
PrintConfiguration	swisstm/src/epochstm/transaction.h	/^inline void wlpdstm::TransactionEpoch::PrintConfiguration(FILE *out_file) {$/;"	f	class:wlpdstm::TransactionEpoch	typeref:typename:void
PrintConfiguration	swisstm/src/p-tlrw/transaction.h	/^inline void wlpdstm::TransactionTlrw::PrintConfiguration(FILE *out_file) {$/;"	f	class:wlpdstm::TransactionTlrw	typeref:typename:void
PrintConfiguration	swisstm/src/rw/transaction.h	/^inline void wlpdstm::TransactionRw::PrintConfiguration(FILE *out_file) {$/;"	f	class:wlpdstm::TransactionRw	typeref:typename:void
PrintConfiguration	swisstm/src/tlrw/transaction.h	/^inline void wlpdstm::TransactionTlrw::PrintConfiguration(FILE *out_file) {$/;"	f	class:wlpdstm::TransactionTlrw	typeref:typename:void
PrintOwnershipTableStats	swisstm/src/epochstm/transaction.h	/^inline void wlpdstm::TransactionEpoch::PrintOwnershipTableStats(FILE *out_file) {$/;"	f	class:wlpdstm::TransactionEpoch	typeref:typename:void
PrintStatistics	swisstm/src/dynamic/transaction.h	/^inline void wlpdstm::TransactionDynamic::PrintStatistics() {$/;"	f	class:wlpdstm::TransactionDynamic	typeref:typename:void
PrintStatistics	swisstm/src/epochstm/transaction.h	/^inline void wlpdstm::TransactionEpoch::PrintStatistics() {$/;"	f	class:wlpdstm::TransactionEpoch	typeref:typename:void
PrintStatistics	swisstm/src/p-tlrw/transaction.h	/^inline void wlpdstm::TransactionTlrw::PrintStatistics() {$/;"	f	class:wlpdstm::TransactionTlrw	typeref:typename:void
PrintStatistics	swisstm/src/rw/transaction.h	/^inline void wlpdstm::TransactionRw::PrintStatistics() {$/;"	f	class:wlpdstm::TransactionRw	typeref:typename:void
PrintStatistics	swisstm/src/stm/transaction_mixinv.h	/^inline void wlpdstm::TxMixinv::PrintStatistics() {$/;"	f	class:wlpdstm::TxMixinv	typeref:typename:void
PrintStatistics	swisstm/src/tlrw/transaction.h	/^inline void wlpdstm::TransactionTlrw::PrintStatistics() {$/;"	f	class:wlpdstm::TransactionTlrw	typeref:typename:void
PrintStats	swisstm/src/common/stats_base.h	/^inline void wlpdstm::ThreadStatsBase<STATS_TYPES, ALLOCATOR, COUNT>::PrintStats($/;"	f	class:wlpdstm::ThreadStatsBase	typeref:typename:void
PrintTouchedOrecsStats	swisstm/src/epochstm/transaction.h	/^inline void wlpdstm::TransactionEpoch::PrintTouchedOrecsStats(FILE *out_file) {$/;"	f	class:wlpdstm::TransactionEpoch	typeref:typename:void
PrivatizationQuiescenceWait	swisstm/src/dynamic/transaction.h	/^inline void wlpdstm::TransactionDynamic::PrivatizationQuiescenceWait(Word ts) {$/;"	f	class:wlpdstm::TransactionDynamic	typeref:typename:void
PrivatizationQuiescenceWait	swisstm/src/stm/transaction_mixinv.h	/^inline void wlpdstm::TxMixinv::PrivatizationQuiescenceWait(Word ts) {$/;"	f	class:wlpdstm::TxMixinv	typeref:typename:void
PrivatizationTree	swisstm/src/stm/privatization_tree.h	/^	class PrivatizationTree {$/;"	c	namespace:wlpdstm
ProcessWaitingForMe	swisstm/src/dynamic/transaction.h	/^inline wlpdstm::GreenCMDecision wlpdstm::TransactionDynamic::ProcessWaitingForMe(uint64_t e) {$/;"	f	class:wlpdstm::TransactionDynamic	typeref:typename:wlpdstm::GreenCMDecision
ProfileNonTxCode	swisstm/src/common/profiling/non_tx_duration.h	/^inline void wlpdstm::NonTxDurationProfiling<STATS, STATS_TYPE>::ProfileNonTxCode() {$/;"	f	class:wlpdstm::NonTxDurationProfiling	typeref:typename:void
ProfileNonTxCode	swisstm/src/common/profiling/tx_duration.h	/^inline void wlpdstm::TxDurationProfiling<STATS, STATS_TYPE>::ProfileNonTxCode() {$/;"	f	class:wlpdstm::TxDurationProfiling	typeref:typename:void
ProfiledTransaction	swisstm/src/stm_api/profiled_transaction.h	/^	class ProfiledTransaction : public TX {$/;"	c	namespace:wlpdstm
Profiling	swisstm/src/dynamic/profiling.h	/^	typedef AdaptiveDynamicProfiling<ThreadStatistics, StatisticsType> Profiling;$/;"	t	namespace:wlpdstm	typeref:typename:AdaptiveDynamicProfiling<ThreadStatistics,StatisticsType>
Profiling	swisstm/src/dynamic/profiling.h	/^	typedef AdaptiveProfiling<ThreadStatistics, StatisticsType> Profiling;$/;"	t	namespace:wlpdstm	typeref:typename:AdaptiveProfiling<ThreadStatistics,StatisticsType>
Profiling	swisstm/src/dynamic/profiling.h	/^	typedef BaseProfiling<ThreadStatistics> Profiling;$/;"	t	namespace:wlpdstm	typeref:typename:BaseProfiling<ThreadStatistics>
Profiling	swisstm/src/dynamic/profiling.h	/^	typedef NonTxDurationPcntProfilingSampling<ThreadStatistics, StatisticsType> Profiling;$/;"	t	namespace:wlpdstm	typeref:typename:NonTxDurationPcntProfilingSampling<ThreadStatistics,StatisticsType>
Profiling	swisstm/src/dynamic/profiling.h	/^	typedef NonTxDurationPcntProfilingSimple<ThreadStatistics, StatisticsType> Profiling;$/;"	t	namespace:wlpdstm	typeref:typename:NonTxDurationPcntProfilingSimple<ThreadStatistics,StatisticsType>
Profiling	swisstm/src/dynamic/profiling.h	/^	typedef NonTxDurationProfiling<ThreadStatistics, StatisticsType> Profiling;$/;"	t	namespace:wlpdstm	typeref:typename:NonTxDurationProfiling<ThreadStatistics,StatisticsType>
Profiling	swisstm/src/dynamic/profiling.h	/^	typedef NonTxDurationProfilingSimple<ThreadStatistics, StatisticsType> Profiling;$/;"	t	namespace:wlpdstm	typeref:typename:NonTxDurationProfilingSimple<ThreadStatistics,StatisticsType>
Profiling	swisstm/src/dynamic/profiling.h	/^	typedef SimpleProfiling<ThreadStatistics, StatisticsType> Profiling;$/;"	t	namespace:wlpdstm	typeref:typename:SimpleProfiling<ThreadStatistics,StatisticsType>
Profiling	swisstm/src/dynamic/profiling.h	/^	typedef TxDurationProfiling<ThreadStatistics, StatisticsType> Profiling;$/;"	t	namespace:wlpdstm	typeref:typename:TxDurationProfiling<ThreadStatistics,StatisticsType>
Profiling	swisstm/src/stm/profiling.h	/^	typedef BaseProfiling<ThreadStatistics> Profiling;$/;"	t	namespace:wlpdstm	typeref:typename:BaseProfiling<ThreadStatistics>
Profiling	swisstm/src/stm/profiling.h	/^	typedef SimpleProfiling<ThreadStatistics, StatisticsType> Profiling;$/;"	t	namespace:wlpdstm	typeref:typename:SimpleProfiling<ThreadStatistics,StatisticsType>
PtrBuffer	swisstm/src/dynamic/memory/memory_impl.h	/^	typedef PtrBufferT<> PtrBuffer;$/;"	t	namespace:wlpdstm	typeref:typename:PtrBufferT<>
PtrBuffer	swisstm/src/dynamic/memory/memory_impl_priv.h	/^typedef PtrBufferT<> PtrBuffer;$/;"	t	namespace:wlpdstm	typeref:typename:PtrBufferT<>
PtrBuffer	swisstm/src/epochstm/memory/memory_txend.h	/^typedef PtrBufferT<> PtrBuffer;$/;"	t	namespace:wlpdstm	typeref:typename:PtrBufferT<>
PtrBuffer	swisstm/src/p-tlrw/memory/memory_txend.h	/^typedef PtrBufferT<> PtrBuffer;$/;"	t	namespace:wlpdstm	typeref:typename:PtrBufferT<>
PtrBuffer	swisstm/src/rw/memory/memory_txend.h	/^typedef PtrBufferT<> PtrBuffer;$/;"	t	namespace:wlpdstm	typeref:typename:PtrBufferT<>
PtrBuffer	swisstm/src/stm/memory/memory_impl.h	/^	typedef PtrBufferT<> PtrBuffer;$/;"	t	namespace:wlpdstm	typeref:typename:PtrBufferT<>
PtrBuffer	swisstm/src/stm/memory/memory_impl_priv.h	/^typedef PtrBufferT<> PtrBuffer;$/;"	t	namespace:wlpdstm	typeref:typename:PtrBufferT<>
PtrBuffer	swisstm/src/tlrw/memory/memory_txend.h	/^typedef PtrBufferT<> PtrBuffer;$/;"	t	namespace:wlpdstm	typeref:typename:PtrBufferT<>
PtrBufferT	swisstm/src/dynamic/memory/memory_impl.h	/^	struct PtrBufferT {$/;"	s	namespace:wlpdstm
PtrBufferT	swisstm/src/dynamic/memory/memory_impl_priv.h	/^	struct PtrBufferT {$/;"	s	namespace:wlpdstm
PtrBufferT	swisstm/src/epochstm/memory/memory_txend.h	/^	struct PtrBufferT {$/;"	s	namespace:wlpdstm
PtrBufferT	swisstm/src/p-tlrw/memory/memory_txend.h	/^	struct PtrBufferT {$/;"	s	namespace:wlpdstm
PtrBufferT	swisstm/src/rw/memory/memory_txend.h	/^	struct PtrBufferT {$/;"	s	namespace:wlpdstm
PtrBufferT	swisstm/src/stm/memory/memory_impl.h	/^	struct PtrBufferT {$/;"	s	namespace:wlpdstm
PtrBufferT	swisstm/src/stm/memory/memory_impl_priv.h	/^	struct PtrBufferT {$/;"	s	namespace:wlpdstm
PtrBufferT	swisstm/src/tlrw/memory/memory_txend.h	/^	struct PtrBufferT {$/;"	s	namespace:wlpdstm
PutFreedLogically	swisstm/src/dynamic/memory/memory_impl.h	/^inline void wlpdstm::MemoryManager::PutFreedLogically(PtrBuffer *first, PtrBuffer *last) {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
PutFreedLogically	swisstm/src/stm/memory/memory_impl.h	/^inline void wlpdstm::MemoryManager::PutFreedLogically(PtrBuffer *first, PtrBuffer *last) {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
PutReusable	swisstm/src/dynamic/memory/memory_impl.h	/^inline void wlpdstm::MemoryManager::PutReusable(PtrBuffer *first, PtrBuffer *last) {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
PutReusable	swisstm/src/dynamic/memory/memory_impl_priv.h	/^inline void wlpdstm::MemoryManager::PutReusable(PtrBuffer *first, PtrBuffer *last) {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
PutReusable	swisstm/src/epochstm/memory/memory_txend.h	/^inline void wlpdstm::MemoryManager::PutReusable(PtrBuffer *first, PtrBuffer *last) {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
PutReusable	swisstm/src/p-tlrw/memory/memory_txend.h	/^inline void wlpdstm::MemoryManager::PutReusable(PtrBuffer *first, PtrBuffer *last) {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
PutReusable	swisstm/src/rw/memory/memory_txend.h	/^inline void wlpdstm::MemoryManager::PutReusable(PtrBuffer *first, PtrBuffer *last) {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
PutReusable	swisstm/src/stm/memory/memory_impl.h	/^inline void wlpdstm::MemoryManager::PutReusable(PtrBuffer *first, PtrBuffer *last) {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
PutReusable	swisstm/src/stm/memory/memory_impl_priv.h	/^inline void wlpdstm::MemoryManager::PutReusable(PtrBuffer *first, PtrBuffer *last) {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
PutReusable	swisstm/src/tlrw/memory/memory_txend.h	/^inline void wlpdstm::MemoryManager::PutReusable(PtrBuffer *first, PtrBuffer *last) {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
QSBR_FREELIST_SIZE	qsbr.h	/^#define QSBR_FREELIST_SIZE /;"	d
QSBR_MAX_THREADS	qsbr.c	/^#define QSBR_MAX_THREADS /;"	d	file:
QSBR_N_EPOCHS	qsbr.h	/^#define QSBR_N_EPOCHS /;"	d
QSBR_PADDING	qsbr.h	/^#define QSBR_PADDING /;"	d
QSBR_PERIOD	list_harris.c	/^#define QSBR_PERIOD /;"	d	file:
QSBR_PERIOD	list_move_vlist.c	/^#define QSBR_PERIOD /;"	d	file:
QSBR_PERIOD	list_vlist.c	/^#define QSBR_PERIOD /;"	d	file:
QSBR_PERIOD	tree_vrbtree.c	/^#define QSBR_PERIOD /;"	d	file:
QSBR_PERIOD	tree_vtree.c	/^#define QSBR_PERIOD /;"	d	file:
Q_ITERS_LIMIT	rlu.c	/^#define Q_ITERS_LIMIT /;"	d	file:
RBTREE_H	swisstm/src/mubench/rbtree.h	/^#define RBTREE_H /;"	d
RB_BLACK	tree_vrbtree.c	/^#define RB_BLACK	/;"	d	file:
RB_RED	tree_vrbtree.c	/^#define RB_RED	/;"	d	file:
READERS_EXTRA_ARRAYS	swisstm/src/epochstm/transaction.h	/^#define READERS_EXTRA_ARRAYS /;"	d
READERS_EXTRA_ARRAY_EMPTY	swisstm/src/epochstm/transaction.h	/^#define READERS_EXTRA_ARRAY_EMPTY /;"	d
READERS_EXTRA_ARRAY_SIZE	swisstm/src/epochstm/transaction.h	/^#define READERS_EXTRA_ARRAY_SIZE /;"	d
READERS_IN_EXTRA_ARRAY	swisstm/src/epochstm/transaction.h	/^#define READERS_IN_EXTRA_ARRAY /;"	d
READERS_IN_OREC	swisstm/src/epochstm/transaction.h	/^#define READERS_IN_OREC /;"	d
READERS_IN_WORD	swisstm/src/epochstm/transaction.h	/^#define READERS_IN_WORD /;"	d
READS	swisstm/src/dynamic/stats.h	/^			READS,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
READS	swisstm/src/stm/stats.h	/^			READS,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
READ_LOCKS_IN_OREC	swisstm/src/p-tlrw/transaction.h	/^#define READ_LOCKS_IN_OREC /;"	d
READ_LOCKS_IN_OREC	swisstm/src/tlrw/transaction.h	/^#define READ_LOCKS_IN_OREC /;"	d
READ_LOCKS_IN_WORD	swisstm/src/p-tlrw/transaction.h	/^#define READ_LOCKS_IN_WORD /;"	d
READ_LOCKS_IN_WORD	swisstm/src/tlrw/transaction.h	/^#define READ_LOCKS_IN_WORD /;"	d
READ_LOCK_SET	swisstm/src/dynamic/constants.h	/^#define READ_LOCK_SET /;"	d
READ_LOCK_SET	swisstm/src/stm/constants.h	/^#define READ_LOCK_SET /;"	d
READ_LOG_SIZE	swisstm/src/dynamic/stats.h	/^			READ_LOG_SIZE,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
READ_LOG_SIZE	swisstm/src/stm/stats.h	/^			READ_LOG_SIZE,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
READ_LOG_SIZE_ABORT_READ	swisstm/src/dynamic/stats.h	/^			READ_LOG_SIZE_ABORT_READ,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
READ_LOG_SIZE_ABORT_READ	swisstm/src/stm/stats.h	/^			READ_LOG_SIZE_ABORT_READ,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
READ_LOG_SIZE_ABORT_WRITE	swisstm/src/dynamic/stats.h	/^			READ_LOG_SIZE_ABORT_WRITE,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
READ_LOG_SIZE_ABORT_WRITE	swisstm/src/stm/stats.h	/^			READ_LOG_SIZE_ABORT_WRITE,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
READ_OP	swisstm/src/dynamic/constants.h	/^		READ_OP = 1,$/;"	e	enum:wlpdstm::OperationType
READ_OP	swisstm/src/stm/constants.h	/^		READ_OP = 1,$/;"	e	enum:wlpdstm::OperationType
READ_STATS_ARRAY_ROWS	swisstm/src/epochstm/transaction.h	/^#define READ_STATS_ARRAY_ROWS /;"	d
READ_WORD	swisstm/src/stm_api/read_write.h	/^#	define READ_WORD(/;"	d
RED	swisstm/src/mubench/rbtree.c	/^    RED   = 0,$/;"	e	enum:__anoned9e1f2b0103	file:
RESTARTED	swisstm/src/common/profiling/non_tx_duration_pcnt_simple.h	/^				RESTARTED$/;"	e	enum:wlpdstm::NonTxDurationPcntProfilingSimple::LastTransactionState
RESTARTED	swisstm/src/common/profiling/non_tx_duration_simple.h	/^				RESTARTED$/;"	e	enum:wlpdstm::NonTxDurationProfilingSimple::LastTransactionState
RESTARTED	swisstm/src/common/stats_base.h	/^			RESTARTED,$/;"	e	enum:wlpdstm::ThreadStatsBase::__anon5b2d285c0103
RESTART_COMMITTING	swisstm/src/dynamic/eager/eager.h	/^				RESTART_COMMITTING$/;"	e	enum:wlpdstm::TxEager::TryCommitResult
RESTART_COMMITTING	swisstm/src/dynamic/lazy/lazy.h	/^				RESTART_COMMITTING$/;"	e	enum:wlpdstm::TxLazy::TryCommitResult
RESTART_COMMITTING	swisstm/src/dynamic/mixed/mixed.h	/^				RESTART_COMMITTING$/;"	e	enum:wlpdstm::TxMixed::TryCommitResult
RESTART_COMMITTING	swisstm/src/dynamic/transaction.h	/^		RESTART_COMMITTING$/;"	e	enum:wlpdstm::TryCommitResult
RESTART_COMMITTING	swisstm/src/stm/transaction_mixinv.h	/^			RESTART_COMMITTING$/;"	e	enum:wlpdstm::TxMixinv::TryCommitResult
RESTART_EXTERNAL	swisstm/src/epochstm/transaction.h	/^				RESTART_EXTERNAL,$/;"	e	enum:wlpdstm::TransactionEpoch::RestartCause
RESTART_EXTERNAL	swisstm/src/p-tlrw/transaction.h	/^			RESTART_EXTERNAL,$/;"	e	enum:wlpdstm::TransactionTlrw::RestartCause
RESTART_EXTERNAL	swisstm/src/rw/transaction.h	/^			RESTART_EXTERNAL,$/;"	e	enum:wlpdstm::TransactionRw::RestartCause
RESTART_EXTERNAL	swisstm/src/tlrw/transaction.h	/^			RESTART_EXTERNAL,$/;"	e	enum:wlpdstm::TransactionTlrw::RestartCause
RESTART_READ_WRITE	swisstm/src/epochstm/transaction.h	/^				RESTART_READ_WRITE,$/;"	e	enum:wlpdstm::TransactionEpoch::RestartCause
RESTART_READ_WRITE	swisstm/src/p-tlrw/transaction.h	/^			RESTART_READ_WRITE,$/;"	e	enum:wlpdstm::TransactionTlrw::RestartCause
RESTART_READ_WRITE	swisstm/src/rw/transaction.h	/^			RESTART_READ_WRITE,$/;"	e	enum:wlpdstm::TransactionRw::RestartCause
RESTART_READ_WRITE	swisstm/src/tlrw/transaction.h	/^			RESTART_READ_WRITE,$/;"	e	enum:wlpdstm::TransactionTlrw::RestartCause
RESTART_RUNNING	swisstm/src/dynamic/eager/eager.h	/^				RESTART_RUNNING,$/;"	e	enum:wlpdstm::TxEager::TryCommitResult
RESTART_RUNNING	swisstm/src/dynamic/lazy/lazy.h	/^				RESTART_RUNNING,$/;"	e	enum:wlpdstm::TxLazy::TryCommitResult
RESTART_RUNNING	swisstm/src/dynamic/mixed/mixed.h	/^				RESTART_RUNNING,$/;"	e	enum:wlpdstm::TxMixed::TryCommitResult
RESTART_RUNNING	swisstm/src/dynamic/transaction.h	/^		RESTART_RUNNING,$/;"	e	enum:wlpdstm::TryCommitResult
RESTART_RUNNING	swisstm/src/stm/transaction_mixinv.h	/^			RESTART_RUNNING,$/;"	e	enum:wlpdstm::TxMixinv::TryCommitResult
RESTART_WRITE_READ	swisstm/src/epochstm/transaction.h	/^				RESTART_WRITE_READ,$/;"	e	enum:wlpdstm::TransactionEpoch::RestartCause
RESTART_WRITE_READ	swisstm/src/p-tlrw/transaction.h	/^			RESTART_WRITE_READ,$/;"	e	enum:wlpdstm::TransactionTlrw::RestartCause
RESTART_WRITE_READ	swisstm/src/rw/transaction.h	/^			RESTART_WRITE_READ,$/;"	e	enum:wlpdstm::TransactionRw::RestartCause
RESTART_WRITE_READ	swisstm/src/tlrw/transaction.h	/^			RESTART_WRITE_READ,$/;"	e	enum:wlpdstm::TransactionTlrw::RestartCause
RESTART_WRITE_WRITE	swisstm/src/epochstm/transaction.h	/^				RESTART_WRITE_WRITE$/;"	e	enum:wlpdstm::TransactionEpoch::RestartCause
RESTART_WRITE_WRITE	swisstm/src/p-tlrw/transaction.h	/^			RESTART_WRITE_WRITE$/;"	e	enum:wlpdstm::TransactionTlrw::RestartCause
RESTART_WRITE_WRITE	swisstm/src/rw/transaction.h	/^			RESTART_WRITE_WRITE$/;"	e	enum:wlpdstm::TransactionRw::RestartCause
RESTART_WRITE_WRITE	swisstm/src/tlrw/transaction.h	/^			RESTART_WRITE_WRITE$/;"	e	enum:wlpdstm::TransactionTlrw::RestartCause
RETIRED_INSTRUCTIONS	swisstm/src/dynamic/stats.h	/^			RETIRED_INSTRUCTIONS,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
RETIRED_INSTRUCTIONS	swisstm/src/epochstm/stats.h	/^			RETIRED_INSTRUCTIONS,$/;"	e	enum:wlpdstm::EpochSTMStats::Type
RETIRED_INSTRUCTIONS	swisstm/src/p-tlrw/stats.h	/^			RETIRED_INSTRUCTIONS,$/;"	e	enum:wlpdstm::TlrwStats::Type
RETIRED_INSTRUCTIONS	swisstm/src/rw/stats.h	/^			RETIRED_INSTRUCTIONS,$/;"	e	enum:wlpdstm::RwStats::Type
RETIRED_INSTRUCTIONS	swisstm/src/stm/stats.h	/^			RETIRED_INSTRUCTIONS,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
RETIRED_INSTRUCTIONS	swisstm/src/tlrw/stats.h	/^			RETIRED_INSTRUCTIONS,$/;"	e	enum:wlpdstm::TlrwStats::Type
REVERT_STAT	swisstm/src/common/profiling/adaptive.h	/^#define REVERT_STAT(/;"	d
REVERT_STAT	swisstm/src/common/profiling/non_tx_duration.h	/^#define REVERT_STAT(/;"	d
REVERT_STAT	swisstm/src/common/profiling/tx_duration.h	/^#define REVERT_STAT(/;"	d
REVERT_STAT	swisstm/src/dynamic/profiling/adaptive_dynamic.h	/^#define REVERT_STAT(/;"	d
RIGHT_OF	swisstm/src/mubench/rbtree.c	/^#define RIGHT_OF(/;"	d	file:
RLU_ABORT	rlu.h	/^#define RLU_ABORT(/;"	d
RLU_ALLOC	rlu.h	/^#define RLU_ALLOC(/;"	d
RLU_ASSERT	rlu.c	/^#define RLU_ASSERT(/;"	d	file:
RLU_ASSERT_MSG	rlu.c	/^#define RLU_ASSERT_MSG(/;"	d	file:
RLU_ASSIGN_PTR	rlu.h	/^#define RLU_ASSIGN_PTR(/;"	d
RLU_CACHE_LINE_SIZE	rlu.c	/^# define RLU_CACHE_LINE_SIZE /;"	d	file:
RLU_DEFAULT_PADDING	rlu.h	/^#define RLU_DEFAULT_PADDING /;"	d
RLU_DEREF	rlu.h	/^#define RLU_DEREF(/;"	d
RLU_DEREF_INTERNAL	rlu.h	/^#define RLU_DEREF_INTERNAL(/;"	d
RLU_DESTROY_NVM	rlu.h	/^#define RLU_DESTROY_NVM(/;"	d
RLU_FINISH	rlu.h	/^#define RLU_FINISH(/;"	d
RLU_FREE	rlu.h	/^#define RLU_FREE(/;"	d
RLU_GENERAL_WRITER_LOCK	rlu.h	/^#define RLU_GENERAL_WRITER_LOCK /;"	d
RLU_GET_COPY	rlu.h	/^#define RLU_GET_COPY(/;"	d
RLU_H	rlu.h	/^#define RLU_H /;"	d
RLU_INIT	rlu.h	/^#define RLU_INIT(/;"	d
RLU_IS_SAME_PTRS	rlu.h	/^#define RLU_IS_SAME_PTRS(/;"	d
RLU_IS_UNLOCKED	rlu.h	/^#define RLU_IS_UNLOCKED(/;"	d
RLU_LOCK	rlu.h	/^#define RLU_LOCK(/;"	d
RLU_MAX_FREE_NODES	rlu.h	/^#define RLU_MAX_FREE_NODES /;"	d
RLU_MAX_NESTED_WRITER_LOCKS	rlu.h	/^#define RLU_MAX_NESTED_WRITER_LOCKS /;"	d
RLU_MAX_THREADS	rlu.h	/^#define RLU_MAX_THREADS /;"	d
RLU_MAX_WRITER_LOCKS	rlu.h	/^#define RLU_MAX_WRITER_LOCKS /;"	d
RLU_MAX_WRITE_SETS	rlu.h	/^#define RLU_MAX_WRITE_SETS /;"	d
RLU_MAX_WRITE_SET_BUFFER_SIZE	rlu.h	/^#define RLU_MAX_WRITE_SET_BUFFER_SIZE /;"	d
RLU_MOVE_PTR_BACK	rlu.h	/^#define RLU_MOVE_PTR_BACK(/;"	d
RLU_NUM_WS	rlu.h	/^#define RLU_NUM_WS /;"	d
RLU_OBJ_HEADER_SIZE	rlu.h	/^#define RLU_OBJ_HEADER_SIZE /;"	d
RLU_OBJ_TO_H	rlu.h	/^#define RLU_OBJ_TO_H(/;"	d
RLU_PRINT_STATS	rlu.h	/^#define RLU_PRINT_STATS(/;"	d
RLU_PTR_IS_LOCKED	rlu.h	/^#define RLU_PTR_IS_LOCKED(/;"	d
RLU_READER_LOCK	rlu.h	/^#define RLU_READER_LOCK(/;"	d
RLU_READER_UNLOCK	rlu.h	/^#define RLU_READER_UNLOCK(/;"	d
RLU_THREAD_FINISH	rlu.h	/^#define RLU_THREAD_FINISH(/;"	d
RLU_THREAD_INIT	rlu.h	/^#define RLU_THREAD_INIT(/;"	d
RLU_TRACE	rlu.c	/^#define RLU_TRACE(/;"	d	file:
RLU_TRACE_GLOBAL	rlu.c	/^#define RLU_TRACE_GLOBAL(/;"	d	file:
RLU_TRY_LOCK	rlu.h	/^#define RLU_TRY_LOCK(/;"	d
RLU_TRY_LOCK_CONST	rlu.h	/^#define RLU_TRY_LOCK_CONST(/;"	d
RLU_TRY_WRITER_LOCK	rlu.h	/^#define RLU_TRY_WRITER_LOCK(/;"	d
RLU_TYPE	rlu.h	/^#define RLU_TYPE /;"	d
RLU_TYPE_COARSE_GRAINED	rlu.h	/^#define RLU_TYPE_COARSE_GRAINED /;"	d
RLU_TYPE_FINE_GRAINED	rlu.h	/^#define RLU_TYPE_FINE_GRAINED /;"	d
ROTATE_LEFT	swisstm/src/mubench/rbtree.c	/^#define ROTATE_LEFT(/;"	d	file:
ROTATE_RIGHT	swisstm/src/mubench/rbtree.c	/^#define ROTATE_RIGHT(/;"	d	file:
RW_SRC_DIR	swisstm/Makefile.in	/^RW_SRC_DIR = $(SRC_DIR)\/rw$/;"	m
Random	swisstm/src/common/random.h	/^	class Random {$/;"	c	namespace:wlpdstm
RandomTxSampling	swisstm/src/common/sampling.h	/^	class RandomTxSampling {$/;"	c	namespace:wlpdstm
ReadLock	swisstm/src/p-tlrw/transaction.h	/^		typedef uint8_t ReadLock;$/;"	t	class:wlpdstm::TransactionTlrw	typeref:typename:uint8_t
ReadLock	swisstm/src/rw/transaction.h	/^		typedef Word ReadLock;$/;"	t	class:wlpdstm::TransactionRw	typeref:typename:Word
ReadLock	swisstm/src/tlrw/transaction.h	/^		typedef uint8_t ReadLock;$/;"	t	class:wlpdstm::TransactionTlrw	typeref:typename:uint8_t
ReadLocksToWord	swisstm/src/p-tlrw/transaction.h	/^		} ReadLocksToWord;$/;"	t	class:wlpdstm::TransactionTlrw	typeref:union:wlpdstm::TransactionTlrw::__anon7ebeeeb6010a
ReadLocksToWord	swisstm/src/tlrw/transaction.h	/^		} ReadLocksToWord;$/;"	t	class:wlpdstm::TransactionTlrw	typeref:union:wlpdstm::TransactionTlrw::__anoncf01a599010a
ReadLog	swisstm/src/dynamic/log.h	/^	typedef Log<ReadLogEntry> ReadLog;$/;"	t	namespace:wlpdstm	typeref:typename:Log<ReadLogEntry>
ReadLog	swisstm/src/stm/transaction_mixinv.h	/^		typedef Log<ReadLogEntry> ReadLog;$/;"	t	class:wlpdstm::TxMixinv	typeref:typename:Log<ReadLogEntry>
ReadLogEntry	swisstm/src/dynamic/log.h	/^	struct ReadLogEntry {$/;"	s	namespace:wlpdstm
ReadLogEntry	swisstm/src/stm/transaction_mixinv.h	/^		struct ReadLogEntry {$/;"	s	class:wlpdstm::TxMixinv
ReadSet	swisstm/src/p-tlrw/transaction.h	/^		class ReadSet : public Log<ReadSetEntry> {$/;"	c	class:wlpdstm::TransactionTlrw
ReadSet	swisstm/src/rw/transaction.h	/^		typedef Log<ReadSetEntry> ReadSet;$/;"	t	class:wlpdstm::TransactionRw	typeref:typename:Log<ReadSetEntry>
ReadSet	swisstm/src/tlrw/transaction.h	/^		typedef Log<ReadSetEntry> ReadSet;$/;"	t	class:wlpdstm::TransactionTlrw	typeref:typename:Log<ReadSetEntry>
ReadSetEntry	swisstm/src/p-tlrw/transaction.h	/^		typedef OwnershipRecord *ReadSetEntry;$/;"	t	class:wlpdstm::TransactionTlrw	typeref:typename:OwnershipRecord *
ReadSetEntry	swisstm/src/rw/transaction.h	/^		typedef OwnershipRecord *ReadSetEntry;$/;"	t	class:wlpdstm::TransactionRw	typeref:typename:OwnershipRecord *
ReadSetEntry	swisstm/src/tlrw/transaction.h	/^		typedef OwnershipRecord *ReadSetEntry;$/;"	t	class:wlpdstm::TransactionTlrw	typeref:typename:OwnershipRecord *
ReadWord	swisstm/src/dynamic/eager/eager.cc	/^Word wlpdstm::TxEager::ReadWord(TransactionDynamic *desc, Word *address) {$/;"	f	class:wlpdstm::TxEager	typeref:typename:Word
ReadWord	swisstm/src/dynamic/lazy/lazy.cc	/^Word wlpdstm::TxLazy::ReadWord(TransactionDynamic *desc, Word *address) {$/;"	f	class:wlpdstm::TxLazy	typeref:typename:Word
ReadWord	swisstm/src/dynamic/mixed/mixed.cc	/^Word wlpdstm::TxMixed::ReadWord(TransactionDynamic *desc, Word *address) {$/;"	f	class:wlpdstm::TxMixed	typeref:typename:Word
ReadWord	swisstm/src/dynamic/transaction.h	/^inline Word wlpdstm::TransactionDynamic::ReadWord(Word *addr) {$/;"	f	class:wlpdstm::TransactionDynamic	typeref:typename:Word
ReadWord	swisstm/src/epochstm/transaction.h	/^inline Word wlpdstm::TransactionEpoch::ReadWord(Word *addr) {$/;"	f	class:wlpdstm::TransactionEpoch	typeref:typename:Word
ReadWord	swisstm/src/p-tlrw/transaction.h	/^inline Word wlpdstm::TransactionTlrw::ReadWord(Word *addr) {$/;"	f	class:wlpdstm::TransactionTlrw	typeref:typename:Word
ReadWord	swisstm/src/rw/transaction.h	/^inline Word wlpdstm::TransactionRw::ReadWord(Word *addr) {$/;"	f	class:wlpdstm::TransactionRw	typeref:typename:Word
ReadWord	swisstm/src/stm/transaction_mixinv.h	/^inline Word wlpdstm::TxMixinv::ReadWord(Word *address) {$/;"	f	class:wlpdstm::TxMixinv	typeref:typename:Word
ReadWord	swisstm/src/stm_api/profiled_transaction.h	/^inline Word wlpdstm::ProfiledTransaction<TX, STATS_TYPE>::ReadWord(Word *addr) {$/;"	f	class:wlpdstm::ProfiledTransaction	typeref:typename:Word
ReadWord	swisstm/src/stm_api/transaction.h	/^		static Word ReadWord(Word *address) {$/;"	f	class:wlpdstm::CurrentTransaction	typeref:typename:Word
ReadWord	swisstm/src/tlrw/transaction.h	/^inline Word wlpdstm::TransactionTlrw::ReadWord(Word *addr) {$/;"	f	class:wlpdstm::TransactionTlrw	typeref:typename:Word
ReadWordEnd	swisstm/src/common/profiling/adaptive.h	/^inline void wlpdstm::AdaptiveProfiling<STATS, STATS_TYPE>::ReadWordEnd(Word res) {$/;"	f	class:wlpdstm::AdaptiveProfiling	typeref:typename:void
ReadWordEnd	swisstm/src/common/profiling/base.h	/^			void ReadWordEnd(Word res) {$/;"	f	class:wlpdstm::BaseProfiling	typeref:typename:void
ReadWordEnd	swisstm/src/common/profiling/non_tx_duration.h	/^inline void wlpdstm::NonTxDurationProfiling<STATS, STATS_TYPE>::ReadWordEnd(Word res) {$/;"	f	class:wlpdstm::NonTxDurationProfiling	typeref:typename:void
ReadWordEnd	swisstm/src/common/profiling/non_tx_duration_pcnt_simple.h	/^inline void wlpdstm::NonTxDurationPcntProfilingSimple<STATS, STATS_TYPE>::ReadWordEnd(Word res) /;"	f	class:wlpdstm::NonTxDurationPcntProfilingSimple	typeref:typename:void
ReadWordEnd	swisstm/src/common/profiling/non_tx_duration_simple.h	/^inline void wlpdstm::NonTxDurationProfilingSimple<STATS, STATS_TYPE>::ReadWordEnd(Word res) {$/;"	f	class:wlpdstm::NonTxDurationProfilingSimple	typeref:typename:void
ReadWordEnd	swisstm/src/common/profiling/simple.h	/^inline void wlpdstm::SimpleProfiling<STATS, STATS_TYPE>::ReadWordEnd(Word res) {$/;"	f	class:wlpdstm::SimpleProfiling	typeref:typename:void
ReadWordEnd	swisstm/src/common/profiling/tx_duration.h	/^inline void wlpdstm::TxDurationProfiling<STATS, STATS_TYPE>::ReadWordEnd(Word res) {$/;"	f	class:wlpdstm::TxDurationProfiling	typeref:typename:void
ReadWordEnd	swisstm/src/dynamic/profiling/adaptive_dynamic.h	/^inline void wlpdstm::AdaptiveDynamicProfiling<STATS, STATS_TYPE>::ReadWordEnd(Word res) {$/;"	f	class:wlpdstm::AdaptiveDynamicProfiling	typeref:typename:void
ReadWordEndForEstimatingCosts	swisstm/src/common/profiling/adaptive.h	/^inline void wlpdstm::AdaptiveProfiling<STATS, STATS_TYPE>::ReadWordEndForEstimatingCosts() {$/;"	f	class:wlpdstm::AdaptiveProfiling	typeref:typename:void
ReadWordEndForEstimatingCosts	swisstm/src/dynamic/profiling/adaptive_dynamic.h	/^inline void wlpdstm::AdaptiveDynamicProfiling<STATS, STATS_TYPE>::ReadWordEndForEstimatingCosts(/;"	f	class:wlpdstm::AdaptiveDynamicProfiling	typeref:typename:void
ReadWordFunPtr	swisstm/src/dynamic/transaction.h	/^			typedef Word (*ReadWordFunPtr)(TransactionDynamic *desc, Word *addr);$/;"	t	class:wlpdstm::TransactionDynamic	typeref:typename:Word (*)(TransactionDynamic * desc,Word * addr)
ReadWordInline	swisstm/src/dynamic/eager/eager_impl_inline.h	/^inline Word wlpdstm::TxEager::ReadWordInline(TransactionDynamic *desc, Word *address) {$/;"	f	class:wlpdstm::TxEager	typeref:typename:Word
ReadWordInline	swisstm/src/dynamic/lazy/lazy_impl_inline.h	/^inline Word wlpdstm::TxLazy::ReadWordInline(TransactionDynamic *desc, Word *address) {$/;"	f	class:wlpdstm::TxLazy	typeref:typename:Word
ReadWordInline	swisstm/src/dynamic/mixed/mixed_inline_fun.h	/^inline Word wlpdstm::TxMixed::ReadWordInline(TransactionDynamic *desc, Word *address) {$/;"	f	class:wlpdstm::TxMixed	typeref:typename:Word
ReadWordInner	swisstm/src/stm/transaction_mixinv.h	/^inline Word wlpdstm::TxMixinv::ReadWordInner(Word *address) {$/;"	f	class:wlpdstm::TxMixinv	typeref:typename:Word
ReadWordInnerLoop	swisstm/src/dynamic/eager/eager_impl_inline.h	/^inline Word wlpdstm::TxEager::ReadWordInnerLoop(TransactionDynamic *desc, Word *address, WriteLo/;"	f	class:wlpdstm::TxEager	typeref:typename:Word
ReadWordInnerLoop	swisstm/src/dynamic/lazy/lazy_impl_inline.h	/^inline Word wlpdstm::TxLazy::ReadWordInnerLoop(TransactionDynamic *desc, Word *address, VersionL/;"	f	class:wlpdstm::TxLazy	typeref:typename:Word
ReadWordInnerLoop	swisstm/src/dynamic/mixed/mixed_inline_fun.h	/^inline Word wlpdstm::TxMixed::ReadWordInnerLoop(TransactionDynamic *desc, Word *address, Version/;"	f	class:wlpdstm::TxMixed	typeref:typename:Word
ReadWordProfiled	swisstm/src/dynamic/eager/eager.cc	/^Word wlpdstm::TxEager::ReadWordProfiled(TransactionDynamic *desc, Word *address) {$/;"	f	class:wlpdstm::TxEager	typeref:typename:Word
ReadWordProfiled	swisstm/src/dynamic/lazy/lazy.cc	/^Word wlpdstm::TxLazy::ReadWordProfiled(TransactionDynamic *desc, Word *address) {$/;"	f	class:wlpdstm::TxLazy	typeref:typename:Word
ReadWordProfiled	swisstm/src/dynamic/mixed/mixed.cc	/^Word wlpdstm::TxMixed::ReadWordProfiled(TransactionDynamic *desc, Word *address) {$/;"	f	class:wlpdstm::TxMixed	typeref:typename:Word
ReadWordReadOnly	swisstm/src/dynamic/eager/eager.cc	/^Word wlpdstm::TxEager::ReadWordReadOnly(TransactionDynamic *desc, Word *address) {$/;"	f	class:wlpdstm::TxEager	typeref:typename:Word
ReadWordReadOnly	swisstm/src/dynamic/lazy/lazy.cc	/^Word wlpdstm::TxLazy::ReadWordReadOnly(TransactionDynamic *desc, Word *address) {$/;"	f	class:wlpdstm::TxLazy	typeref:typename:Word
ReadWordReadOnly	swisstm/src/dynamic/mixed/mixed.cc	/^Word wlpdstm::TxMixed::ReadWordReadOnly(TransactionDynamic *desc, Word *address) {$/;"	f	class:wlpdstm::TxMixed	typeref:typename:Word
ReadWordReadOnlyProfiled	swisstm/src/dynamic/eager/eager.cc	/^Word wlpdstm::TxEager::ReadWordReadOnlyProfiled(TransactionDynamic *desc, Word *address) {$/;"	f	class:wlpdstm::TxEager	typeref:typename:Word
ReadWordReadOnlyProfiled	swisstm/src/dynamic/lazy/lazy.cc	/^Word wlpdstm::TxLazy::ReadWordReadOnlyProfiled(TransactionDynamic *desc, Word *address) {$/;"	f	class:wlpdstm::TxLazy	typeref:typename:Word
ReadWordReadOnlyProfiled	swisstm/src/dynamic/mixed/mixed.cc	/^Word wlpdstm::TxMixed::ReadWordReadOnlyProfiled(TransactionDynamic *desc, Word *address) {$/;"	f	class:wlpdstm::TxMixed	typeref:typename:Word
ReadWordStart	swisstm/src/common/profiling/adaptive.h	/^inline void wlpdstm::AdaptiveProfiling<STATS, STATS_TYPE>::ReadWordStart(Word *addr) {$/;"	f	class:wlpdstm::AdaptiveProfiling	typeref:typename:void
ReadWordStart	swisstm/src/common/profiling/base.h	/^			void ReadWordStart(Word *addr) {$/;"	f	class:wlpdstm::BaseProfiling	typeref:typename:void
ReadWordStart	swisstm/src/common/profiling/non_tx_duration.h	/^inline void wlpdstm::NonTxDurationProfiling<STATS, STATS_TYPE>::ReadWordStart(Word *addr) {$/;"	f	class:wlpdstm::NonTxDurationProfiling	typeref:typename:void
ReadWordStart	swisstm/src/common/profiling/non_tx_duration_pcnt_simple.h	/^inline void wlpdstm::NonTxDurationPcntProfilingSimple<STATS, STATS_TYPE>::ReadWordStart(Word *ad/;"	f	class:wlpdstm::NonTxDurationPcntProfilingSimple	typeref:typename:void
ReadWordStart	swisstm/src/common/profiling/non_tx_duration_simple.h	/^inline void wlpdstm::NonTxDurationProfilingSimple<STATS, STATS_TYPE>::ReadWordStart(Word *addr) /;"	f	class:wlpdstm::NonTxDurationProfilingSimple	typeref:typename:void
ReadWordStart	swisstm/src/common/profiling/simple.h	/^inline void wlpdstm::SimpleProfiling<STATS, STATS_TYPE>::ReadWordStart(Word *addr) {$/;"	f	class:wlpdstm::SimpleProfiling	typeref:typename:void
ReadWordStart	swisstm/src/common/profiling/tx_duration.h	/^inline void wlpdstm::TxDurationProfiling<STATS, STATS_TYPE>::ReadWordStart(Word *addr) {$/;"	f	class:wlpdstm::TxDurationProfiling	typeref:typename:void
ReadWordStart	swisstm/src/dynamic/profiling/adaptive_dynamic.h	/^inline void wlpdstm::AdaptiveDynamicProfiling<STATS, STATS_TYPE>::ReadWordStart(Word *addr) {$/;"	f	class:wlpdstm::AdaptiveDynamicProfiling	typeref:typename:void
ReadWordStartForEstimatingCosts	swisstm/src/common/profiling/adaptive.h	/^inline void wlpdstm::AdaptiveProfiling<STATS, STATS_TYPE>::ReadWordStartForEstimatingCosts() {$/;"	f	class:wlpdstm::AdaptiveProfiling	typeref:typename:void
ReadWordStartForEstimatingCosts	swisstm/src/dynamic/profiling/adaptive_dynamic.h	/^inline void wlpdstm::AdaptiveDynamicProfiling<STATS, STATS_TYPE>::ReadWordStartForEstimatingCost/;"	f	class:wlpdstm::AdaptiveDynamicProfiling	typeref:typename:void
ReadWordStatic	swisstm/src/dynamic/eager/eager_static.h	/^API_LINKAGE Word wlpdstm::TxEager::ReadWordStatic(TransactionDynamic *desc, Word *addr) {$/;"	f	class:wlpdstm::TxEager	typeref:typename:API_LINKAGE Word
ReadWordStatic	swisstm/src/dynamic/lazy/lazy_static.h	/^API_LINKAGE Word wlpdstm::TxLazy::ReadWordStatic(TransactionDynamic *desc, Word *addr) {$/;"	f	class:wlpdstm::TxLazy	typeref:typename:API_LINKAGE Word
ReadWordStatic	swisstm/src/dynamic/mixed/mixed_inline.h	/^API_LINKAGE Word wlpdstm::TxMixed::ReadWordStatic(TransactionDynamic *desc, Word *addr) {$/;"	f	class:wlpdstm::TxMixed	typeref:typename:API_LINKAGE Word
Reader	swisstm/src/epochstm/transaction.h	/^			typedef TxId Reader;$/;"	t	class:wlpdstm::TransactionEpoch	typeref:typename:TxId
ReaderExtraArray	swisstm/src/epochstm/transaction.h	/^			struct ReaderExtraArray : public CacheAlignedAlloc {$/;"	s	class:wlpdstm::TransactionEpoch
ReaderToWord	swisstm/src/epochstm/transaction.h	/^			} ReaderToWord;$/;"	t	class:wlpdstm::TransactionEpoch	typeref:union:wlpdstm::TransactionEpoch::__anon706747f3030a
RecordDuration	swisstm/src/common/profiling/non_tx_duration_pcnt_simple.h	/^inline void wlpdstm::NonTxDurationPcntProfilingSimple<STATS, STATS_TYPE>::RecordDuration() {$/;"	f	class:wlpdstm::NonTxDurationPcntProfilingSimple	typeref:typename:void
RecordDuration	swisstm/src/common/profiling/non_tx_duration_simple.h	/^inline void wlpdstm::NonTxDurationProfilingSimple<STATS, STATS_TYPE>::RecordDuration() {$/;"	f	class:wlpdstm::NonTxDurationProfilingSimple	typeref:typename:void
Register	swisstm/src/dynamic/transaction.h	/^inline void wlpdstm::TransactionDynamic::Register() {$/;"	f	class:wlpdstm::TransactionDynamic	typeref:typename:void
Register	swisstm/src/stm/transaction_mixinv.h	/^inline void wlpdstm::TxMixinv::Register() {$/;"	f	class:wlpdstm::TxMixinv	typeref:typename:void
Reset	swisstm/src/common/stats_base.h	/^		void Reset() {$/;"	f	class:wlpdstm::StatsBase	typeref:typename:void
Reset	swisstm/src/stm/large_lock_set.h	/^			void Reset() {$/;"	f	class:wlpdstm::LargeLockSet	typeref:typename:void
ResetFunPtrOnStart	swisstm/src/dynamic/transaction.h	/^inline void wlpdstm::TransactionDynamic::ResetFunPtrOnStart() {$/;"	f	class:wlpdstm::TransactionDynamic	typeref:typename:void
Restart	swisstm/src/dynamic/eager/eager_impl_inline.h	/^inline void wlpdstm::TxEager::Restart(TransactionDynamic *desc) {$/;"	f	class:wlpdstm::TxEager	typeref:typename:void
RestartCause	swisstm/src/epochstm/transaction.h	/^			enum RestartCause {$/;"	g	class:wlpdstm::TransactionEpoch
RestartCause	swisstm/src/p-tlrw/transaction.h	/^		enum RestartCause {$/;"	g	class:wlpdstm::TransactionTlrw
RestartCause	swisstm/src/rw/transaction.h	/^		enum RestartCause {$/;"	g	class:wlpdstm::TransactionRw
RestartCause	swisstm/src/tlrw/transaction.h	/^		enum RestartCause {$/;"	g	class:wlpdstm::TransactionTlrw
RestartCleanup	swisstm/src/epochstm/transaction.h	/^inline void wlpdstm::TransactionEpoch::RestartCleanup(RestartCause cause) {$/;"	f	class:wlpdstm::TransactionEpoch	typeref:typename:void
RestartCleanup	swisstm/src/p-tlrw/transaction.h	/^inline void wlpdstm::TransactionTlrw::RestartCleanup(RestartCause cause) {$/;"	f	class:wlpdstm::TransactionTlrw	typeref:typename:void
RestartCleanup	swisstm/src/rw/transaction.h	/^inline void wlpdstm::TransactionRw::RestartCleanup(RestartCause cause) {$/;"	f	class:wlpdstm::TransactionRw	typeref:typename:void
RestartCleanup	swisstm/src/tlrw/transaction.h	/^inline void wlpdstm::TransactionTlrw::RestartCleanup(RestartCause cause) {$/;"	f	class:wlpdstm::TransactionTlrw	typeref:typename:void
RestartCommitTS	swisstm/src/dynamic/transaction.h	/^inline void wlpdstm::TransactionDynamic::RestartCommitTS() {$/;"	f	class:wlpdstm::TransactionDynamic	typeref:typename:void
RestartCommitTS	swisstm/src/stm/transaction_mixinv.h	/^inline void wlpdstm::TxMixinv::RestartCommitTS() {$/;"	f	class:wlpdstm::TxMixinv	typeref:typename:void
RestartCommitting	swisstm/src/dynamic/lazy/lazy_impl_inline.h	/^inline void wlpdstm::TxLazy::RestartCommitting(TransactionDynamic *desc) {$/;"	f	class:wlpdstm::TxLazy	typeref:typename:void
RestartCommitting	swisstm/src/dynamic/mixed/mixed_inline_fun.h	/^inline void wlpdstm::TxMixed::RestartCommitting(TransactionDynamic *desc) {$/;"	f	class:wlpdstm::TxMixed	typeref:typename:void
RestartCommitting	swisstm/src/stm/transaction_mixinv.h	/^inline void wlpdstm::TxMixinv::RestartCommitting() {$/;"	f	class:wlpdstm::TxMixinv	typeref:typename:void
RestartJump	swisstm/src/dynamic/transaction.h	/^inline void wlpdstm::TransactionDynamic::RestartJump() {$/;"	f	class:wlpdstm::TransactionDynamic	typeref:typename:void
RestartJump	swisstm/src/epochstm/transaction.h	/^inline void wlpdstm::TransactionEpoch::RestartJump() {$/;"	f	class:wlpdstm::TransactionEpoch	typeref:typename:void
RestartJump	swisstm/src/p-tlrw/transaction.h	/^inline void wlpdstm::TransactionTlrw::RestartJump() {$/;"	f	class:wlpdstm::TransactionTlrw	typeref:typename:void
RestartJump	swisstm/src/rw/transaction.h	/^inline void wlpdstm::TransactionRw::RestartJump() {$/;"	f	class:wlpdstm::TransactionRw	typeref:typename:void
RestartJump	swisstm/src/stm/transaction_mixinv.h	/^inline void wlpdstm::TxMixinv::RestartJump() {$/;"	f	class:wlpdstm::TxMixinv	typeref:typename:void
RestartJump	swisstm/src/tlrw/transaction.h	/^inline void wlpdstm::TransactionTlrw::RestartJump() {$/;"	f	class:wlpdstm::TransactionTlrw	typeref:typename:void
RestartRunning	swisstm/src/dynamic/lazy/lazy_impl_inline.h	/^inline void wlpdstm::TxLazy::RestartRunning(TransactionDynamic *desc) {$/;"	f	class:wlpdstm::TxLazy	typeref:typename:void
RestartRunning	swisstm/src/dynamic/mixed/mixed_inline_fun.h	/^inline void wlpdstm::TxMixed::RestartRunning(TransactionDynamic *desc) {$/;"	f	class:wlpdstm::TxMixed	typeref:typename:void
RestartRunning	swisstm/src/stm/transaction_mixinv.h	/^inline void wlpdstm::TxMixinv::RestartRunning() {$/;"	f	class:wlpdstm::TxMixinv	typeref:typename:void
Rollback	swisstm/src/dynamic/eager/eager_impl_inline.h	/^inline void wlpdstm::TxEager::Rollback(TransactionDynamic *desc) {$/;"	f	class:wlpdstm::TxEager	typeref:typename:void
Rollback	swisstm/src/dynamic/memory/memory_impl.h	/^		void Rollback() {$/;"	f	struct:wlpdstm::PtrBufferT	typeref:typename:void
Rollback	swisstm/src/dynamic/memory/memory_impl_priv.h	/^	void Rollback() {$/;"	f	struct:wlpdstm::PtrBufferT	typeref:typename:void
Rollback	swisstm/src/epochstm/memory/memory_txend.h	/^	void Rollback() {$/;"	f	struct:wlpdstm::PtrBufferT	typeref:typename:void
Rollback	swisstm/src/epochstm/transaction.h	/^inline void wlpdstm::TransactionEpoch::Rollback() {$/;"	f	class:wlpdstm::TransactionEpoch	typeref:typename:void
Rollback	swisstm/src/p-tlrw/memory/memory_txend.h	/^	void Rollback() {$/;"	f	struct:wlpdstm::PtrBufferT	typeref:typename:void
Rollback	swisstm/src/p-tlrw/transaction.h	/^inline void wlpdstm::TransactionTlrw::Rollback() {$/;"	f	class:wlpdstm::TransactionTlrw	typeref:typename:void
Rollback	swisstm/src/rw/memory/memory_txend.h	/^	void Rollback() {$/;"	f	struct:wlpdstm::PtrBufferT	typeref:typename:void
Rollback	swisstm/src/rw/transaction.h	/^inline void wlpdstm::TransactionRw::Rollback() {$/;"	f	class:wlpdstm::TransactionRw	typeref:typename:void
Rollback	swisstm/src/stm/memory/memory_impl.h	/^		void Rollback() {$/;"	f	struct:wlpdstm::PtrBufferT	typeref:typename:void
Rollback	swisstm/src/stm/memory/memory_impl_priv.h	/^	void Rollback() {$/;"	f	struct:wlpdstm::PtrBufferT	typeref:typename:void
Rollback	swisstm/src/tlrw/memory/memory_txend.h	/^	void Rollback() {$/;"	f	struct:wlpdstm::PtrBufferT	typeref:typename:void
Rollback	swisstm/src/tlrw/transaction.h	/^inline void wlpdstm::TransactionTlrw::Rollback() {$/;"	f	class:wlpdstm::TransactionTlrw	typeref:typename:void
RollbackCommitting	swisstm/src/dynamic/lazy/lazy_impl_inline.h	/^inline void wlpdstm::TxLazy::RollbackCommitting(TransactionDynamic *desc) {$/;"	f	class:wlpdstm::TxLazy	typeref:typename:void
RollbackCommitting	swisstm/src/dynamic/mixed/mixed_inline_fun.h	/^inline void wlpdstm::TxMixed::RollbackCommitting(TransactionDynamic *desc) {$/;"	f	class:wlpdstm::TxMixed	typeref:typename:void
RollbackCommitting	swisstm/src/stm/transaction_mixinv.h	/^inline void wlpdstm::TxMixinv::RollbackCommitting() {$/;"	f	class:wlpdstm::TxMixinv	typeref:typename:void
RollbackRunning	swisstm/src/dynamic/eager/eager.cc	/^void wlpdstm::TxEager::RollbackRunning(TransactionDynamic *desc) {$/;"	f	class:wlpdstm::TxEager	typeref:typename:void
RollbackRunning	swisstm/src/dynamic/lazy/lazy.cc	/^void wlpdstm::TxLazy::RollbackRunning(TransactionDynamic *desc) {$/;"	f	class:wlpdstm::TxLazy	typeref:typename:void
RollbackRunning	swisstm/src/dynamic/mixed/mixed.cc	/^void wlpdstm::TxMixed::RollbackRunning(TransactionDynamic *desc) {$/;"	f	class:wlpdstm::TxMixed	typeref:typename:void
RollbackRunning	swisstm/src/stm/transaction_mixinv.h	/^inline void wlpdstm::TxMixinv::RollbackRunning() {$/;"	f	class:wlpdstm::TxMixinv	typeref:typename:void
RollbackRunningFunPtr	swisstm/src/dynamic/transaction.h	/^			typedef void (*RollbackRunningFunPtr)(TransactionDynamic *desc);$/;"	t	class:wlpdstm::TransactionDynamic	typeref:typename:void (*)(TransactionDynamic * desc)
RollbackRunningInline	swisstm/src/dynamic/lazy/lazy_impl_inline.h	/^inline void wlpdstm::TxLazy::RollbackRunningInline(TransactionDynamic *desc) {$/;"	f	class:wlpdstm::TxLazy	typeref:typename:void
RollbackRunningInline	swisstm/src/dynamic/mixed/mixed_inline_fun.h	/^inline void wlpdstm::TxMixed::RollbackRunningInline(TransactionDynamic *desc) {$/;"	f	class:wlpdstm::TxMixed	typeref:typename:void
RollbackRunningStatic	swisstm/src/dynamic/eager/eager_static.h	/^API_LINKAGE void wlpdstm::TxEager::RollbackRunningStatic(TransactionDynamic *desc) {$/;"	f	class:wlpdstm::TxEager	typeref:typename:API_LINKAGE void
RollbackRunningStatic	swisstm/src/dynamic/lazy/lazy_static.h	/^API_LINKAGE void wlpdstm::TxLazy::RollbackRunningStatic(TransactionDynamic *desc) {$/;"	f	class:wlpdstm::TxLazy	typeref:typename:API_LINKAGE void
RollbackRunningStatic	swisstm/src/dynamic/mixed/mixed_inline.h	/^API_LINKAGE void wlpdstm::TxMixed::RollbackRunningStatic(TransactionDynamic *desc) {$/;"	f	class:wlpdstm::TxMixed	typeref:typename:API_LINKAGE void
RollbackWriteLog	swisstm/src/epochstm/transaction.h	/^inline void wlpdstm::TransactionEpoch::RollbackWriteLog() {$/;"	f	class:wlpdstm::TransactionEpoch	typeref:typename:void
RollbackWriteLog	swisstm/src/p-tlrw/transaction.h	/^inline void wlpdstm::TransactionTlrw::RollbackWriteLog() {$/;"	f	class:wlpdstm::TransactionTlrw	typeref:typename:void
RollbackWriteLog	swisstm/src/rw/transaction.h	/^inline void wlpdstm::TransactionRw::RollbackWriteLog() {$/;"	f	class:wlpdstm::TransactionRw	typeref:typename:void
RollbackWriteLog	swisstm/src/tlrw/transaction.h	/^inline void wlpdstm::TransactionTlrw::RollbackWriteLog() {$/;"	f	class:wlpdstm::TransactionTlrw	typeref:typename:void
RwStats	swisstm/src/rw/stats.h	/^	class RwStats {$/;"	c	namespace:wlpdstm
SAMPLING_THRESHOLD	swisstm/src/common/sampling.h	/^#define SAMPLING_THRESHOLD /;"	d
SET_COLOR	swisstm/src/mubench/rbtree.c	/^#define SET_COLOR(/;"	d	file:
SHIFT_01_PCT	swisstm/src/common/profiling/adaptive.h	/^			static const unsigned SHIFT_01_PCT = 10;$/;"	m	class:wlpdstm::AdaptiveProfiling	typeref:typename:const unsigned
SHIFT_01_PCT	swisstm/src/common/profiling/non_tx_duration.h	/^			static const unsigned SHIFT_01_PCT = 10;$/;"	m	class:wlpdstm::NonTxDurationProfiling	typeref:typename:const unsigned
SHIFT_01_PCT	swisstm/src/common/profiling/tx_duration.h	/^			static const unsigned SHIFT_01_PCT = 10;$/;"	m	class:wlpdstm::TxDurationProfiling	typeref:typename:const unsigned
SHIFT_01_PCT	swisstm/src/dynamic/profiling/adaptive_dynamic.h	/^			static const unsigned SHIFT_01_PCT = 10;$/;"	m	class:wlpdstm::AdaptiveDynamicProfiling	typeref:typename:const unsigned
SHIFT_05_PCT	swisstm/src/common/profiling/adaptive.h	/^			static const unsigned SHIFT_05_PCT = 8;$/;"	m	class:wlpdstm::AdaptiveProfiling	typeref:typename:const unsigned
SHIFT_05_PCT	swisstm/src/common/profiling/non_tx_duration.h	/^			static const unsigned SHIFT_05_PCT = 8;$/;"	m	class:wlpdstm::NonTxDurationProfiling	typeref:typename:const unsigned
SHIFT_05_PCT	swisstm/src/common/profiling/tx_duration.h	/^			static const unsigned SHIFT_05_PCT = 8;$/;"	m	class:wlpdstm::TxDurationProfiling	typeref:typename:const unsigned
SHIFT_05_PCT	swisstm/src/dynamic/profiling/adaptive_dynamic.h	/^			static const unsigned SHIFT_05_PCT = 8;$/;"	m	class:wlpdstm::AdaptiveDynamicProfiling	typeref:typename:const unsigned
SHIFT_16	swisstm/src/stm_api/read_write.h	/^#define SHIFT_16 /;"	d
SHIFT_1_PCT	swisstm/src/common/profiling/adaptive.h	/^			static const unsigned SHIFT_1_PCT = 7;$/;"	m	class:wlpdstm::AdaptiveProfiling	typeref:typename:const unsigned
SHIFT_1_PCT	swisstm/src/common/profiling/non_tx_duration.h	/^			static const unsigned SHIFT_1_PCT = 7;$/;"	m	class:wlpdstm::NonTxDurationProfiling	typeref:typename:const unsigned
SHIFT_1_PCT	swisstm/src/common/profiling/tx_duration.h	/^			static const unsigned SHIFT_1_PCT = 7;$/;"	m	class:wlpdstm::TxDurationProfiling	typeref:typename:const unsigned
SHIFT_1_PCT	swisstm/src/dynamic/profiling/adaptive_dynamic.h	/^			static const unsigned SHIFT_1_PCT = 7;$/;"	m	class:wlpdstm::AdaptiveDynamicProfiling	typeref:typename:const unsigned
SHIFT_32	swisstm/src/stm_api/read_write.h	/^#define SHIFT_32 /;"	d
SHIFT_8	swisstm/src/stm_api/read_write.h	/^#define SHIFT_8 /;"	d
SHOULD_PROFILE_RAND_VALUE	swisstm/src/common/profiling/adaptive.h	/^			static const unsigned SHOULD_PROFILE_RAND_VALUE = 0;$/;"	m	class:wlpdstm::AdaptiveProfiling	typeref:typename:const unsigned
SHOULD_PROFILE_RAND_VALUE	swisstm/src/common/profiling/non_tx_duration.h	/^			static const unsigned SHOULD_PROFILE_RAND_VALUE = 0;$/;"	m	class:wlpdstm::NonTxDurationProfiling	typeref:typename:const unsigned
SHOULD_PROFILE_RAND_VALUE	swisstm/src/common/profiling/tx_duration.h	/^			static const unsigned SHOULD_PROFILE_RAND_VALUE = 0;$/;"	m	class:wlpdstm::TxDurationProfiling	typeref:typename:const unsigned
SHOULD_PROFILE_RAND_VALUE	swisstm/src/dynamic/profiling/adaptive_dynamic.h	/^			static const unsigned SHOULD_PROFILE_RAND_VALUE = 0;$/;"	m	class:wlpdstm::AdaptiveDynamicProfiling	typeref:typename:const unsigned
SIGNAL_EMPTY	swisstm/src/stm/transaction_mixinv.h	/^			SIGNAL_EMPTY = 0,$/;"	e	enum:wlpdstm::TxMixinv::TxSignals
SIGNAL_PRIVATIZATION_VALIDATE	swisstm/src/stm/transaction_mixinv.h	/^			SIGNAL_PRIVATIZATION_VALIDATE = 0x1$/;"	e	enum:wlpdstm::TxMixinv::TxSignals
SIM_GET_NUM_CPU	swisstm/src/mubench/tm.h	/^#  define SIM_GET_NUM_CPU(/;"	d
SOLARIS_CPP	swisstm/Makefile.in	/^SOLARIS_CPP = \/home\/dragojev\/local\/gcc\/bin\/g++$/;"	m
SPIN_LOOP_BACKOFF	swisstm/Makefile.in	/^	SPIN_LOOP_BACKOFF = no$/;"	m
SPIN_LOOP_BACKOFF_CPPFLAGS_cas	swisstm/Makefile.in	/^SPIN_LOOP_BACKOFF_CPPFLAGS_cas = -D WLPDSTM_SPIN_LOOP_BACKOFF_CAS$/;"	m
SPIN_LOOP_BACKOFF_CPPFLAGS_no	swisstm/Makefile.in	/^SPIN_LOOP_BACKOFF_CPPFLAGS_no  = -D WLPDSTM_SPIN_LOOP_BACKOFF_NO$/;"	m
SRC_DIR	swisstm/Makefile.in	/^SRC_DIR = .\/src$/;"	m
STA	swisstm/src/mubench/rbtree.c	/^#define STA(/;"	d	file:
START	swisstm/src/mubench/tm_spec.h	/^#define START /;"	d
STARTING_EPOCH	list_move_vlist.c	/^#define STARTING_EPOCH /;"	d	file:
STARTING_EPOCH	list_vlist.c	/^#define STARTING_EPOCH /;"	d	file:
STARTING_EPOCH	tree_vrbtree.c	/^#define STARTING_EPOCH /;"	d	file:
STARTING_EPOCH	tree_vtree.c	/^#define STARTING_EPOCH /;"	d	file:
START_BUF_PADDING_SIZE	swisstm/src/common/constants.h	/^#define START_BUF_PADDING_SIZE /;"	d
START_ID	swisstm/src/mubench/tm_spec.h	/^#define START_ID(/;"	d
START_RO	swisstm/src/mubench/tm_spec.h	/^#define START_RO /;"	d
START_RO_ID	swisstm/src/mubench/tm_spec.h	/^#define START_RO_ID(/;"	d
STATS_ARRAY_COLS	swisstm/src/epochstm/transaction.h	/^#define STATS_ARRAY_COLS /;"	d
STF	swisstm/src/mubench/rbtree.c	/^#define STF(/;"	d	file:
STM	swisstm/Makefile.in	/^	STM = swisstm$/;"	m
STM_API_DIR	swisstm/Makefile.in	/^STM_API_DIR = $(SRC_DIR)\/api$/;"	m
STM_SRC_DIR	swisstm/Makefile.in	/^STM_SRC_DIR = $(SRC_DIR)\/stm$/;"	m
STORE	swisstm/src/mubench/tm_spec.h	/^#define STORE(/;"	d
STR	swisstm/src/mubench/intset-list-mv.c	/^#define STR(/;"	d	file:
STR	swisstm/src/mubench/intset.c	/^#define STR(/;"	d	file:
STV	swisstm/src/mubench/rbtree.c	/^#define STV(/;"	d	file:
SUCCESSOR	swisstm/src/mubench/rbtree.c	/^#define SUCCESSOR(/;"	d	file:
SUCC_ABORTS_MAX	swisstm/src/dynamic/transaction.h	/^	static const unsigned SUCC_ABORTS_MAX = 10;$/;"	v	namespace:wlpdstm	typeref:typename:const unsigned
SUCC_ABORTS_MAX	swisstm/src/epochstm/transaction.h	/^			static const unsigned SUCC_ABORTS_MAX = 10;		$/;"	m	class:wlpdstm::TransactionEpoch	typeref:typename:const unsigned
SUCC_ABORTS_MAX	swisstm/src/p-tlrw/transaction.h	/^		static const unsigned SUCC_ABORTS_MAX = 10;		$/;"	m	class:wlpdstm::TransactionTlrw	typeref:typename:const unsigned
SUCC_ABORTS_MAX	swisstm/src/rw/transaction.h	/^		static const unsigned SUCC_ABORTS_MAX = 10;		$/;"	m	class:wlpdstm::TransactionRw	typeref:typename:const unsigned
SUCC_ABORTS_MAX	swisstm/src/stm/transaction_mixinv.h	/^		static const unsigned SUCC_ABORTS_MAX = 10;$/;"	m	class:wlpdstm::TxMixinv	typeref:typename:const unsigned
SUCC_ABORTS_MAX	swisstm/src/tlrw/transaction.h	/^		static const unsigned SUCC_ABORTS_MAX = 10;		$/;"	m	class:wlpdstm::TransactionTlrw	typeref:typename:const unsigned
SUCC_ABORTS_THRESHOLD	swisstm/src/dynamic/transaction.h	/^	static const unsigned SUCC_ABORTS_THRESHOLD = 1;$/;"	v	namespace:wlpdstm	typeref:typename:const unsigned
SUCC_ABORTS_THRESHOLD	swisstm/src/epochstm/transaction.h	/^			static const unsigned SUCC_ABORTS_THRESHOLD = 1;$/;"	m	class:wlpdstm::TransactionEpoch	typeref:typename:const unsigned
SUCC_ABORTS_THRESHOLD	swisstm/src/p-tlrw/transaction.h	/^		static const unsigned SUCC_ABORTS_THRESHOLD = 1;$/;"	m	class:wlpdstm::TransactionTlrw	typeref:typename:const unsigned
SUCC_ABORTS_THRESHOLD	swisstm/src/rw/transaction.h	/^		static const unsigned SUCC_ABORTS_THRESHOLD = 1;$/;"	m	class:wlpdstm::TransactionRw	typeref:typename:const unsigned
SUCC_ABORTS_THRESHOLD	swisstm/src/stm/transaction_mixinv.h	/^		static const unsigned SUCC_ABORTS_THRESHOLD = 1;$/;"	m	class:wlpdstm::TxMixinv	typeref:typename:const unsigned
SUCC_ABORTS_THRESHOLD	swisstm/src/tlrw/transaction.h	/^		static const unsigned SUCC_ABORTS_THRESHOLD = 1;$/;"	m	class:wlpdstm::TransactionTlrw	typeref:typename:const unsigned
SWITCH_TO_SECOND_CM_PHASE	swisstm/src/dynamic/stats.h	/^			SWITCH_TO_SECOND_CM_PHASE,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
SWITCH_TO_SECOND_CM_PHASE	swisstm/src/stm/stats.h	/^			SWITCH_TO_SECOND_CM_PHASE,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
Sampling	swisstm/src/common/sampling.h	/^			Sampling() : sample(false), counter(0) {$/;"	f	class:wlpdstm::Sampling
Sampling	swisstm/src/common/sampling.h	/^	class Sampling {$/;"	c	namespace:wlpdstm
Set	swisstm/src/stm/large_lock_set.h	/^			bool Set(uint32_t el) {$/;"	f	class:wlpdstm::LargeLockSet	typeref:typename:bool
SetFunPtr	swisstm/src/dynamic/transaction.h	/^			typedef void (*SetFunPtr)(TransactionDynamic *desc);$/;"	t	class:wlpdstm::TransactionDynamic	typeref:typename:void (*)(TransactionDynamic * desc)
SetSignal	swisstm/src/stm/transaction_mixinv.h	/^inline void wlpdstm::TxMixinv::SetSignal(unsigned tid, TxSignals signal) {$/;"	f	class:wlpdstm::TxMixinv	typeref:typename:void
SetStackHigh	swisstm/src/dynamic/transaction.h	/^inline void wlpdstm::TransactionDynamic::SetStackHigh() {$/;"	f	class:wlpdstm::TransactionDynamic	typeref:typename:void
SetStackHigh	swisstm/src/dynamic/transaction.h	/^inline void wlpdstm::TransactionDynamic::SetStackHigh(uintptr_t addr) {$/;"	f	class:wlpdstm::TransactionDynamic	typeref:typename:void
SetStackHigh	swisstm/src/stm/transaction_mixinv.h	/^inline void wlpdstm::TxMixinv::SetStackHigh() {$/;"	f	class:wlpdstm::TxMixinv	typeref:typename:void
SetStackHigh	swisstm/src/stm/transaction_mixinv.h	/^inline void wlpdstm::TxMixinv::SetStackHigh(uintptr_t addr) {$/;"	f	class:wlpdstm::TxMixinv	typeref:typename:void
SetThreadId	swisstm/src/p-tlrw/transaction.h	/^				void SetThreadId(uint8_t thread_id_) {$/;"	f	class:wlpdstm::TransactionTlrw::ReadSet	typeref:typename:void
SetThreadId	swisstm/src/p-tlrw/transaction.h	/^				void SetThreadId(uint8_t thread_id_) {$/;"	f	class:wlpdstm::TransactionTlrw::WriteSet	typeref:typename:void
ShoudRestartConflict	swisstm/src/epochstm/cm.h	/^		bool ShoudRestartConflict(Greedy *other) {$/;"	f	class:wlpdstm::Greedy	typeref:typename:bool
ShoudRestartConflict	swisstm/src/p-tlrw/cm.h	/^		bool ShoudRestartConflict(Greedy *other) {$/;"	f	class:wlpdstm::Greedy	typeref:typename:bool
ShoudRestartConflict	swisstm/src/rw/cm.h	/^		bool ShoudRestartConflict(Greedy *other) {$/;"	f	class:wlpdstm::Greedy	typeref:typename:bool
ShoudRestartConflict	swisstm/src/tlrw/cm.h	/^		bool ShoudRestartConflict(Greedy *other) {$/;"	f	class:wlpdstm::Greedy	typeref:typename:bool
ShouldAbortWrite	swisstm/src/dynamic/transaction.h	/^inline bool wlpdstm::TransactionDynamic::ShouldAbortWrite(WriteLock *write_lock) {$/;"	f	class:wlpdstm::TransactionDynamic	typeref:typename:bool
ShouldAbortWrite	swisstm/src/stm/transaction_mixinv.h	/^inline bool wlpdstm::TxMixinv::ShouldAbortWrite(WriteLock *write_lock) {$/;"	f	class:wlpdstm::TxMixinv	typeref:typename:bool
ShouldExtend	swisstm/src/dynamic/transaction.h	/^inline bool wlpdstm::TransactionDynamic::ShouldExtend(VersionLock version) {$/;"	f	class:wlpdstm::TransactionDynamic	typeref:typename:bool
ShouldExtend	swisstm/src/stm/transaction_mixinv.h	/^inline bool wlpdstm::TxMixinv::ShouldExtend(VersionLock version) {$/;"	f	class:wlpdstm::TxMixinv	typeref:typename:bool
ShouldProfile	swisstm/src/common/profiling/adaptive.h	/^inline bool wlpdstm::AdaptiveProfiling<STATS, STATS_TYPE>::ShouldProfile() const {$/;"	f	class:wlpdstm::AdaptiveProfiling	typeref:typename:bool
ShouldProfile	swisstm/src/common/profiling/non_tx_duration.h	/^inline bool wlpdstm::NonTxDurationProfiling<STATS, STATS_TYPE>::ShouldProfile() const {$/;"	f	class:wlpdstm::NonTxDurationProfiling	typeref:typename:bool
ShouldProfile	swisstm/src/common/profiling/tx_duration.h	/^inline bool wlpdstm::TxDurationProfiling<STATS, STATS_TYPE>::ShouldProfile() const {$/;"	f	class:wlpdstm::TxDurationProfiling	typeref:typename:bool
ShouldProfile	swisstm/src/dynamic/profiling/adaptive_dynamic.h	/^inline bool wlpdstm::AdaptiveDynamicProfiling<STATS, STATS_TYPE>::ShouldProfile() const {$/;"	f	class:wlpdstm::AdaptiveDynamicProfiling	typeref:typename:bool
ShouldRestart	swisstm/src/epochstm/cm.h	/^			bool ShouldRestart() const {$/;"	f	class:wlpdstm::Timid	typeref:typename:bool
ShouldRestart	swisstm/src/epochstm/cm.h	/^		bool ShouldRestart() const {$/;"	f	class:wlpdstm::Greedy	typeref:typename:bool
ShouldRestart	swisstm/src/p-tlrw/cm.h	/^			bool ShouldRestart() const {$/;"	f	class:wlpdstm::Timid	typeref:typename:bool
ShouldRestart	swisstm/src/p-tlrw/cm.h	/^		bool ShouldRestart() const {$/;"	f	class:wlpdstm::Greedy	typeref:typename:bool
ShouldRestart	swisstm/src/rw/cm.h	/^			bool ShouldRestart() const {$/;"	f	class:wlpdstm::Timid	typeref:typename:bool
ShouldRestart	swisstm/src/rw/cm.h	/^		bool ShouldRestart() const {$/;"	f	class:wlpdstm::Greedy	typeref:typename:bool
ShouldRestart	swisstm/src/tlrw/cm.h	/^			bool ShouldRestart() const {$/;"	f	class:wlpdstm::Timid	typeref:typename:bool
ShouldRestart	swisstm/src/tlrw/cm.h	/^		bool ShouldRestart() const {$/;"	f	class:wlpdstm::Greedy	typeref:typename:bool
ShouldRestartReadWrite	swisstm/src/epochstm/cm.h	/^			bool ShouldRestartReadWrite(Timid *other) {$/;"	f	class:wlpdstm::Timid	typeref:typename:bool
ShouldRestartReadWrite	swisstm/src/epochstm/cm.h	/^		bool ShouldRestartReadWrite(Greedy *other) {$/;"	f	class:wlpdstm::Greedy	typeref:typename:bool
ShouldRestartReadWrite	swisstm/src/p-tlrw/cm.h	/^			bool ShouldRestartReadWrite(Timid *other) {$/;"	f	class:wlpdstm::Timid	typeref:typename:bool
ShouldRestartReadWrite	swisstm/src/p-tlrw/cm.h	/^		bool ShouldRestartReadWrite(Greedy *other) {$/;"	f	class:wlpdstm::Greedy	typeref:typename:bool
ShouldRestartReadWrite	swisstm/src/rw/cm.h	/^			bool ShouldRestartReadWrite(Timid *other) {$/;"	f	class:wlpdstm::Timid	typeref:typename:bool
ShouldRestartReadWrite	swisstm/src/rw/cm.h	/^		bool ShouldRestartReadWrite(Greedy *other) {$/;"	f	class:wlpdstm::Greedy	typeref:typename:bool
ShouldRestartReadWrite	swisstm/src/tlrw/cm.h	/^			bool ShouldRestartReadWrite(Timid *other) {$/;"	f	class:wlpdstm::Timid	typeref:typename:bool
ShouldRestartReadWrite	swisstm/src/tlrw/cm.h	/^		bool ShouldRestartReadWrite(Greedy *other) {$/;"	f	class:wlpdstm::Greedy	typeref:typename:bool
ShouldRestartWriteRead	swisstm/src/epochstm/cm.h	/^			bool ShouldRestartWriteRead(Timid *other) {$/;"	f	class:wlpdstm::Timid	typeref:typename:bool
ShouldRestartWriteRead	swisstm/src/epochstm/cm.h	/^		bool ShouldRestartWriteRead(Greedy *other) {$/;"	f	class:wlpdstm::Greedy	typeref:typename:bool
ShouldRestartWriteRead	swisstm/src/p-tlrw/cm.h	/^			bool ShouldRestartWriteRead(Timid *other) {$/;"	f	class:wlpdstm::Timid	typeref:typename:bool
ShouldRestartWriteRead	swisstm/src/p-tlrw/cm.h	/^		bool ShouldRestartWriteRead(Greedy *other) {$/;"	f	class:wlpdstm::Greedy	typeref:typename:bool
ShouldRestartWriteRead	swisstm/src/rw/cm.h	/^			bool ShouldRestartWriteRead(Timid *other) {$/;"	f	class:wlpdstm::Timid	typeref:typename:bool
ShouldRestartWriteRead	swisstm/src/rw/cm.h	/^		bool ShouldRestartWriteRead(Greedy *other) {$/;"	f	class:wlpdstm::Greedy	typeref:typename:bool
ShouldRestartWriteRead	swisstm/src/tlrw/cm.h	/^			bool ShouldRestartWriteRead(Timid *other) {$/;"	f	class:wlpdstm::Timid	typeref:typename:bool
ShouldRestartWriteRead	swisstm/src/tlrw/cm.h	/^		bool ShouldRestartWriteRead(Greedy *other) {$/;"	f	class:wlpdstm::Greedy	typeref:typename:bool
ShouldRestartWriteWrite	swisstm/src/epochstm/cm.h	/^			bool ShouldRestartWriteWrite(Timid *other) {$/;"	f	class:wlpdstm::Timid	typeref:typename:bool
ShouldRestartWriteWrite	swisstm/src/epochstm/cm.h	/^		bool ShouldRestartWriteWrite(Greedy *other) {$/;"	f	class:wlpdstm::Greedy	typeref:typename:bool
ShouldRestartWriteWrite	swisstm/src/p-tlrw/cm.h	/^			bool ShouldRestartWriteWrite(Timid *other) {$/;"	f	class:wlpdstm::Timid	typeref:typename:bool
ShouldRestartWriteWrite	swisstm/src/p-tlrw/cm.h	/^		bool ShouldRestartWriteWrite(Greedy *other) {$/;"	f	class:wlpdstm::Greedy	typeref:typename:bool
ShouldRestartWriteWrite	swisstm/src/rw/cm.h	/^			bool ShouldRestartWriteWrite(Timid *other) {$/;"	f	class:wlpdstm::Timid	typeref:typename:bool
ShouldRestartWriteWrite	swisstm/src/rw/cm.h	/^		bool ShouldRestartWriteWrite(Greedy *other) {$/;"	f	class:wlpdstm::Greedy	typeref:typename:bool
ShouldRestartWriteWrite	swisstm/src/tlrw/cm.h	/^			bool ShouldRestartWriteWrite(Timid *other) {$/;"	f	class:wlpdstm::Timid	typeref:typename:bool
ShouldRestartWriteWrite	swisstm/src/tlrw/cm.h	/^		bool ShouldRestartWriteWrite(Greedy *other) {$/;"	f	class:wlpdstm::Greedy	typeref:typename:bool
ShouldSample	swisstm/src/common/sampling.h	/^			bool ShouldSample(unsigned threshold) {$/;"	f	class:wlpdstm::TxSampling	typeref:typename:bool
SimpleProfiling	swisstm/src/common/profiling/simple.h	/^	class SimpleProfiling {$/;"	c	namespace:wlpdstm
Sort	swisstm/src/epochstm/transaction.h	/^inline void wlpdstm::TransactionEpoch::OrecTableStatsArray<ROWS>::Sort() {$/;"	f	class:wlpdstm::TransactionEpoch::OrecTableStatsArray	typeref:typename:void
SpinLockState	swisstm/src/common/atomic.h	/^			enum SpinLockState {$/;"	g	class:wlpdstm::PaddedSpinTryLock
StackArea	swisstm/src/tanger/tanger_stack_area.h	/^	class StackArea : public CacheAlignedAlloc {$/;"	c	namespace:wlpdstm
Start	swisstm/src/common/perfcnt/perf_cnt_papi.h	/^inline void wlpdstm::PerfCntPapi::Start() {$/;"	f	class:wlpdstm::PerfCntPapi	typeref:typename:void
Start	swisstm/src/common/perfcnt/perf_cnt_solaris.h	/^inline void wlpdstm::PerfCntSolaris::Start() {$/;"	f	class:wlpdstm::PerfCntSolaris	typeref:typename:void
StartCleanupThread	swisstm/src/p-tlrw/transaction.h	/^inline void wlpdstm::TransactionTlrw::StartCleanupThread() {$/;"	f	class:wlpdstm::TransactionTlrw	typeref:typename:void
StartProfilingTx	swisstm/src/common/profiling/adaptive.h	/^inline void wlpdstm::AdaptiveProfiling<STATS, STATS_TYPE>::StartProfilingTx() {$/;"	f	class:wlpdstm::AdaptiveProfiling	typeref:typename:void
StartProfilingTx	swisstm/src/common/profiling/non_tx_duration.h	/^inline void wlpdstm::NonTxDurationProfiling<STATS, STATS_TYPE>::StartProfilingTx() {$/;"	f	class:wlpdstm::NonTxDurationProfiling	typeref:typename:void
StartProfilingTx	swisstm/src/common/profiling/tx_duration.h	/^inline void wlpdstm::TxDurationProfiling<STATS, STATS_TYPE>::StartProfilingTx() {$/;"	f	class:wlpdstm::TxDurationProfiling	typeref:typename:void
StartProfilingTx	swisstm/src/dynamic/profiling/adaptive_dynamic.h	/^inline void wlpdstm::AdaptiveDynamicProfiling<STATS, STATS_TYPE>::StartProfilingTx() {$/;"	f	class:wlpdstm::AdaptiveDynamicProfiling	typeref:typename:void
StartSynchronization	swisstm/src/dynamic/transaction.h	/^inline bool wlpdstm::TransactionDynamic::StartSynchronization() {$/;"	f	class:wlpdstm::TransactionDynamic	typeref:typename:bool
StartSynchronization	swisstm/src/stm/transaction_mixinv.h	/^inline bool wlpdstm::TxMixinv::StartSynchronization() {$/;"	f	class:wlpdstm::TxMixinv	typeref:typename:bool
StartThreadProfiling	swisstm/src/dynamic/transaction.h	/^inline void wlpdstm::TransactionDynamic::StartThreadProfiling() {$/;"	f	class:wlpdstm::TransactionDynamic	typeref:typename:void
StartThreadProfiling	swisstm/src/stm/transaction_mixinv.h	/^inline void wlpdstm::TxMixinv::StartThreadProfiling() {$/;"	f	class:wlpdstm::TxMixinv	typeref:typename:void
Statistics	swisstm/src/common/stats_base.h	/^		typedef StatsBase<STATS_TYPES, ALLOCATOR, COUNT> Statistics;$/;"	t	struct:wlpdstm::ThreadStatsBase	typeref:typename:StatsBase<STATS_TYPES,ALLOCATOR,COUNT>
Statistics	swisstm/src/dynamic/stats.h	/^	typedef StatsBase<TxMixinvStats, CacheAlignedAlloc, TxMixinvStats::COUNT> Statistics;$/;"	t	namespace:wlpdstm	typeref:typename:StatsBase<TxMixinvStats,CacheAlignedAlloc,TxMixinvStats::COUNT>
Statistics	swisstm/src/epochstm/stats.h	/^	typedef StatsBase<StatisticsType, CacheAlignedAlloc, StatisticsType::COUNT> Statistics;$/;"	t	namespace:wlpdstm	typeref:typename:StatsBase<StatisticsType,CacheAlignedAlloc,StatisticsType::COUNT>
Statistics	swisstm/src/p-tlrw/stats.h	/^	typedef StatsBase<StatisticsType, CacheAlignedAlloc, StatisticsType::COUNT> Statistics;$/;"	t	namespace:wlpdstm	typeref:typename:StatsBase<StatisticsType,CacheAlignedAlloc,StatisticsType::COUNT>
Statistics	swisstm/src/rw/stats.h	/^	typedef StatsBase<StatisticsType, CacheAlignedAlloc, StatisticsType::COUNT> Statistics;$/;"	t	namespace:wlpdstm	typeref:typename:StatsBase<StatisticsType,CacheAlignedAlloc,StatisticsType::COUNT>
Statistics	swisstm/src/stm/stats.h	/^	typedef StatsBase<TxMixinvStats, CacheAlignedAlloc, TxMixinvStats::COUNT> Statistics;$/;"	t	namespace:wlpdstm	typeref:typename:StatsBase<TxMixinvStats,CacheAlignedAlloc,TxMixinvStats::COUNT>
Statistics	swisstm/src/tlrw/stats.h	/^	typedef StatsBase<StatisticsType, CacheAlignedAlloc, StatisticsType::COUNT> Statistics;$/;"	t	namespace:wlpdstm	typeref:typename:StatsBase<StatisticsType,CacheAlignedAlloc,StatisticsType::COUNT>
StatisticsType	swisstm/src/dynamic/stats.h	/^	typedef TxMixinvStats StatisticsType;$/;"	t	namespace:wlpdstm	typeref:typename:TxMixinvStats
StatisticsType	swisstm/src/epochstm/stats.h	/^	typedef EpochSTMStats StatisticsType;$/;"	t	namespace:wlpdstm	typeref:typename:EpochSTMStats
StatisticsType	swisstm/src/p-tlrw/stats.h	/^	typedef TlrwStats StatisticsType;$/;"	t	namespace:wlpdstm	typeref:typename:TlrwStats
StatisticsType	swisstm/src/rw/stats.h	/^	typedef RwStats StatisticsType;$/;"	t	namespace:wlpdstm	typeref:typename:RwStats
StatisticsType	swisstm/src/stm/stats.h	/^	typedef TxMixinvStats StatisticsType;$/;"	t	namespace:wlpdstm	typeref:typename:TxMixinvStats
StatisticsType	swisstm/src/tlrw/stats.h	/^	typedef TlrwStats StatisticsType;$/;"	t	namespace:wlpdstm	typeref:typename:TlrwStats
Stats	NOTE.md	/^## Stats$/;"	s	chapter:Note for versioning/
StatsBase	swisstm/src/common/stats_base.h	/^		StatsBase() {$/;"	f	class:wlpdstm::StatsBase
StatsBase	swisstm/src/common/stats_base.h	/^	class StatsBase : public ALLOCATOR {$/;"	c	namespace:wlpdstm
StopCleanupThread	swisstm/src/p-tlrw/transaction.h	/^inline void wlpdstm::TransactionTlrw::StopCleanupThread() {$/;"	f	class:wlpdstm::TransactionTlrw	typeref:typename:void
Synchronize	swisstm/src/dynamic/transaction.h	/^inline bool wlpdstm::TransactionDynamic::Synchronize() {$/;"	f	class:wlpdstm::TransactionDynamic	typeref:typename:bool
Synchronize	swisstm/src/stm/transaction_mixinv.h	/^inline bool wlpdstm::TxMixinv::Synchronize() {$/;"	f	class:wlpdstm::TxMixinv	typeref:typename:bool
TAKEN	swisstm/src/common/lock.h	/^		const static Word TAKEN = 1;$/;"	m	class:wlpdstm::cas_lock	typeref:typename:const Word
TARGET_DIR	swisstm/Makefile.in	/^TARGET_DIR = .\/target$/;"	m
TAUSWORTHE	zipf/rand.h	/^#define TAUSWORTHE(/;"	d
TEST_RLU_MAX_WS	list_move_rlu.c	/^#define TEST_RLU_MAX_WS /;"	d	file:
TEST_RLU_MAX_WS	list_rlu.c	/^#define TEST_RLU_MAX_WS /;"	d	file:
TEST_RLU_MAX_WS	tree_citrus_rlu.c	/^#define TEST_RLU_MAX_WS /;"	d	file:
TEST_RLU_MAX_WS	tree_rlu.c	/^#define TEST_RLU_MAX_WS /;"	d	file:
THREAD_ATTR_INIT	swisstm/src/mubench/thread.h	/^#define THREAD_ATTR_INIT(/;"	d
THREAD_ATTR_T	swisstm/src/mubench/thread.h	/^#define THREAD_ATTR_T /;"	d
THREAD_BARRIER	swisstm/src/mubench/thread.h	/^#  define THREAD_BARRIER(/;"	d
THREAD_BARRIER_ALLOC	swisstm/src/mubench/thread.h	/^#  define THREAD_BARRIER_ALLOC(/;"	d
THREAD_BARRIER_FREE	swisstm/src/mubench/thread.h	/^#  define THREAD_BARRIER_FREE(/;"	d
THREAD_BARRIER_INIT	swisstm/src/mubench/thread.h	/^#  define THREAD_BARRIER_INIT(/;"	d
THREAD_BARRIER_T	swisstm/src/mubench/thread.h	/^#  define THREAD_BARRIER_T /;"	d
THREAD_COND_BROADCAST	swisstm/src/mubench/thread.h	/^#define THREAD_COND_BROADCAST(/;"	d
THREAD_COND_INIT	swisstm/src/mubench/thread.h	/^#define THREAD_COND_INIT(/;"	d
THREAD_COND_SIGNAL	swisstm/src/mubench/thread.h	/^#define THREAD_COND_SIGNAL(/;"	d
THREAD_COND_T	swisstm/src/mubench/thread.h	/^#define THREAD_COND_T /;"	d
THREAD_COND_WAIT	swisstm/src/mubench/thread.h	/^#define THREAD_COND_WAIT(/;"	d
THREAD_COUNT	swisstm/src/dynamic/stats.h	/^			THREAD_COUNT = 0,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
THREAD_CREATE	swisstm/src/mubench/thread.h	/^#define THREAD_CREATE(/;"	d
THREAD_H	swisstm/src/mubench/thread.h	/^#define THREAD_H /;"	d
THREAD_JOIN	swisstm/src/mubench/thread.h	/^#define THREAD_JOIN(/;"	d
THREAD_LOCAL_GET	swisstm/src/mubench/thread.h	/^#define THREAD_LOCAL_GET(/;"	d
THREAD_LOCAL_INIT	swisstm/src/mubench/thread.h	/^#define THREAD_LOCAL_INIT(/;"	d
THREAD_LOCAL_SET	swisstm/src/mubench/thread.h	/^#define THREAD_LOCAL_SET(/;"	d
THREAD_LOCAL_T	swisstm/src/mubench/thread.h	/^#define THREAD_LOCAL_T /;"	d
THREAD_MUTEX_INIT	swisstm/src/mubench/thread.h	/^#define THREAD_MUTEX_INIT(/;"	d
THREAD_MUTEX_LOCK	swisstm/src/mubench/thread.h	/^#define THREAD_MUTEX_LOCK(/;"	d
THREAD_MUTEX_T	swisstm/src/mubench/thread.h	/^#define THREAD_MUTEX_T /;"	d
THREAD_MUTEX_UNLOCK	swisstm/src/mubench/thread.h	/^#define THREAD_MUTEX_UNLOCK(/;"	d
THREAD_NOT_READING	swisstm/src/p-tlrw/transaction.h	/^#define THREAD_NOT_READING /;"	d
THREAD_NOT_READING	swisstm/src/tlrw/transaction.h	/^#define THREAD_NOT_READING /;"	d
THREAD_READING	swisstm/src/tlrw/transaction.h	/^#define THREAD_READING /;"	d
THREAD_T	swisstm/src/mubench/thread.h	/^#define THREAD_T /;"	d
TLRW_SRC_DIR	swisstm/Makefile.in	/^TLRW_SRC_DIR = $(SRC_DIR)\/tlrw$/;"	m
TLS	swisstm/Makefile.in	/^        TLS = gcc$/;"	m
TLS	swisstm/Makefile.in	/^        TLS = pthread$/;"	m
TLS_CPPFLAGS_gcc	swisstm/Makefile.in	/^TLS_CPPFLAGS_gcc = -D USE_GCC_TLS$/;"	m
TLS_CPPFLAGS_pthread	swisstm/Makefile.in	/^TLS_CPPFLAGS_pthread = -D USE_PTHREAD_TLS$/;"	m
TLS_STACK_AREA	swisstm/src/tanger/tanger_stack_area.h	/^#define TLS_STACK_AREA /;"	d
TMRBTREE_ALLOC	swisstm/src/mubench/rbtree.h	/^#define TMRBTREE_ALLOC(/;"	d
TMRBTREE_CONTAINS	swisstm/src/mubench/rbtree.h	/^#define TMRBTREE_CONTAINS(/;"	d
TMRBTREE_DELETE	swisstm/src/mubench/rbtree.h	/^#define TMRBTREE_DELETE(/;"	d
TMRBTREE_FREE	swisstm/src/mubench/rbtree.h	/^#define TMRBTREE_FREE(/;"	d
TMRBTREE_GET	swisstm/src/mubench/rbtree.h	/^#define TMRBTREE_GET(/;"	d
TMRBTREE_INSERT	swisstm/src/mubench/rbtree.h	/^#define TMRBTREE_INSERT(/;"	d
TMRBTREE_UPDATE	swisstm/src/mubench/rbtree.h	/^#define TMRBTREE_UPDATE(/;"	d
TM_ARG	swisstm/src/mubench/tm.h	/^#  define TM_ARG /;"	d
TM_ARG	swisstm/src/mubench/tm_spec.h	/^#define TM_ARG /;"	d
TM_ARGDECL	swisstm/src/mubench/tm.h	/^#  define TM_ARGDECL /;"	d
TM_ARGDECL	swisstm/src/mubench/tm_spec.h	/^#define TM_ARGDECL /;"	d
TM_ARGDECL_ALONE	swisstm/src/mubench/tm.h	/^#  define TM_ARGDECL_ALONE /;"	d
TM_ARGDECL_ALONE	swisstm/src/mubench/tm_spec.h	/^#define TM_ARGDECL_ALONE /;"	d
TM_ARG_ALONE	swisstm/src/mubench/tm.h	/^#  define TM_ARG_ALONE /;"	d
TM_ARG_ALONE	swisstm/src/mubench/tm_spec.h	/^#define TM_ARG_ALONE /;"	d
TM_ARG_LAST	swisstm/src/mubench/tm_spec.h	/^#define TM_ARG_LAST /;"	d
TM_BEGIN	swisstm/src/mubench/tm.h	/^#  define TM_BEGIN(/;"	d
TM_BEGIN_RO	swisstm/src/mubench/tm.h	/^#  define TM_BEGIN_RO(/;"	d
TM_EAGER	swisstm/src/common/tm_impl_const.h	/^	TM_EAGER,$/;"	e	enum:TmImplementation
TM_END	swisstm/src/mubench/tm.h	/^#  define TM_END(/;"	d
TM_FREE	swisstm/src/mubench/tm.h	/^#    define TM_FREE(/;"	d
TM_FREE	swisstm/src/mubench/tm.h	/^#  define TM_FREE(/;"	d
TM_FREE	swisstm/src/mubench/tm_spec.h	/^#define TM_FREE(/;"	d
TM_H	swisstm/src/mubench/tm.h	/^#define TM_H /;"	d
TM_IMPLEMENTATION_COUNT	swisstm/src/common/tm_impl_const.h	/^	TM_IMPLEMENTATION_COUNT$/;"	e	enum:TmImplementation
TM_IMPLEMENTATION_VARIANT_COUNT	swisstm/src/dynamic/transaction.h	/^	static const unsigned TM_IMPLEMENTATION_VARIANT_COUNT = TM_IMPLEMENTATION_COUNT * 2;$/;"	v	namespace:wlpdstm	typeref:typename:const unsigned
TM_IMPLEMENTATION_VARIANT_COUNT	swisstm/src/dynamic/transaction.h	/^	static const unsigned TM_IMPLEMENTATION_VARIANT_COUNT = TM_IMPLEMENTATION_COUNT;$/;"	v	namespace:wlpdstm	typeref:typename:const unsigned
TM_LAZY	swisstm/src/common/tm_impl_const.h	/^	TM_LAZY,$/;"	e	enum:TmImplementation
TM_LOCAL_WRITE	swisstm/src/mubench/tm.h	/^#  define TM_LOCAL_WRITE(/;"	d
TM_LOCAL_WRITE_F	swisstm/src/mubench/tm.h	/^#  define TM_LOCAL_WRITE_F(/;"	d
TM_LOCAL_WRITE_P	swisstm/src/mubench/tm.h	/^#  define TM_LOCAL_WRITE_P(/;"	d
TM_MALLOC	swisstm/src/mubench/tm.h	/^#    define TM_MALLOC(/;"	d
TM_MALLOC	swisstm/src/mubench/tm.h	/^#  define TM_MALLOC(/;"	d
TM_MALLOC	swisstm/src/mubench/tm_spec.h	/^#define TM_MALLOC(/;"	d
TM_MIXED	swisstm/src/common/tm_impl_const.h	/^	TM_MIXED = 0,$/;"	e	enum:TmImplementation
TM_PRINT0	swisstm/src/mubench/tm.h	/^#  define TM_PRINT0 /;"	d
TM_PRINT1	swisstm/src/mubench/tm.h	/^#  define TM_PRINT1 /;"	d
TM_PRINT2	swisstm/src/mubench/tm.h	/^#  define TM_PRINT2 /;"	d
TM_PRINT3	swisstm/src/mubench/tm.h	/^#  define TM_PRINT3 /;"	d
TM_PRINTF	swisstm/src/mubench/tm.h	/^#  define TM_PRINTF /;"	d
TM_RESTART	swisstm/src/mubench/tm.h	/^#  define TM_RESTART(/;"	d
TM_SHARED_READ	swisstm/src/mubench/tm.h	/^#  define TM_SHARED_READ(/;"	d
TM_SHARED_READ	swisstm/src/mubench/tm_spec.h	/^#define TM_SHARED_READ(/;"	d
TM_SHARED_READ_F	swisstm/src/mubench/tm.h	/^#  define TM_SHARED_READ_F(/;"	d
TM_SHARED_READ_P	swisstm/src/mubench/tm.h	/^#  define TM_SHARED_READ_P(/;"	d
TM_SHARED_READ_P	swisstm/src/mubench/tm_spec.h	/^#define TM_SHARED_READ_P(/;"	d
TM_SHARED_WRITE	swisstm/src/mubench/tm.h	/^#  define TM_SHARED_WRITE(/;"	d
TM_SHARED_WRITE	swisstm/src/mubench/tm_spec.h	/^#define TM_SHARED_WRITE(/;"	d
TM_SHARED_WRITE_F	swisstm/src/mubench/tm.h	/^#  define TM_SHARED_WRITE_F(/;"	d
TM_SHARED_WRITE_P	swisstm/src/mubench/tm.h	/^#  define TM_SHARED_WRITE_P(/;"	d
TM_SHARED_WRITE_P	swisstm/src/mubench/tm_spec.h	/^#define TM_SHARED_WRITE_P(/;"	d
TM_SHUTDOWN	swisstm/src/mubench/tm.h	/^#    define TM_SHUTDOWN(/;"	d
TM_SHUTDOWN	swisstm/src/mubench/tm.h	/^#  define TM_SHUTDOWN(/;"	d
TM_SHUTDOWN	swisstm/src/mubench/tm_spec.h	/^#define TM_SHUTDOWN(/;"	d
TM_STARTUP	swisstm/src/mubench/tm.h	/^#    define TM_STARTUP(/;"	d
TM_STARTUP	swisstm/src/mubench/tm.h	/^#  define TM_STARTUP(/;"	d
TM_STARTUP	swisstm/src/mubench/tm_spec.h	/^#define TM_STARTUP(/;"	d
TM_THREAD_ENTER	swisstm/src/mubench/tm.h	/^#    define TM_THREAD_ENTER(/;"	d
TM_THREAD_ENTER	swisstm/src/mubench/tm.h	/^#  define TM_THREAD_ENTER(/;"	d
TM_THREAD_ENTER	swisstm/src/mubench/tm_spec.h	/^#define TM_THREAD_ENTER(/;"	d
TM_THREAD_EXIT	swisstm/src/mubench/tm.h	/^#    define TM_THREAD_EXIT(/;"	d
TM_THREAD_EXIT	swisstm/src/mubench/tm.h	/^#  define TM_THREAD_EXIT(/;"	d
TM_THREAD_EXIT	swisstm/src/mubench/tm_spec.h	/^#define TM_THREAD_EXIT(/;"	d
TMcolorOf	swisstm/src/mubench/rbtree.c	/^TMcolorOf (TM_ARGDECL  node_t* n)$/;"	f	typeref:typename:int	file:
TMdelete_node	swisstm/src/mubench/rbtree.c	/^TMdelete_node (TM_ARGDECL  rbtree_t* s, node_t* p)$/;"	f	typeref:typename:node_t *	file:
TMfixAfterDeletion	swisstm/src/mubench/rbtree.c	/^TMfixAfterDeletion  (TM_ARGDECL  rbtree_t* s, node_t*  x)$/;"	f	typeref:typename:void	file:
TMfixAfterInsertion	swisstm/src/mubench/rbtree.c	/^TMfixAfterInsertion (TM_ARGDECL  rbtree_t* s, node_t* x)$/;"	f	typeref:typename:void	file:
TMgetNode	swisstm/src/mubench/rbtree.c	/^TMgetNode (TM_ARGDECL_ALONE)$/;"	f	typeref:typename:node_t *	file:
TMinsert	swisstm/src/mubench/rbtree.c	/^TMinsert (TM_ARGDECL  rbtree_t* s, int k, int v, node_t* n)$/;"	f	typeref:typename:node_t *	file:
TMleftOf	swisstm/src/mubench/rbtree.c	/^TMleftOf (TM_ARGDECL  node_t* n)$/;"	f	typeref:typename:node_t *	file:
TMlookup	swisstm/src/mubench/rbtree.c	/^TMlookup (TM_ARGDECL  rbtree_t* s, int k)$/;"	f	typeref:typename:node_t *	file:
TMparentOf	swisstm/src/mubench/rbtree.c	/^TMparentOf (TM_ARGDECL  node_t* n)$/;"	f	typeref:typename:node_t *	file:
TMrbtree_alloc	swisstm/src/mubench/rbtree.c	/^TMrbtree_alloc (TM_ARGDECL_ALONE)$/;"	f	typeref:typename:rbtree_t *
TMrbtree_contains	swisstm/src/mubench/rbtree.c	/^TMrbtree_contains (TM_ARGDECL  rbtree_t* r, int key)$/;"	f	typeref:typename:int
TMrbtree_delete	swisstm/src/mubench/rbtree.c	/^TMrbtree_delete (TM_ARGDECL  rbtree_t* r, int key)$/;"	f	typeref:typename:int
TMrbtree_free	swisstm/src/mubench/rbtree.c	/^TMrbtree_free (TM_ARGDECL  rbtree_t* r)$/;"	f	typeref:typename:void
TMrbtree_get	swisstm/src/mubench/rbtree.c	/^TMrbtree_get (TM_ARGDECL  rbtree_t* r, int key) {$/;"	f	typeref:typename:int
TMrbtree_insert	swisstm/src/mubench/rbtree.c	/^TMrbtree_insert (TM_ARGDECL  rbtree_t* r, int key, int val)$/;"	f	typeref:typename:int
TMrbtree_update	swisstm/src/mubench/rbtree.c	/^TMrbtree_update (TM_ARGDECL  rbtree_t* r, int key, int val)$/;"	f	typeref:typename:int
TMreleaseNode	swisstm/src/mubench/rbtree.c	/^TMreleaseNode  (TM_ARGDECL  node_t* n)$/;"	f	typeref:typename:void	file:
TMrightOf	swisstm/src/mubench/rbtree.c	/^TMrightOf (TM_ARGDECL  node_t* n)$/;"	f	typeref:typename:node_t *	file:
TMrotateLeft	swisstm/src/mubench/rbtree.c	/^TMrotateLeft (TM_ARGDECL  rbtree_t* s, node_t* x)$/;"	f	typeref:typename:void	file:
TMrotateRight	swisstm/src/mubench/rbtree.c	/^TMrotateRight (TM_ARGDECL  rbtree_t* s, node_t* x)$/;"	f	typeref:typename:void	file:
TMsetColor	swisstm/src/mubench/rbtree.c	/^TMsetColor (TM_ARGDECL  node_t* n, int c)$/;"	f	typeref:typename:void	file:
TMsuccessor	swisstm/src/mubench/rbtree.c	/^TMsuccessor  (TM_ARGDECL  node_t* t)$/;"	f	typeref:typename:node_t *	file:
TOTAL	swisstm/src/common/stats_base.h	/^			TOTAL = 0,$/;"	e	enum:wlpdstm::ThreadStatsBase::__anon5b2d285c0103
TRACE_1	rlu.c	/^#define TRACE_1(/;"	d	file:
TRACE_2	rlu.c	/^#define TRACE_2(/;"	d	file:
TRACE_3	rlu.c	/^#define TRACE_3(/;"	d	file:
TRACE_3_GLOBAL	rlu.c	/^#define TRACE_3_GLOBAL(/;"	d	file:
TRANSACTION_COUNT_SIZE_BITS	swisstm/src/epochstm/transaction.h	/^#define TRANSACTION_COUNT_SIZE_BITS /;"	d
TRUE	swisstm/src/mubench/types.h	/^    TRUE  = 1$/;"	e	enum:__anoncebd37810103
TRY_CAS_PTR_OBJ_COPY	rlu.c	/^#define TRY_CAS_PTR_OBJ_COPY(/;"	d	file:
TX_ABORTED	swisstm/src/dynamic/transaction.h	/^		TX_ABORTED,$/;"	e	enum:wlpdstm::TxStatus
TX_ABORTED	swisstm/src/stm/transaction_mixinv.h	/^			TX_ABORTED,$/;"	e	enum:wlpdstm::TxMixinv::TxStatus
TX_CACHE_MISSES_COMMITTED	swisstm/src/dynamic/stats.h	/^            TX_CACHE_MISSES_COMMITTED,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
TX_CACHE_MISSES_RESTARTED	swisstm/src/dynamic/stats.h	/^            TX_CACHE_MISSES_RESTARTED,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
TX_COLOR_OF	swisstm/src/mubench/rbtree.c	/^#define TX_COLOR_OF(/;"	d	file:
TX_COMMITTED	swisstm/src/dynamic/transaction.h	/^		TX_COMMITTED$/;"	e	enum:wlpdstm::TxStatus
TX_COMMITTED	swisstm/src/stm/transaction_mixinv.h	/^			TX_COMMITTED$/;"	e	enum:wlpdstm::TxMixinv::TxStatus
TX_CYCLES_COMMITTED	swisstm/src/dynamic/stats.h	/^            TX_CYCLES_COMMITTED,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
TX_CYCLES_RESTARTED	swisstm/src/dynamic/stats.h	/^            TX_CYCLES_RESTARTED,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
TX_DURATION_ABORT	swisstm/src/dynamic/stats.h	/^			TX_DURATION_ABORT,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
TX_DURATION_ABORT	swisstm/src/epochstm/stats.h	/^			TX_DURATION_ABORT,$/;"	e	enum:wlpdstm::EpochSTMStats::Type
TX_DURATION_ABORT	swisstm/src/p-tlrw/stats.h	/^			TX_DURATION_ABORT,$/;"	e	enum:wlpdstm::TlrwStats::Type
TX_DURATION_ABORT	swisstm/src/rw/stats.h	/^			TX_DURATION_ABORT,$/;"	e	enum:wlpdstm::RwStats::Type
TX_DURATION_ABORT	swisstm/src/stm/stats.h	/^			TX_DURATION_ABORT,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
TX_DURATION_ABORT	swisstm/src/tlrw/stats.h	/^			TX_DURATION_ABORT,$/;"	e	enum:wlpdstm::TlrwStats::Type
TX_DURATION_ABORTED	swisstm/src/dynamic/stats.h	/^			TX_DURATION_ABORTED,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
TX_DURATION_ABORT_TX	swisstm/src/epochstm/stats.h	/^			TX_DURATION_ABORT_TX,$/;"	e	enum:wlpdstm::EpochSTMStats::Type
TX_DURATION_ABORT_TX	swisstm/src/p-tlrw/stats.h	/^			TX_DURATION_ABORT_TX,$/;"	e	enum:wlpdstm::TlrwStats::Type
TX_DURATION_ABORT_TX	swisstm/src/rw/stats.h	/^			TX_DURATION_ABORT_TX,$/;"	e	enum:wlpdstm::RwStats::Type
TX_DURATION_ABORT_TX	swisstm/src/tlrw/stats.h	/^			TX_DURATION_ABORT_TX,$/;"	e	enum:wlpdstm::TlrwStats::Type
TX_DURATION_ALL	swisstm/src/dynamic/stats.h	/^			TX_DURATION_ALL,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
TX_DURATION_ALL	swisstm/src/epochstm/stats.h	/^			TX_DURATION_ALL,$/;"	e	enum:wlpdstm::EpochSTMStats::Type
TX_DURATION_ALL	swisstm/src/p-tlrw/stats.h	/^			TX_DURATION_ALL,$/;"	e	enum:wlpdstm::TlrwStats::Type
TX_DURATION_ALL	swisstm/src/rw/stats.h	/^			TX_DURATION_ALL,$/;"	e	enum:wlpdstm::RwStats::Type
TX_DURATION_ALL	swisstm/src/stm/stats.h	/^			TX_DURATION_ALL,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
TX_DURATION_ALL	swisstm/src/tlrw/stats.h	/^			TX_DURATION_ALL,$/;"	e	enum:wlpdstm::TlrwStats::Type
TX_DURATION_ALLOC	swisstm/src/dynamic/stats.h	/^			TX_DURATION_ALLOC,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
TX_DURATION_ALLOC	swisstm/src/epochstm/stats.h	/^			TX_DURATION_ALLOC,$/;"	e	enum:wlpdstm::EpochSTMStats::Type
TX_DURATION_ALLOC	swisstm/src/p-tlrw/stats.h	/^			TX_DURATION_ALLOC,$/;"	e	enum:wlpdstm::TlrwStats::Type
TX_DURATION_ALLOC	swisstm/src/rw/stats.h	/^			TX_DURATION_ALLOC,$/;"	e	enum:wlpdstm::RwStats::Type
TX_DURATION_ALLOC	swisstm/src/stm/stats.h	/^			TX_DURATION_ALLOC,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
TX_DURATION_ALLOC	swisstm/src/tlrw/stats.h	/^			TX_DURATION_ALLOC,$/;"	e	enum:wlpdstm::TlrwStats::Type
TX_DURATION_COMMIT	swisstm/src/dynamic/stats.h	/^			TX_DURATION_COMMIT,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
TX_DURATION_COMMIT	swisstm/src/epochstm/stats.h	/^			TX_DURATION_COMMIT,$/;"	e	enum:wlpdstm::EpochSTMStats::Type
TX_DURATION_COMMIT	swisstm/src/p-tlrw/stats.h	/^			TX_DURATION_COMMIT,$/;"	e	enum:wlpdstm::TlrwStats::Type
TX_DURATION_COMMIT	swisstm/src/rw/stats.h	/^			TX_DURATION_COMMIT,$/;"	e	enum:wlpdstm::RwStats::Type
TX_DURATION_COMMIT	swisstm/src/stm/stats.h	/^			TX_DURATION_COMMIT,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
TX_DURATION_COMMIT	swisstm/src/tlrw/stats.h	/^			TX_DURATION_COMMIT,$/;"	e	enum:wlpdstm::TlrwStats::Type
TX_DURATION_COMMITTED	swisstm/src/dynamic/stats.h	/^			TX_DURATION_COMMITTED,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
TX_DURATION_COMMIT_TX	swisstm/src/epochstm/stats.h	/^			TX_DURATION_COMMIT_TX,$/;"	e	enum:wlpdstm::EpochSTMStats::Type
TX_DURATION_COMMIT_TX	swisstm/src/p-tlrw/stats.h	/^			TX_DURATION_COMMIT_TX,$/;"	e	enum:wlpdstm::TlrwStats::Type
TX_DURATION_COMMIT_TX	swisstm/src/rw/stats.h	/^			TX_DURATION_COMMIT_TX,$/;"	e	enum:wlpdstm::RwStats::Type
TX_DURATION_COMMIT_TX	swisstm/src/tlrw/stats.h	/^			TX_DURATION_COMMIT_TX,$/;"	e	enum:wlpdstm::TlrwStats::Type
TX_DURATION_FREE	swisstm/src/dynamic/stats.h	/^			TX_DURATION_FREE,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
TX_DURATION_FREE	swisstm/src/epochstm/stats.h	/^			TX_DURATION_FREE,$/;"	e	enum:wlpdstm::EpochSTMStats::Type
TX_DURATION_FREE	swisstm/src/p-tlrw/stats.h	/^			TX_DURATION_FREE,$/;"	e	enum:wlpdstm::TlrwStats::Type
TX_DURATION_FREE	swisstm/src/rw/stats.h	/^			TX_DURATION_FREE,$/;"	e	enum:wlpdstm::RwStats::Type
TX_DURATION_FREE	swisstm/src/stm/stats.h	/^			TX_DURATION_FREE,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
TX_DURATION_FREE	swisstm/src/tlrw/stats.h	/^			TX_DURATION_FREE,$/;"	e	enum:wlpdstm::TlrwStats::Type
TX_DURATION_READ	swisstm/src/dynamic/stats.h	/^			TX_DURATION_READ,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
TX_DURATION_READ	swisstm/src/epochstm/stats.h	/^			TX_DURATION_READ,$/;"	e	enum:wlpdstm::EpochSTMStats::Type
TX_DURATION_READ	swisstm/src/p-tlrw/stats.h	/^			TX_DURATION_READ,$/;"	e	enum:wlpdstm::TlrwStats::Type
TX_DURATION_READ	swisstm/src/rw/stats.h	/^			TX_DURATION_READ,$/;"	e	enum:wlpdstm::RwStats::Type
TX_DURATION_READ	swisstm/src/stm/stats.h	/^			TX_DURATION_READ,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
TX_DURATION_READ	swisstm/src/tlrw/stats.h	/^			TX_DURATION_READ,$/;"	e	enum:wlpdstm::TlrwStats::Type
TX_DURATION_RESTART	swisstm/src/dynamic/stats.h	/^			TX_DURATION_RESTART,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
TX_DURATION_RESTART	swisstm/src/stm/stats.h	/^			TX_DURATION_RESTART,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
TX_DURATION_RESTARTED	swisstm/src/dynamic/stats.h	/^			TX_DURATION_RESTARTED,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
TX_DURATION_START	swisstm/src/dynamic/stats.h	/^			TX_DURATION_START,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
TX_DURATION_START	swisstm/src/epochstm/stats.h	/^			TX_DURATION_START,$/;"	e	enum:wlpdstm::EpochSTMStats::Type
TX_DURATION_START	swisstm/src/p-tlrw/stats.h	/^			TX_DURATION_START,$/;"	e	enum:wlpdstm::TlrwStats::Type
TX_DURATION_START	swisstm/src/rw/stats.h	/^			TX_DURATION_START,$/;"	e	enum:wlpdstm::RwStats::Type
TX_DURATION_START	swisstm/src/stm/stats.h	/^			TX_DURATION_START,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
TX_DURATION_START	swisstm/src/tlrw/stats.h	/^			TX_DURATION_START,$/;"	e	enum:wlpdstm::TlrwStats::Type
TX_DURATION_WRITE	swisstm/src/dynamic/stats.h	/^			TX_DURATION_WRITE,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
TX_DURATION_WRITE	swisstm/src/epochstm/stats.h	/^			TX_DURATION_WRITE,$/;"	e	enum:wlpdstm::EpochSTMStats::Type
TX_DURATION_WRITE	swisstm/src/p-tlrw/stats.h	/^			TX_DURATION_WRITE,$/;"	e	enum:wlpdstm::TlrwStats::Type
TX_DURATION_WRITE	swisstm/src/rw/stats.h	/^			TX_DURATION_WRITE,$/;"	e	enum:wlpdstm::RwStats::Type
TX_DURATION_WRITE	swisstm/src/stm/stats.h	/^			TX_DURATION_WRITE,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
TX_DURATION_WRITE	swisstm/src/tlrw/stats.h	/^			TX_DURATION_WRITE,$/;"	e	enum:wlpdstm::TlrwStats::Type
TX_EXECUTING	swisstm/src/dynamic/transaction.h	/^		TX_EXECUTING,$/;"	e	enum:wlpdstm::TxStatus
TX_EXECUTING	swisstm/src/stm/transaction_mixinv.h	/^			TX_EXECUTING,$/;"	e	enum:wlpdstm::TxMixinv::TxStatus
TX_FIX_AFTER_DELETION	swisstm/src/mubench/rbtree.c	/^#define TX_FIX_AFTER_DELETION(/;"	d	file:
TX_FIX_AFTER_INSERTION	swisstm/src/mubench/rbtree.c	/^#define TX_FIX_AFTER_INSERTION(/;"	d	file:
TX_IDLE	swisstm/src/dynamic/transaction.h	/^		TX_IDLE,$/;"	e	enum:wlpdstm::TxStatus
TX_IDLE	swisstm/src/stm/transaction_mixinv.h	/^			TX_IDLE,$/;"	e	enum:wlpdstm::TxMixinv::TxStatus
TX_IMPLEMENTATION	swisstm/src/dynamic/transaction.h	/^#define TX_IMPLEMENTATION /;"	d
TX_INSERT	swisstm/src/mubench/rbtree.c	/^#define TX_INSERT(/;"	d	file:
TX_LDA	swisstm/src/mubench/rbtree.c	/^#define TX_LDA(/;"	d	file:
TX_LDC	swisstm/src/mubench/rbtree.c	/^#define TX_LDC(/;"	d	file:
TX_LDF	swisstm/src/mubench/rbtree.c	/^#define TX_LDF(/;"	d	file:
TX_LDF_P	swisstm/src/mubench/rbtree.c	/^#define TX_LDF_P(/;"	d	file:
TX_LDNODE	swisstm/src/mubench/rbtree.c	/^#define TX_LDNODE(/;"	d	file:
TX_LDV	swisstm/src/mubench/rbtree.c	/^#define TX_LDV(/;"	d	file:
TX_LEFT_OF	swisstm/src/mubench/rbtree.c	/^#define TX_LEFT_OF(/;"	d	file:
TX_LOOKUP	swisstm/src/mubench/rbtree.c	/^#define TX_LOOKUP(/;"	d	file:
TX_NO_LEVEL	swisstm/src/dynamic/constants.h	/^	const int TX_NO_LEVEL = (TX_TOP_LEVEL - 1);$/;"	v	namespace:wlpdstm	typeref:typename:const int
TX_NO_LEVEL	swisstm/src/stm/constants.h	/^	const int TX_NO_LEVEL = (TX_TOP_LEVEL - 1);$/;"	v	namespace:wlpdstm	typeref:typename:const int
TX_PARENT_OF	swisstm/src/mubench/rbtree.c	/^#define TX_PARENT_OF(/;"	d	file:
TX_PROFILED_ABORTS	swisstm/src/dynamic/stats.h	/^			TX_PROFILED_ABORTS,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
TX_PROFILED_ABORTS	swisstm/src/epochstm/stats.h	/^			TX_PROFILED_ABORTS,$/;"	e	enum:wlpdstm::EpochSTMStats::Type
TX_PROFILED_ABORTS	swisstm/src/p-tlrw/stats.h	/^			TX_PROFILED_ABORTS,$/;"	e	enum:wlpdstm::TlrwStats::Type
TX_PROFILED_ABORTS	swisstm/src/rw/stats.h	/^			TX_PROFILED_ABORTS,$/;"	e	enum:wlpdstm::RwStats::Type
TX_PROFILED_ABORTS	swisstm/src/stm/stats.h	/^			TX_PROFILED_ABORTS,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
TX_PROFILED_ABORTS	swisstm/src/tlrw/stats.h	/^			TX_PROFILED_ABORTS,$/;"	e	enum:wlpdstm::TlrwStats::Type
TX_PROFILED_ALL	swisstm/src/dynamic/stats.h	/^			TX_PROFILED_ALL,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
TX_PROFILED_ALL	swisstm/src/epochstm/stats.h	/^			TX_PROFILED_ALL,$/;"	e	enum:wlpdstm::EpochSTMStats::Type
TX_PROFILED_ALL	swisstm/src/p-tlrw/stats.h	/^			TX_PROFILED_ALL,$/;"	e	enum:wlpdstm::TlrwStats::Type
TX_PROFILED_ALL	swisstm/src/rw/stats.h	/^			TX_PROFILED_ALL,$/;"	e	enum:wlpdstm::RwStats::Type
TX_PROFILED_ALL	swisstm/src/stm/stats.h	/^			TX_PROFILED_ALL,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
TX_PROFILED_ALL	swisstm/src/tlrw/stats.h	/^			TX_PROFILED_ALL,$/;"	e	enum:wlpdstm::TlrwStats::Type
TX_PROFILED_ALLOCS	swisstm/src/dynamic/stats.h	/^			TX_PROFILED_ALLOCS,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
TX_PROFILED_ALLOCS	swisstm/src/epochstm/stats.h	/^			TX_PROFILED_ALLOCS,$/;"	e	enum:wlpdstm::EpochSTMStats::Type
TX_PROFILED_ALLOCS	swisstm/src/p-tlrw/stats.h	/^			TX_PROFILED_ALLOCS,$/;"	e	enum:wlpdstm::TlrwStats::Type
TX_PROFILED_ALLOCS	swisstm/src/rw/stats.h	/^			TX_PROFILED_ALLOCS,$/;"	e	enum:wlpdstm::RwStats::Type
TX_PROFILED_ALLOCS	swisstm/src/stm/stats.h	/^			TX_PROFILED_ALLOCS,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
TX_PROFILED_ALLOCS	swisstm/src/tlrw/stats.h	/^			TX_PROFILED_ALLOCS,$/;"	e	enum:wlpdstm::TlrwStats::Type
TX_PROFILED_COMMITS	swisstm/src/dynamic/stats.h	/^			TX_PROFILED_COMMITS,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
TX_PROFILED_COMMITS	swisstm/src/epochstm/stats.h	/^			TX_PROFILED_COMMITS,$/;"	e	enum:wlpdstm::EpochSTMStats::Type
TX_PROFILED_COMMITS	swisstm/src/p-tlrw/stats.h	/^			TX_PROFILED_COMMITS,$/;"	e	enum:wlpdstm::TlrwStats::Type
TX_PROFILED_COMMITS	swisstm/src/rw/stats.h	/^			TX_PROFILED_COMMITS,$/;"	e	enum:wlpdstm::RwStats::Type
TX_PROFILED_COMMITS	swisstm/src/stm/stats.h	/^			TX_PROFILED_COMMITS,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
TX_PROFILED_COMMITS	swisstm/src/tlrw/stats.h	/^			TX_PROFILED_COMMITS,$/;"	e	enum:wlpdstm::TlrwStats::Type
TX_PROFILED_FREES	swisstm/src/dynamic/stats.h	/^			TX_PROFILED_FREES,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
TX_PROFILED_FREES	swisstm/src/epochstm/stats.h	/^			TX_PROFILED_FREES,$/;"	e	enum:wlpdstm::EpochSTMStats::Type
TX_PROFILED_FREES	swisstm/src/p-tlrw/stats.h	/^			TX_PROFILED_FREES,$/;"	e	enum:wlpdstm::TlrwStats::Type
TX_PROFILED_FREES	swisstm/src/rw/stats.h	/^			TX_PROFILED_FREES,$/;"	e	enum:wlpdstm::RwStats::Type
TX_PROFILED_FREES	swisstm/src/stm/stats.h	/^			TX_PROFILED_FREES,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
TX_PROFILED_FREES	swisstm/src/tlrw/stats.h	/^			TX_PROFILED_FREES,$/;"	e	enum:wlpdstm::TlrwStats::Type
TX_PROFILED_READS	swisstm/src/dynamic/stats.h	/^			TX_PROFILED_READS,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
TX_PROFILED_READS	swisstm/src/epochstm/stats.h	/^			TX_PROFILED_READS,$/;"	e	enum:wlpdstm::EpochSTMStats::Type
TX_PROFILED_READS	swisstm/src/p-tlrw/stats.h	/^			TX_PROFILED_READS,$/;"	e	enum:wlpdstm::TlrwStats::Type
TX_PROFILED_READS	swisstm/src/rw/stats.h	/^			TX_PROFILED_READS,$/;"	e	enum:wlpdstm::RwStats::Type
TX_PROFILED_READS	swisstm/src/stm/stats.h	/^			TX_PROFILED_READS,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
TX_PROFILED_READS	swisstm/src/tlrw/stats.h	/^			TX_PROFILED_READS,$/;"	e	enum:wlpdstm::TlrwStats::Type
TX_PROFILED_RESTARTS	swisstm/src/dynamic/stats.h	/^			TX_PROFILED_RESTARTS,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
TX_PROFILED_RESTARTS	swisstm/src/stm/stats.h	/^			TX_PROFILED_RESTARTS,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
TX_PROFILED_WRITES	swisstm/src/dynamic/stats.h	/^			TX_PROFILED_WRITES,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
TX_PROFILED_WRITES	swisstm/src/epochstm/stats.h	/^			TX_PROFILED_WRITES,$/;"	e	enum:wlpdstm::EpochSTMStats::Type
TX_PROFILED_WRITES	swisstm/src/p-tlrw/stats.h	/^			TX_PROFILED_WRITES,$/;"	e	enum:wlpdstm::TlrwStats::Type
TX_PROFILED_WRITES	swisstm/src/rw/stats.h	/^			TX_PROFILED_WRITES,$/;"	e	enum:wlpdstm::RwStats::Type
TX_PROFILED_WRITES	swisstm/src/stm/stats.h	/^			TX_PROFILED_WRITES,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
TX_PROFILED_WRITES	swisstm/src/tlrw/stats.h	/^			TX_PROFILED_WRITES,$/;"	e	enum:wlpdstm::TlrwStats::Type
TX_PROFILING	swisstm/Makefile.in	/^	TX_PROFILING = no$/;"	m
TX_PROFILING_CPPFLAGS_adaptive	swisstm/Makefile.in	/^TX_PROFILING_CPPFLAGS_adaptive = -D WLPDSTM_TX_PROFILING_ADAPTIVE$/;"	m
TX_PROFILING_CPPFLAGS_adaptive_dynamic	swisstm/Makefile.in	/^TX_PROFILING_CPPFLAGS_adaptive_dynamic = -D WLPDSTM_TX_PROFILING_ADAPTIVE_DYNAMIC$/;"	m
TX_PROFILING_CPPFLAGS_no	swisstm/Makefile.in	/^TX_PROFILING_CPPFLAGS_no     = -D WLPDSTM_TX_PROFILING_NO$/;"	m
TX_PROFILING_CPPFLAGS_non_tx_duration	swisstm/Makefile.in	/^TX_PROFILING_CPPFLAGS_non_tx_duration = -D WLPDSTM_NON_TX_PROFILING_TX_DURATION$/;"	m
TX_PROFILING_CPPFLAGS_non_tx_duration_pcnt_sampling	swisstm/Makefile.in	/^TX_PROFILING_CPPFLAGS_non_tx_duration_pcnt_sampling = -D WLPDSTM_NON_TX_PROFILING_TX_DURATION_PC/;"	m
TX_PROFILING_CPPFLAGS_non_tx_duration_pcnt_simple	swisstm/Makefile.in	/^TX_PROFILING_CPPFLAGS_non_tx_duration_pcnt_simple = -D WLPDSTM_NON_TX_PROFILING_TX_DURATION_PCNT/;"	m
TX_PROFILING_CPPFLAGS_non_tx_duration_simple	swisstm/Makefile.in	/^TX_PROFILING_CPPFLAGS_non_tx_duration_simple = -D WLPDSTM_NON_TX_PROFILING_TX_DURATION_SIMPLE$/;"	m
TX_PROFILING_CPPFLAGS_simple	swisstm/Makefile.in	/^TX_PROFILING_CPPFLAGS_simple = -D WLPDSTM_TX_PROFILING_SIMPLE$/;"	m
TX_PROFILING_CPPFLAGS_tx_duration	swisstm/Makefile.in	/^TX_PROFILING_CPPFLAGS_tx_duration = -D WLPDSTM_TX_PROFILING_TX_DURATION$/;"	m
TX_RESTARTED	swisstm/src/dynamic/transaction.h	/^		TX_RESTARTED,$/;"	e	enum:wlpdstm::TxStatus
TX_RESTARTED	swisstm/src/stm/transaction_mixinv.h	/^			TX_RESTARTED,$/;"	e	enum:wlpdstm::TxMixinv::TxStatus
TX_RIGHT_OF	swisstm/src/mubench/rbtree.c	/^#define TX_RIGHT_OF(/;"	d	file:
TX_ROTATE_LEFT	swisstm/src/mubench/rbtree.c	/^#define TX_ROTATE_LEFT(/;"	d	file:
TX_ROTATE_RIGHT	swisstm/src/mubench/rbtree.c	/^#define TX_ROTATE_RIGHT(/;"	d	file:
TX_SET_COLOR	swisstm/src/mubench/rbtree.c	/^#define TX_SET_COLOR(/;"	d	file:
TX_STA	swisstm/src/mubench/rbtree.c	/^#define TX_STA(/;"	d	file:
TX_STF	swisstm/src/mubench/rbtree.c	/^#define TX_STF(/;"	d	file:
TX_STF_P	swisstm/src/mubench/rbtree.c	/^#define TX_STF_P(/;"	d	file:
TX_STV	swisstm/src/mubench/rbtree.c	/^#define TX_STV(/;"	d	file:
TX_SUCCESSOR	swisstm/src/mubench/rbtree.c	/^#define TX_SUCCESSOR(/;"	d	file:
TX_TOP_LEVEL	swisstm/src/dynamic/constants.h	/^	const int TX_TOP_LEVEL = 0;$/;"	v	namespace:wlpdstm	typeref:typename:const int
TX_TOP_LEVEL	swisstm/src/stm/constants.h	/^	const int TX_TOP_LEVEL = 0;$/;"	v	namespace:wlpdstm	typeref:typename:const int
TX_TYPES	swisstm/src/common/stats_base.h	/^			TX_TYPES$/;"	e	enum:wlpdstm::ThreadStatsBase::__anon5b2d285c0103
TX_delete_node	swisstm/src/mubench/rbtree.c	/^#define TX_delete_node(/;"	d	file:
TYPES_H	swisstm/src/mubench/types.h	/^#define TYPES_H /;"	d
TYPE_NONE	zipf/test.c	/^	TYPE_NONE = 0,$/;"	e	enum:__anon7286301e0103	file:
TYPE_NORMAL	zipf/test.c	/^	TYPE_NORMAL,$/;"	e	enum:__anon7286301e0103	file:
TYPE_PARETO	zipf/test.c	/^	TYPE_PARETO,$/;"	e	enum:__anon7286301e0103	file:
TYPE_ZIPF	zipf/test.c	/^	TYPE_ZIPF,$/;"	e	enum:__anon7286301e0103	file:
ThreadEnd	swisstm/src/common/profiling/adaptive.h	/^inline void wlpdstm::AdaptiveProfiling<STATS, STATS_TYPE>::ThreadEnd() {$/;"	f	class:wlpdstm::AdaptiveProfiling	typeref:typename:void
ThreadEnd	swisstm/src/common/profiling/base.h	/^			void ThreadEnd() {$/;"	f	class:wlpdstm::BaseProfiling	typeref:typename:void
ThreadEnd	swisstm/src/common/profiling/non_tx_duration.h	/^inline void wlpdstm::NonTxDurationProfiling<STATS, STATS_TYPE>::ThreadEnd() {$/;"	f	class:wlpdstm::NonTxDurationProfiling	typeref:typename:void
ThreadEnd	swisstm/src/common/profiling/non_tx_duration_pcnt_simple.h	/^inline void wlpdstm::NonTxDurationPcntProfilingSimple<STATS, STATS_TYPE>::ThreadEnd() {$/;"	f	class:wlpdstm::NonTxDurationPcntProfilingSimple	typeref:typename:void
ThreadEnd	swisstm/src/common/profiling/non_tx_duration_simple.h	/^inline void wlpdstm::NonTxDurationProfilingSimple<STATS, STATS_TYPE>::ThreadEnd() {$/;"	f	class:wlpdstm::NonTxDurationProfilingSimple	typeref:typename:void
ThreadEnd	swisstm/src/common/profiling/simple.h	/^inline void wlpdstm::SimpleProfiling<STATS, STATS_TYPE>::ThreadEnd() {$/;"	f	class:wlpdstm::SimpleProfiling	typeref:typename:void
ThreadEnd	swisstm/src/common/profiling/tx_duration.h	/^inline void wlpdstm::TxDurationProfiling<STATS, STATS_TYPE>::ThreadEnd() {$/;"	f	class:wlpdstm::TxDurationProfiling	typeref:typename:void
ThreadEnd	swisstm/src/dynamic/profiling/adaptive_dynamic.h	/^inline void wlpdstm::AdaptiveDynamicProfiling<STATS, STATS_TYPE>::ThreadEnd() {$/;"	f	class:wlpdstm::AdaptiveDynamicProfiling	typeref:typename:void
ThreadInit	swisstm/src/common/profiling/adaptive.h	/^inline void wlpdstm::AdaptiveProfiling<STATS, STATS_TYPE>::ThreadInit(STATS *stats_) {$/;"	f	class:wlpdstm::AdaptiveProfiling	typeref:typename:void
ThreadInit	swisstm/src/common/profiling/base.h	/^			void ThreadInit(STATS *stats) {$/;"	f	class:wlpdstm::BaseProfiling	typeref:typename:void
ThreadInit	swisstm/src/common/profiling/non_tx_duration.h	/^inline void wlpdstm::NonTxDurationProfiling<STATS, STATS_TYPE>::ThreadInit(STATS *stats_) {$/;"	f	class:wlpdstm::NonTxDurationProfiling	typeref:typename:void
ThreadInit	swisstm/src/common/profiling/non_tx_duration_pcnt_simple.h	/^inline void wlpdstm::NonTxDurationPcntProfilingSimple<STATS, STATS_TYPE>::ThreadInit(STATS *stat/;"	f	class:wlpdstm::NonTxDurationPcntProfilingSimple	typeref:typename:void
ThreadInit	swisstm/src/common/profiling/non_tx_duration_simple.h	/^inline void wlpdstm::NonTxDurationProfilingSimple<STATS, STATS_TYPE>::ThreadInit(STATS *stats_) /;"	f	class:wlpdstm::NonTxDurationProfilingSimple	typeref:typename:void
ThreadInit	swisstm/src/common/profiling/simple.h	/^			void ThreadInit(STATS *stats_) {$/;"	f	class:wlpdstm::SimpleProfiling	typeref:typename:void
ThreadInit	swisstm/src/common/profiling/tx_duration.h	/^inline void wlpdstm::TxDurationProfiling<STATS, STATS_TYPE>::ThreadInit(STATS *stats_) {$/;"	f	class:wlpdstm::TxDurationProfiling	typeref:typename:void
ThreadInit	swisstm/src/common/sampling.h	/^			void ThreadInit(Random *r, unsigned f = DEFAULT_RANDOM_FREQ) {$/;"	f	class:wlpdstm::NoTxSampling	typeref:typename:void
ThreadInit	swisstm/src/common/sampling.h	/^			void ThreadInit(Random *r, unsigned f = DEFAULT_RANDOM_FREQ) {$/;"	f	class:wlpdstm::RandomTxSampling	typeref:typename:void
ThreadInit	swisstm/src/common/tls.h	/^			static void ThreadInit() {$/;"	f	class:wlpdstm::Tls	typeref:typename:void
ThreadInit	swisstm/src/common/tls.h	/^		static void ThreadInit(T *obj) {$/;"	f	struct:wlpdstm::ThreadInitInvoker	typeref:typename:void
ThreadInit	swisstm/src/common/tls.h	/^inline void wlpdstm::Tls<T, GLOBAL_INIT, THREAD_INIT>::ThreadInit() {$/;"	f	class:wlpdstm::Tls	typeref:typename:void
ThreadInit	swisstm/src/dynamic/lazy/hashtable.h	/^inline void wlpdstm::Hashtable<VAL, SIZE>::ThreadInit() {$/;"	f	class:wlpdstm::Hashtable	typeref:typename:void
ThreadInit	swisstm/src/dynamic/memory/memory_impl.h	/^inline void wlpdstm::MemoryManager::ThreadInit(unsigned t) {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
ThreadInit	swisstm/src/dynamic/memory/memory_impl_priv.h	/^inline void wlpdstm::MemoryManager::ThreadInit(unsigned t) {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
ThreadInit	swisstm/src/dynamic/perf_cnt.h	/^            void ThreadInit() {$/;"	f	class:wlpdstm::PerfCnt	typeref:typename:void
ThreadInit	swisstm/src/dynamic/profiling/adaptive_dynamic.h	/^inline void wlpdstm::AdaptiveDynamicProfiling<STATS, STATS_TYPE>::ThreadInit(STATS *stats_) {$/;"	f	class:wlpdstm::AdaptiveDynamicProfiling	typeref:typename:void
ThreadInit	swisstm/src/dynamic/transaction.h	/^inline void wlpdstm::TransactionDynamic::ThreadInit() {$/;"	f	class:wlpdstm::TransactionDynamic	typeref:typename:void
ThreadInit	swisstm/src/epochstm/cm.h	/^			void ThreadInit(unsigned tid) {$/;"	f	class:wlpdstm::Timid	typeref:typename:void
ThreadInit	swisstm/src/epochstm/cm.h	/^		void ThreadInit(unsigned tid) {$/;"	f	class:wlpdstm::Greedy	typeref:typename:void
ThreadInit	swisstm/src/epochstm/memory/memory_epoch.h	/^inline void wlpdstm::MemoryManager::ThreadInit(unsigned tid) {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
ThreadInit	swisstm/src/epochstm/memory/memory_leak.h	/^inline void wlpdstm::MemoryManager::ThreadInit(unsigned t) {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
ThreadInit	swisstm/src/epochstm/memory/memory_txend.h	/^inline void wlpdstm::MemoryManager::ThreadInit(unsigned t) {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
ThreadInit	swisstm/src/epochstm/transaction.h	/^inline void wlpdstm::TransactionEpoch::ThreadInit() {$/;"	f	class:wlpdstm::TransactionEpoch	typeref:typename:void
ThreadInit	swisstm/src/p-tlrw/cm.h	/^			void ThreadInit(unsigned tid) {$/;"	f	class:wlpdstm::Timid	typeref:typename:void
ThreadInit	swisstm/src/p-tlrw/cm.h	/^		void ThreadInit(unsigned tid) {$/;"	f	class:wlpdstm::Greedy	typeref:typename:void
ThreadInit	swisstm/src/p-tlrw/memory/memory_txend.h	/^inline void wlpdstm::MemoryManager::ThreadInit(unsigned t) {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
ThreadInit	swisstm/src/p-tlrw/transaction.h	/^inline void wlpdstm::TransactionTlrw::ThreadInit() {$/;"	f	class:wlpdstm::TransactionTlrw	typeref:typename:void
ThreadInit	swisstm/src/rw/cm.h	/^			void ThreadInit(unsigned tid) {$/;"	f	class:wlpdstm::Timid	typeref:typename:void
ThreadInit	swisstm/src/rw/cm.h	/^		void ThreadInit(unsigned tid) {$/;"	f	class:wlpdstm::Greedy	typeref:typename:void
ThreadInit	swisstm/src/rw/memory/memory_txend.h	/^inline void wlpdstm::MemoryManager::ThreadInit(unsigned t) {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
ThreadInit	swisstm/src/rw/transaction.h	/^inline void wlpdstm::TransactionRw::ThreadInit() {$/;"	f	class:wlpdstm::TransactionRw	typeref:typename:void
ThreadInit	swisstm/src/stm/memory/memory_impl.h	/^inline void wlpdstm::MemoryManager::ThreadInit(unsigned t) {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
ThreadInit	swisstm/src/stm/memory/memory_impl_priv.h	/^inline void wlpdstm::MemoryManager::ThreadInit(unsigned t) {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
ThreadInit	swisstm/src/stm/privatization_tree.h	/^inline void wlpdstm::PrivatizationTree::ThreadInit(unsigned tid, Word *tc) {$/;"	f	class:wlpdstm::PrivatizationTree	typeref:typename:void
ThreadInit	swisstm/src/stm/transaction_mixinv.h	/^inline void wlpdstm::TxMixinv::ThreadInit() {$/;"	f	class:wlpdstm::TxMixinv	typeref:typename:void
ThreadInit	swisstm/src/tanger/tanger_stack_area.h	/^		void ThreadInit() {$/;"	f	class:wlpdstm::StackArea	typeref:typename:void
ThreadInit	swisstm/src/tlrw/cm.h	/^			void ThreadInit(unsigned tid) {$/;"	f	class:wlpdstm::Timid	typeref:typename:void
ThreadInit	swisstm/src/tlrw/cm.h	/^		void ThreadInit(unsigned tid) {$/;"	f	class:wlpdstm::Greedy	typeref:typename:void
ThreadInit	swisstm/src/tlrw/memory/memory_txend.h	/^inline void wlpdstm::MemoryManager::ThreadInit(unsigned t) {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
ThreadInit	swisstm/src/tlrw/transaction.h	/^inline void wlpdstm::TransactionTlrw::ThreadInit() {$/;"	f	class:wlpdstm::TransactionTlrw	typeref:typename:void
ThreadInitFunctions	swisstm/src/dynamic/transaction.h	/^inline void wlpdstm::TransactionDynamic::ThreadInitFunctions() {$/;"	f	class:wlpdstm::TransactionDynamic	typeref:typename:void
ThreadInitInvoker	swisstm/src/common/tls.h	/^	struct ThreadInitInvoker {$/;"	s	namespace:wlpdstm
ThreadInitInvoker	swisstm/src/common/tls.h	/^	struct ThreadInitInvoker<T, false> {$/;"	s	namespace:wlpdstm
ThreadShutdown	swisstm/src/common/profiling/adaptive.h	/^inline void wlpdstm::AdaptiveProfiling<STATS, STATS_TYPE>::ThreadShutdown() {$/;"	f	class:wlpdstm::AdaptiveProfiling	typeref:typename:void
ThreadShutdown	swisstm/src/common/profiling/base.h	/^			void ThreadShutdown() {$/;"	f	class:wlpdstm::BaseProfiling	typeref:typename:void
ThreadShutdown	swisstm/src/common/profiling/non_tx_duration.h	/^inline void wlpdstm::NonTxDurationProfiling<STATS, STATS_TYPE>::ThreadShutdown() {$/;"	f	class:wlpdstm::NonTxDurationProfiling	typeref:typename:void
ThreadShutdown	swisstm/src/common/profiling/non_tx_duration_pcnt_simple.h	/^inline void wlpdstm::NonTxDurationPcntProfilingSimple<STATS, STATS_TYPE>::ThreadShutdown() {$/;"	f	class:wlpdstm::NonTxDurationPcntProfilingSimple	typeref:typename:void
ThreadShutdown	swisstm/src/common/profiling/non_tx_duration_simple.h	/^inline void wlpdstm::NonTxDurationProfilingSimple<STATS, STATS_TYPE>::ThreadShutdown() {$/;"	f	class:wlpdstm::NonTxDurationProfilingSimple	typeref:typename:void
ThreadShutdown	swisstm/src/common/profiling/simple.h	/^			void ThreadShutdown() {$/;"	f	class:wlpdstm::SimpleProfiling	typeref:typename:void
ThreadShutdown	swisstm/src/common/profiling/tx_duration.h	/^inline void wlpdstm::TxDurationProfiling<STATS, STATS_TYPE>::ThreadShutdown() {$/;"	f	class:wlpdstm::TxDurationProfiling	typeref:typename:void
ThreadShutdown	swisstm/src/dynamic/profiling/adaptive_dynamic.h	/^inline void wlpdstm::AdaptiveDynamicProfiling<STATS, STATS_TYPE>::ThreadShutdown() {$/;"	f	class:wlpdstm::AdaptiveDynamicProfiling	typeref:typename:void
ThreadShutdown	swisstm/src/dynamic/transaction.h	/^inline void wlpdstm::TransactionDynamic::ThreadShutdown() {$/;"	f	class:wlpdstm::TransactionDynamic	typeref:typename:void
ThreadShutdown	swisstm/src/epochstm/transaction.h	/^inline void wlpdstm::TransactionEpoch::ThreadShutdown() {$/;"	f	class:wlpdstm::TransactionEpoch	typeref:typename:void
ThreadShutdown	swisstm/src/p-tlrw/transaction.h	/^inline void wlpdstm::TransactionTlrw::ThreadShutdown() {$/;"	f	class:wlpdstm::TransactionTlrw	typeref:typename:void
ThreadShutdown	swisstm/src/rw/transaction.h	/^inline void wlpdstm::TransactionRw::ThreadShutdown() {$/;"	f	class:wlpdstm::TransactionRw	typeref:typename:void
ThreadShutdown	swisstm/src/stm/transaction_mixinv.h	/^inline void wlpdstm::TxMixinv::ThreadShutdown() {$/;"	f	class:wlpdstm::TxMixinv	typeref:typename:void
ThreadShutdown	swisstm/src/stm_api/transaction.h	/^		static void ThreadShutdown() {$/;"	f	class:wlpdstm::CurrentTransaction	typeref:typename:void
ThreadShutdown	swisstm/src/tlrw/transaction.h	/^inline void wlpdstm::TransactionTlrw::ThreadShutdown() {$/;"	f	class:wlpdstm::TransactionTlrw	typeref:typename:void
ThreadStackArea	swisstm/src/tanger/tanger_stack_area.h	/^	class ThreadStackArea : public Tls<StackArea, false, true> {$/;"	c	namespace:wlpdstm
ThreadStart	swisstm/src/common/profiling/adaptive.h	/^inline void wlpdstm::AdaptiveProfiling<STATS, STATS_TYPE>::ThreadStart() {$/;"	f	class:wlpdstm::AdaptiveProfiling	typeref:typename:void
ThreadStart	swisstm/src/common/profiling/base.h	/^			void ThreadStart() {$/;"	f	class:wlpdstm::BaseProfiling	typeref:typename:void
ThreadStart	swisstm/src/common/profiling/non_tx_duration.h	/^inline void wlpdstm::NonTxDurationProfiling<STATS, STATS_TYPE>::ThreadStart() {$/;"	f	class:wlpdstm::NonTxDurationProfiling	typeref:typename:void
ThreadStart	swisstm/src/common/profiling/non_tx_duration_pcnt_simple.h	/^inline void wlpdstm::NonTxDurationPcntProfilingSimple<STATS, STATS_TYPE>::ThreadStart() {$/;"	f	class:wlpdstm::NonTxDurationPcntProfilingSimple	typeref:typename:void
ThreadStart	swisstm/src/common/profiling/non_tx_duration_simple.h	/^inline void wlpdstm::NonTxDurationProfilingSimple<STATS, STATS_TYPE>::ThreadStart() {$/;"	f	class:wlpdstm::NonTxDurationProfilingSimple	typeref:typename:void
ThreadStart	swisstm/src/common/profiling/simple.h	/^inline void wlpdstm::SimpleProfiling<STATS, STATS_TYPE>::ThreadStart() {$/;"	f	class:wlpdstm::SimpleProfiling	typeref:typename:void
ThreadStart	swisstm/src/common/profiling/tx_duration.h	/^inline void wlpdstm::TxDurationProfiling<STATS, STATS_TYPE>::ThreadStart() {$/;"	f	class:wlpdstm::TxDurationProfiling	typeref:typename:void
ThreadStart	swisstm/src/dynamic/profiling/adaptive_dynamic.h	/^inline void wlpdstm::AdaptiveDynamicProfiling<STATS, STATS_TYPE>::ThreadStart() {$/;"	f	class:wlpdstm::AdaptiveDynamicProfiling	typeref:typename:void
ThreadStatistics	swisstm/src/common/stats_base.h	/^		typedef ThreadStatsBase<STATS_TYPES, ALLOCATOR, COUNT> ThreadStatistics;$/;"	t	class:wlpdstm::ThreadStatsCollectionBase	typeref:typename:ThreadStatsBase<STATS_TYPES,ALLOCATOR,COUNT>
ThreadStatistics	swisstm/src/dynamic/stats.h	/^	typedef ThreadStatsBase<TxMixinvStats, CacheAlignedAlloc, TxMixinvStats::COUNT> ThreadStatistic/;"	t	namespace:wlpdstm	typeref:typename:ThreadStatsBase<TxMixinvStats,CacheAlignedAlloc,TxMixinvStats::COUNT>
ThreadStatistics	swisstm/src/epochstm/stats.h	/^	typedef ThreadStatsBase<StatisticsType, CacheAlignedAlloc, StatisticsType::COUNT> ThreadStatist/;"	t	namespace:wlpdstm	typeref:typename:ThreadStatsBase<StatisticsType,CacheAlignedAlloc,StatisticsType::COUNT>
ThreadStatistics	swisstm/src/p-tlrw/stats.h	/^	typedef ThreadStatsBase<StatisticsType, CacheAlignedAlloc, StatisticsType::COUNT> ThreadStatist/;"	t	namespace:wlpdstm	typeref:typename:ThreadStatsBase<StatisticsType,CacheAlignedAlloc,StatisticsType::COUNT>
ThreadStatistics	swisstm/src/rw/stats.h	/^	typedef ThreadStatsBase<StatisticsType, CacheAlignedAlloc, StatisticsType::COUNT> ThreadStatist/;"	t	namespace:wlpdstm	typeref:typename:ThreadStatsBase<StatisticsType,CacheAlignedAlloc,StatisticsType::COUNT>
ThreadStatistics	swisstm/src/stm/stats.h	/^	typedef ThreadStatsBase<TxMixinvStats, CacheAlignedAlloc, TxMixinvStats::COUNT> ThreadStatistic/;"	t	namespace:wlpdstm	typeref:typename:ThreadStatsBase<TxMixinvStats,CacheAlignedAlloc,TxMixinvStats::COUNT>
ThreadStatistics	swisstm/src/tlrw/stats.h	/^	typedef ThreadStatsBase<StatisticsType, CacheAlignedAlloc, StatisticsType::COUNT> ThreadStatist/;"	t	namespace:wlpdstm	typeref:typename:ThreadStatsBase<StatisticsType,CacheAlignedAlloc,StatisticsType::COUNT>
ThreadStatisticsCollection	swisstm/src/dynamic/stats.h	/^	typedef ThreadStatsCollectionBase<TxMixinvStats, CacheAlignedAlloc, TxMixinvStats::COUNT> Threa/;"	t	namespace:wlpdstm	typeref:typename:ThreadStatsCollectionBase<TxMixinvStats,CacheAlignedAlloc,TxMixinvStats::COUNT>
ThreadStatisticsCollection	swisstm/src/epochstm/stats.h	/^	typedef ThreadStatsCollectionBase<StatisticsType, CacheAlignedAlloc, StatisticsType::COUNT> Thr/;"	t	namespace:wlpdstm	typeref:typename:ThreadStatsCollectionBase<StatisticsType,CacheAlignedAlloc,StatisticsType::COUNT>
ThreadStatisticsCollection	swisstm/src/p-tlrw/stats.h	/^	typedef ThreadStatsCollectionBase<StatisticsType, CacheAlignedAlloc, StatisticsType::COUNT> Thr/;"	t	namespace:wlpdstm	typeref:typename:ThreadStatsCollectionBase<StatisticsType,CacheAlignedAlloc,StatisticsType::COUNT>
ThreadStatisticsCollection	swisstm/src/rw/stats.h	/^	typedef ThreadStatsCollectionBase<StatisticsType, CacheAlignedAlloc, StatisticsType::COUNT> Thr/;"	t	namespace:wlpdstm	typeref:typename:ThreadStatsCollectionBase<StatisticsType,CacheAlignedAlloc,StatisticsType::COUNT>
ThreadStatisticsCollection	swisstm/src/stm/stats.h	/^	typedef ThreadStatsCollectionBase<TxMixinvStats, CacheAlignedAlloc, TxMixinvStats::COUNT> Threa/;"	t	namespace:wlpdstm	typeref:typename:ThreadStatsCollectionBase<TxMixinvStats,CacheAlignedAlloc,TxMixinvStats::COUNT>
ThreadStatisticsCollection	swisstm/src/tlrw/stats.h	/^	typedef ThreadStatsCollectionBase<StatisticsType, CacheAlignedAlloc, StatisticsType::COUNT> Thr/;"	t	namespace:wlpdstm	typeref:typename:ThreadStatsCollectionBase<StatisticsType,CacheAlignedAlloc,StatisticsType::COUNT>
ThreadStatsBase	swisstm/src/common/stats_base.h	/^		ThreadStatsBase() : next(NULL), lexical_tx_id(NO_LEXICAL_TX) {$/;"	f	struct:wlpdstm::ThreadStatsBase
ThreadStatsBase	swisstm/src/common/stats_base.h	/^	struct ThreadStatsBase {$/;"	s	namespace:wlpdstm
ThreadStatsCollectionBase	swisstm/src/common/stats_base.h	/^			ThreadStatsCollectionBase() : head(NULL), last(NULL) {$/;"	f	class:wlpdstm::ThreadStatsCollectionBase
ThreadStatsCollectionBase	swisstm/src/common/stats_base.h	/^	class ThreadStatsCollectionBase {$/;"	c	namespace:wlpdstm
Tid	swisstm/src/common/tid.h	/^			Tid() : tid(GetCounter().getNext()) {$/;"	f	class:wlpdstm::Tid
Tid	swisstm/src/common/tid.h	/^	class Tid {$/;"	c	namespace:wlpdstm
Timid	swisstm/src/epochstm/cm.h	/^	class Timid {$/;"	c	namespace:wlpdstm
Timid	swisstm/src/p-tlrw/cm.h	/^	class Timid {$/;"	c	namespace:wlpdstm
Timid	swisstm/src/rw/cm.h	/^	class Timid {$/;"	c	namespace:wlpdstm
Timid	swisstm/src/tlrw/cm.h	/^	class Timid {$/;"	c	namespace:wlpdstm
TlrwStats	swisstm/src/p-tlrw/stats.h	/^	class TlrwStats {$/;"	c	namespace:wlpdstm
TlrwStats	swisstm/src/tlrw/stats.h	/^	class TlrwStats {$/;"	c	namespace:wlpdstm
Tls	swisstm/src/common/tls.h	/^	class Tls {$/;"	c	namespace:wlpdstm
TmImplementation	swisstm/src/common/tm_impl_const.h	/^enum TmImplementation {$/;"	g
Transaction	swisstm/src/stm_api/profiled_transaction.h	/^	typedef ProfiledTransaction<TransactionImpl, StatisticsType> Transaction;$/;"	t	namespace:wlpdstm	typeref:typename:ProfiledTransaction<TransactionImpl,StatisticsType>
Transaction	swisstm/src/stm_api/transaction.h	/^	typedef TransactionImpl Transaction;$/;"	t	namespace:wlpdstm	typeref:typename:TransactionImpl
TransactionDynamic	swisstm/src/dynamic/transaction.h	/^	class TransactionDynamic : public CacheAlignedAlloc {$/;"	c	namespace:wlpdstm
TransactionEpoch	swisstm/src/epochstm/transaction.h	/^	class TransactionEpoch : public CacheAlignedAlloc {$/;"	c	namespace:wlpdstm
TransactionImpl	swisstm/src/dynamic/transaction.h	/^	typedef TransactionDynamic TransactionImpl;$/;"	t	namespace:wlpdstm	typeref:typename:TransactionDynamic
TransactionImpl	swisstm/src/epochstm/transaction.h	/^	typedef TransactionEpoch TransactionImpl;$/;"	t	namespace:wlpdstm	typeref:typename:TransactionEpoch
TransactionImpl	swisstm/src/p-tlrw/transaction.h	/^	typedef TransactionTlrw TransactionImpl;$/;"	t	namespace:wlpdstm	typeref:typename:TransactionTlrw
TransactionImpl	swisstm/src/rw/transaction.h	/^	typedef TransactionRw TransactionImpl;$/;"	t	namespace:wlpdstm	typeref:typename:TransactionRw
TransactionImpl	swisstm/src/stm/transaction.h	/^	typedef TxMixinv TransactionImpl;$/;"	t	namespace:wlpdstm	typeref:typename:TxMixinv
TransactionImpl	swisstm/src/tlrw/transaction.h	/^	typedef TransactionTlrw TransactionImpl;$/;"	t	namespace:wlpdstm	typeref:typename:TransactionTlrw
TransactionRw	swisstm/src/rw/transaction.h	/^	class TransactionRw : public CacheAlignedAlloc {$/;"	c	namespace:wlpdstm
TransactionTlrw	swisstm/src/p-tlrw/transaction.h	/^	class TransactionTlrw : public CacheAlignedAlloc {$/;"	c	namespace:wlpdstm
TransactionTlrw	swisstm/src/tlrw/transaction.h	/^	class TransactionTlrw : public CacheAlignedAlloc {$/;"	c	namespace:wlpdstm
TryCommitResult	swisstm/src/dynamic/eager/eager.h	/^			enum TryCommitResult {$/;"	g	class:wlpdstm::TxEager
TryCommitResult	swisstm/src/dynamic/lazy/lazy.h	/^			enum TryCommitResult {$/;"	g	class:wlpdstm::TxLazy
TryCommitResult	swisstm/src/dynamic/mixed/mixed.h	/^			enum TryCommitResult {$/;"	g	class:wlpdstm::TxMixed
TryCommitResult	swisstm/src/dynamic/transaction.h	/^	enum TryCommitResult {$/;"	g	namespace:wlpdstm
TryCommitResult	swisstm/src/stm/transaction_mixinv.h	/^		enum TryCommitResult {$/;"	g	class:wlpdstm::TxMixinv
TxAbort	swisstm/src/common/stats_base.h	/^		inline void TxAbort() {$/;"	f	struct:wlpdstm::ThreadStatsBase	typeref:typename:void
TxAbort	swisstm/src/dynamic/memory/memory_impl.h	/^inline void wlpdstm::MemoryManager::TxAbort() {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
TxAbort	swisstm/src/dynamic/memory/memory_impl_priv.h	/^inline void wlpdstm::MemoryManager::TxAbort() {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
TxAbort	swisstm/src/dynamic/transaction.h	/^inline void wlpdstm::TransactionDynamic::TxAbort() {$/;"	f	class:wlpdstm::TransactionDynamic	typeref:typename:void
TxAbort	swisstm/src/epochstm/cm.h	/^			void TxAbort() {$/;"	f	class:wlpdstm::Timid	typeref:typename:void
TxAbort	swisstm/src/epochstm/cm.h	/^		void TxAbort() {$/;"	f	class:wlpdstm::Greedy	typeref:typename:void
TxAbort	swisstm/src/epochstm/memory/memory_epoch.h	/^inline void wlpdstm::MemoryManager::TxAbort() {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
TxAbort	swisstm/src/epochstm/memory/memory_leak.h	/^inline void wlpdstm::MemoryManager::TxAbort() {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
TxAbort	swisstm/src/epochstm/memory/memory_txend.h	/^inline void wlpdstm::MemoryManager::TxAbort() {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
TxAbort	swisstm/src/epochstm/transaction.h	/^inline void wlpdstm::TransactionEpoch::TxAbort() {$/;"	f	class:wlpdstm::TransactionEpoch	typeref:typename:void
TxAbort	swisstm/src/p-tlrw/cm.h	/^			void TxAbort() {$/;"	f	class:wlpdstm::Timid	typeref:typename:void
TxAbort	swisstm/src/p-tlrw/cm.h	/^		void TxAbort() {$/;"	f	class:wlpdstm::Greedy	typeref:typename:void
TxAbort	swisstm/src/p-tlrw/memory/memory_txend.h	/^inline void wlpdstm::MemoryManager::TxAbort() {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
TxAbort	swisstm/src/p-tlrw/transaction.h	/^inline void wlpdstm::TransactionTlrw::TxAbort() {$/;"	f	class:wlpdstm::TransactionTlrw	typeref:typename:void
TxAbort	swisstm/src/rw/cm.h	/^			void TxAbort() {$/;"	f	class:wlpdstm::Timid	typeref:typename:void
TxAbort	swisstm/src/rw/cm.h	/^		void TxAbort() {$/;"	f	class:wlpdstm::Greedy	typeref:typename:void
TxAbort	swisstm/src/rw/memory/memory_txend.h	/^inline void wlpdstm::MemoryManager::TxAbort() {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
TxAbort	swisstm/src/rw/transaction.h	/^inline void wlpdstm::TransactionRw::TxAbort() {$/;"	f	class:wlpdstm::TransactionRw	typeref:typename:void
TxAbort	swisstm/src/stm/memory/memory_impl.h	/^inline void wlpdstm::MemoryManager::TxAbort() {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
TxAbort	swisstm/src/stm/memory/memory_impl_priv.h	/^inline void wlpdstm::MemoryManager::TxAbort() {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
TxAbort	swisstm/src/stm/transaction_mixinv.h	/^inline void wlpdstm::TxMixinv::TxAbort() {$/;"	f	class:wlpdstm::TxMixinv	typeref:typename:void
TxAbort	swisstm/src/stm_api/transaction.h	/^		static void TxAbort() {$/;"	f	class:wlpdstm::CurrentTransaction	typeref:typename:void
TxAbort	swisstm/src/tlrw/cm.h	/^			void TxAbort() {$/;"	f	class:wlpdstm::Timid	typeref:typename:void
TxAbort	swisstm/src/tlrw/cm.h	/^		void TxAbort() {$/;"	f	class:wlpdstm::Greedy	typeref:typename:void
TxAbort	swisstm/src/tlrw/memory/memory_txend.h	/^inline void wlpdstm::MemoryManager::TxAbort() {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
TxAbort	swisstm/src/tlrw/transaction.h	/^inline void wlpdstm::TransactionTlrw::TxAbort() {$/;"	f	class:wlpdstm::TransactionTlrw	typeref:typename:void
TxAbortEnd	swisstm/src/common/profiling/adaptive.h	/^inline void wlpdstm::AdaptiveProfiling<STATS, STATS_TYPE>::TxAbortEnd() {$/;"	f	class:wlpdstm::AdaptiveProfiling	typeref:typename:void
TxAbortEnd	swisstm/src/common/profiling/base.h	/^			void TxAbortEnd() {$/;"	f	class:wlpdstm::BaseProfiling	typeref:typename:void
TxAbortEnd	swisstm/src/common/profiling/non_tx_duration.h	/^inline void wlpdstm::NonTxDurationProfiling<STATS, STATS_TYPE>::TxAbortEnd() {$/;"	f	class:wlpdstm::NonTxDurationProfiling	typeref:typename:void
TxAbortEnd	swisstm/src/common/profiling/non_tx_duration_pcnt_simple.h	/^inline void wlpdstm::NonTxDurationPcntProfilingSimple<STATS, STATS_TYPE>::TxAbortEnd() {$/;"	f	class:wlpdstm::NonTxDurationPcntProfilingSimple	typeref:typename:void
TxAbortEnd	swisstm/src/common/profiling/non_tx_duration_simple.h	/^inline void wlpdstm::NonTxDurationProfilingSimple<STATS, STATS_TYPE>::TxAbortEnd() {$/;"	f	class:wlpdstm::NonTxDurationProfilingSimple	typeref:typename:void
TxAbortEnd	swisstm/src/common/profiling/simple.h	/^inline void wlpdstm::SimpleProfiling<STATS, STATS_TYPE>::TxAbortEnd() {$/;"	f	class:wlpdstm::SimpleProfiling	typeref:typename:void
TxAbortEnd	swisstm/src/common/profiling/tx_duration.h	/^inline void wlpdstm::TxDurationProfiling<STATS, STATS_TYPE>::TxAbortEnd() {$/;"	f	class:wlpdstm::TxDurationProfiling	typeref:typename:void
TxAbortEnd	swisstm/src/dynamic/profiling/adaptive_dynamic.h	/^inline void wlpdstm::AdaptiveDynamicProfiling<STATS, STATS_TYPE>::TxAbortEnd() {$/;"	f	class:wlpdstm::AdaptiveDynamicProfiling	typeref:typename:void
TxAbortStart	swisstm/src/common/profiling/adaptive.h	/^inline void wlpdstm::AdaptiveProfiling<STATS, STATS_TYPE>::TxAbortStart() {$/;"	f	class:wlpdstm::AdaptiveProfiling	typeref:typename:void
TxAbortStart	swisstm/src/common/profiling/base.h	/^			void TxAbortStart() {$/;"	f	class:wlpdstm::BaseProfiling	typeref:typename:void
TxAbortStart	swisstm/src/common/profiling/non_tx_duration.h	/^inline void wlpdstm::NonTxDurationProfiling<STATS, STATS_TYPE>::TxAbortStart() {$/;"	f	class:wlpdstm::NonTxDurationProfiling	typeref:typename:void
TxAbortStart	swisstm/src/common/profiling/non_tx_duration_pcnt_simple.h	/^inline void wlpdstm::NonTxDurationPcntProfilingSimple<STATS, STATS_TYPE>::TxAbortStart() {$/;"	f	class:wlpdstm::NonTxDurationPcntProfilingSimple	typeref:typename:void
TxAbortStart	swisstm/src/common/profiling/non_tx_duration_simple.h	/^inline void wlpdstm::NonTxDurationProfilingSimple<STATS, STATS_TYPE>::TxAbortStart() {$/;"	f	class:wlpdstm::NonTxDurationProfilingSimple	typeref:typename:void
TxAbortStart	swisstm/src/common/profiling/simple.h	/^inline void wlpdstm::SimpleProfiling<STATS, STATS_TYPE>::TxAbortStart() {$/;"	f	class:wlpdstm::SimpleProfiling	typeref:typename:void
TxAbortStart	swisstm/src/common/profiling/tx_duration.h	/^inline void wlpdstm::TxDurationProfiling<STATS, STATS_TYPE>::TxAbortStart() {$/;"	f	class:wlpdstm::TxDurationProfiling	typeref:typename:void
TxAbortStart	swisstm/src/dynamic/profiling/adaptive_dynamic.h	/^inline void wlpdstm::AdaptiveDynamicProfiling<STATS, STATS_TYPE>::TxAbortStart() {$/;"	f	class:wlpdstm::AdaptiveDynamicProfiling	typeref:typename:void
TxCommit	swisstm/src/common/stats_base.h	/^		inline void TxCommit() {$/;"	f	struct:wlpdstm::ThreadStatsBase	typeref:typename:void
TxCommit	swisstm/src/dynamic/eager/eager.cc	/^void wlpdstm::TxEager::TxCommit(TransactionDynamic *desc) {$/;"	f	class:wlpdstm::TxEager	typeref:typename:void
TxCommit	swisstm/src/dynamic/lazy/lazy.cc	/^void wlpdstm::TxLazy::TxCommit(TransactionDynamic *desc) {$/;"	f	class:wlpdstm::TxLazy	typeref:typename:void
TxCommit	swisstm/src/dynamic/memory/memory_impl.h	/^inline void wlpdstm::MemoryManager::TxCommit(Word commit_ts) {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
TxCommit	swisstm/src/dynamic/memory/memory_impl_priv.h	/^inline void wlpdstm::MemoryManager::TxCommit(Word commit_ts) {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
TxCommit	swisstm/src/dynamic/mixed/mixed.cc	/^void wlpdstm::TxMixed::TxCommit(TransactionDynamic *desc) {$/;"	f	class:wlpdstm::TxMixed	typeref:typename:void
TxCommit	swisstm/src/dynamic/transaction.h	/^inline void wlpdstm::TransactionDynamic::TxCommit() {$/;"	f	class:wlpdstm::TransactionDynamic	typeref:typename:void
TxCommit	swisstm/src/epochstm/cm.h	/^			void TxCommit() {$/;"	f	class:wlpdstm::Timid	typeref:typename:void
TxCommit	swisstm/src/epochstm/cm.h	/^		void TxCommit() {$/;"	f	class:wlpdstm::Greedy	typeref:typename:void
TxCommit	swisstm/src/epochstm/memory/memory_epoch.h	/^inline void wlpdstm::MemoryManager::TxCommit() {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
TxCommit	swisstm/src/epochstm/memory/memory_leak.h	/^inline void wlpdstm::MemoryManager::TxCommit() {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
TxCommit	swisstm/src/epochstm/memory/memory_txend.h	/^inline void wlpdstm::MemoryManager::TxCommit() {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
TxCommit	swisstm/src/epochstm/transaction.h	/^inline void wlpdstm::TransactionEpoch::TxCommit() {$/;"	f	class:wlpdstm::TransactionEpoch	typeref:typename:void
TxCommit	swisstm/src/p-tlrw/cm.h	/^			void TxCommit() {$/;"	f	class:wlpdstm::Timid	typeref:typename:void
TxCommit	swisstm/src/p-tlrw/cm.h	/^		void TxCommit() {$/;"	f	class:wlpdstm::Greedy	typeref:typename:void
TxCommit	swisstm/src/p-tlrw/memory/memory_txend.h	/^inline void wlpdstm::MemoryManager::TxCommit() {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
TxCommit	swisstm/src/p-tlrw/transaction.h	/^inline void wlpdstm::TransactionTlrw::TxCommit() {$/;"	f	class:wlpdstm::TransactionTlrw	typeref:typename:void
TxCommit	swisstm/src/rw/cm.h	/^			void TxCommit() {$/;"	f	class:wlpdstm::Timid	typeref:typename:void
TxCommit	swisstm/src/rw/cm.h	/^		void TxCommit() {$/;"	f	class:wlpdstm::Greedy	typeref:typename:void
TxCommit	swisstm/src/rw/memory/memory_txend.h	/^inline void wlpdstm::MemoryManager::TxCommit() {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
TxCommit	swisstm/src/rw/transaction.h	/^inline void wlpdstm::TransactionRw::TxCommit() {$/;"	f	class:wlpdstm::TransactionRw	typeref:typename:void
TxCommit	swisstm/src/stm/memory/memory_impl.h	/^inline void wlpdstm::MemoryManager::TxCommit(Word commit_ts) {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
TxCommit	swisstm/src/stm/memory/memory_impl_priv.h	/^inline void wlpdstm::MemoryManager::TxCommit(Word commit_ts) {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
TxCommit	swisstm/src/stm/transaction_mixinv.h	/^inline void wlpdstm::TxMixinv::TxCommit() {$/;"	f	class:wlpdstm::TxMixinv	typeref:typename:void
TxCommit	swisstm/src/stm_api/profiled_transaction.h	/^inline void wlpdstm::ProfiledTransaction<TX, STATS_TYPE>::TxCommit() {$/;"	f	class:wlpdstm::ProfiledTransaction	typeref:typename:void
TxCommit	swisstm/src/stm_api/transaction.h	/^		static void TxCommit() {$/;"	f	class:wlpdstm::CurrentTransaction	typeref:typename:void
TxCommit	swisstm/src/tlrw/cm.h	/^			void TxCommit() {$/;"	f	class:wlpdstm::Timid	typeref:typename:void
TxCommit	swisstm/src/tlrw/cm.h	/^		void TxCommit() {$/;"	f	class:wlpdstm::Greedy	typeref:typename:void
TxCommit	swisstm/src/tlrw/memory/memory_txend.h	/^inline void wlpdstm::MemoryManager::TxCommit() {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
TxCommit	swisstm/src/tlrw/transaction.h	/^inline void wlpdstm::TransactionTlrw::TxCommit() {$/;"	f	class:wlpdstm::TransactionTlrw	typeref:typename:void
TxCommitAfterTry	swisstm/src/dynamic/eager/eager_impl_inline.h	/^inline void wlpdstm::TxEager::TxCommitAfterTry(TransactionDynamic *desc, TryCommitResult result)/;"	f	class:wlpdstm::TxEager	typeref:typename:void
TxCommitAfterTry	swisstm/src/dynamic/lazy/lazy_impl_inline.h	/^inline void wlpdstm::TxLazy::TxCommitAfterTry(TransactionDynamic *desc, TryCommitResult result) /;"	f	class:wlpdstm::TxLazy	typeref:typename:void
TxCommitAfterTry	swisstm/src/dynamic/mixed/mixed_inline_fun.h	/^inline void wlpdstm::TxMixed::TxCommitAfterTry(TransactionDynamic *desc, TryCommitResult result)/;"	f	class:wlpdstm::TxMixed	typeref:typename:void
TxCommitEnd	swisstm/src/common/profiling/adaptive.h	/^inline void wlpdstm::AdaptiveProfiling<STATS, STATS_TYPE>::TxCommitEnd() {$/;"	f	class:wlpdstm::AdaptiveProfiling	typeref:typename:void
TxCommitEnd	swisstm/src/common/profiling/base.h	/^			void TxCommitEnd() {$/;"	f	class:wlpdstm::BaseProfiling	typeref:typename:void
TxCommitEnd	swisstm/src/common/profiling/non_tx_duration.h	/^inline void wlpdstm::NonTxDurationProfiling<STATS, STATS_TYPE>::TxCommitEnd() {$/;"	f	class:wlpdstm::NonTxDurationProfiling	typeref:typename:void
TxCommitEnd	swisstm/src/common/profiling/non_tx_duration_pcnt_simple.h	/^inline void wlpdstm::NonTxDurationPcntProfilingSimple<STATS, STATS_TYPE>::TxCommitEnd() {$/;"	f	class:wlpdstm::NonTxDurationPcntProfilingSimple	typeref:typename:void
TxCommitEnd	swisstm/src/common/profiling/non_tx_duration_simple.h	/^inline void wlpdstm::NonTxDurationProfilingSimple<STATS, STATS_TYPE>::TxCommitEnd() {$/;"	f	class:wlpdstm::NonTxDurationProfilingSimple	typeref:typename:void
TxCommitEnd	swisstm/src/common/profiling/simple.h	/^inline void wlpdstm::SimpleProfiling<STATS, STATS_TYPE>::TxCommitEnd() {$/;"	f	class:wlpdstm::SimpleProfiling	typeref:typename:void
TxCommitEnd	swisstm/src/common/profiling/tx_duration.h	/^inline void wlpdstm::TxDurationProfiling<STATS, STATS_TYPE>::TxCommitEnd() {$/;"	f	class:wlpdstm::TxDurationProfiling	typeref:typename:void
TxCommitEnd	swisstm/src/dynamic/profiling/adaptive_dynamic.h	/^inline void wlpdstm::AdaptiveDynamicProfiling<STATS, STATS_TYPE>::TxCommitEnd() {$/;"	f	class:wlpdstm::AdaptiveDynamicProfiling	typeref:typename:void
TxCommitFunPtr	swisstm/src/dynamic/transaction.h	/^			typedef void (*TxCommitFunPtr)(TransactionDynamic *desc);$/;"	t	class:wlpdstm::TransactionDynamic	typeref:typename:void (*)(TransactionDynamic * desc)
TxCommitReadOnly	swisstm/src/dynamic/eager/eager.cc	/^void wlpdstm::TxEager::TxCommitReadOnly(TransactionDynamic *desc) {$/;"	f	class:wlpdstm::TxEager	typeref:typename:void
TxCommitReadOnly	swisstm/src/dynamic/lazy/lazy.cc	/^void wlpdstm::TxLazy::TxCommitReadOnly(TransactionDynamic *desc) {$/;"	f	class:wlpdstm::TxLazy	typeref:typename:void
TxCommitReadOnly	swisstm/src/dynamic/mixed/mixed.cc	/^void wlpdstm::TxMixed::TxCommitReadOnly(TransactionDynamic *desc) {$/;"	f	class:wlpdstm::TxMixed	typeref:typename:void
TxCommitStart	swisstm/src/common/profiling/adaptive.h	/^inline void wlpdstm::AdaptiveProfiling<STATS, STATS_TYPE>::TxCommitStart() {$/;"	f	class:wlpdstm::AdaptiveProfiling	typeref:typename:void
TxCommitStart	swisstm/src/common/profiling/base.h	/^			void TxCommitStart() {$/;"	f	class:wlpdstm::BaseProfiling	typeref:typename:void
TxCommitStart	swisstm/src/common/profiling/non_tx_duration.h	/^inline void wlpdstm::NonTxDurationProfiling<STATS, STATS_TYPE>::TxCommitStart() {$/;"	f	class:wlpdstm::NonTxDurationProfiling	typeref:typename:void
TxCommitStart	swisstm/src/common/profiling/non_tx_duration_pcnt_simple.h	/^inline void wlpdstm::NonTxDurationPcntProfilingSimple<STATS, STATS_TYPE>::TxCommitStart() {$/;"	f	class:wlpdstm::NonTxDurationPcntProfilingSimple	typeref:typename:void
TxCommitStart	swisstm/src/common/profiling/non_tx_duration_simple.h	/^inline void wlpdstm::NonTxDurationProfilingSimple<STATS, STATS_TYPE>::TxCommitStart() {$/;"	f	class:wlpdstm::NonTxDurationProfilingSimple	typeref:typename:void
TxCommitStart	swisstm/src/common/profiling/simple.h	/^inline void wlpdstm::SimpleProfiling<STATS, STATS_TYPE>::TxCommitStart() {$/;"	f	class:wlpdstm::SimpleProfiling	typeref:typename:void
TxCommitStart	swisstm/src/common/profiling/tx_duration.h	/^inline void wlpdstm::TxDurationProfiling<STATS, STATS_TYPE>::TxCommitStart() {$/;"	f	class:wlpdstm::TxDurationProfiling	typeref:typename:void
TxCommitStart	swisstm/src/dynamic/profiling/adaptive_dynamic.h	/^inline void wlpdstm::AdaptiveDynamicProfiling<STATS, STATS_TYPE>::TxCommitStart() {$/;"	f	class:wlpdstm::AdaptiveDynamicProfiling	typeref:typename:void
TxCommitStatic	swisstm/src/dynamic/eager/eager_static.h	/^API_LINKAGE void wlpdstm::TxEager::TxCommitStatic(TransactionDynamic *desc) {$/;"	f	class:wlpdstm::TxEager	typeref:typename:API_LINKAGE void
TxCommitStatic	swisstm/src/dynamic/lazy/lazy_static.h	/^API_LINKAGE void wlpdstm::TxLazy::TxCommitStatic(TransactionDynamic *desc) {$/;"	f	class:wlpdstm::TxLazy	typeref:typename:API_LINKAGE void
TxCommitStatic	swisstm/src/dynamic/mixed/mixed_inline.h	/^API_LINKAGE void wlpdstm::TxMixed::TxCommitStatic(TransactionDynamic *desc) {$/;"	f	class:wlpdstm::TxMixed	typeref:typename:API_LINKAGE void
TxCounter	swisstm/src/epochstm/transaction.h	/^			typedef Word TxCounter;$/;"	t	class:wlpdstm::TransactionEpoch	typeref:typename:Word
TxCounter	swisstm/src/p-tlrw/transaction.h	/^		typedef uint8_t TxCounter;$/;"	t	class:wlpdstm::TransactionTlrw	typeref:typename:uint8_t
TxDurationProfiling	swisstm/src/common/profiling/tx_duration.h	/^	class TxDurationProfiling {$/;"	c	namespace:wlpdstm
TxEager	swisstm/src/dynamic/eager/eager.h	/^	class TxEager {$/;"	c	namespace:wlpdstm
TxEnd	swisstm/src/dynamic/perf_cnt.h	/^            void TxEnd() {$/;"	f	class:wlpdstm::PerfCnt	typeref:typename:void
TxFree	swisstm/src/dynamic/memory/memory_impl.h	/^inline void wlpdstm::MemoryManager::TxFree(void *ptr) {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
TxFree	swisstm/src/dynamic/memory/memory_impl_priv.h	/^inline void wlpdstm::MemoryManager::TxFree(void *ptr) {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
TxFree	swisstm/src/dynamic/transaction.h	/^inline void wlpdstm::TransactionDynamic::TxFree(void *ptr, size_t size) {$/;"	f	class:wlpdstm::TransactionDynamic	typeref:typename:void
TxFree	swisstm/src/epochstm/memory/memory_epoch.h	/^inline void wlpdstm::MemoryManager::TxFree(void *ptr) {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
TxFree	swisstm/src/epochstm/memory/memory_leak.h	/^inline void wlpdstm::MemoryManager::TxFree(void *ptr) {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
TxFree	swisstm/src/epochstm/memory/memory_txend.h	/^inline void wlpdstm::MemoryManager::TxFree(void *ptr) {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
TxFree	swisstm/src/epochstm/transaction.h	/^inline void wlpdstm::TransactionEpoch::TxFree(void *ptr, size_t size) {$/;"	f	class:wlpdstm::TransactionEpoch	typeref:typename:void
TxFree	swisstm/src/p-tlrw/memory/memory_txend.h	/^inline void wlpdstm::MemoryManager::TxFree(void *ptr) {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
TxFree	swisstm/src/p-tlrw/transaction.h	/^inline void wlpdstm::TransactionTlrw::TxFree(void *ptr, size_t size) {$/;"	f	class:wlpdstm::TransactionTlrw	typeref:typename:void
TxFree	swisstm/src/rw/memory/memory_txend.h	/^inline void wlpdstm::MemoryManager::TxFree(void *ptr) {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
TxFree	swisstm/src/rw/transaction.h	/^inline void wlpdstm::TransactionRw::TxFree(void *ptr, size_t size) {$/;"	f	class:wlpdstm::TransactionRw	typeref:typename:void
TxFree	swisstm/src/stm/memory/memory_impl.h	/^inline void wlpdstm::MemoryManager::TxFree(void *ptr) {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
TxFree	swisstm/src/stm/memory/memory_impl_priv.h	/^inline void wlpdstm::MemoryManager::TxFree(void *ptr) {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
TxFree	swisstm/src/stm/transaction_mixinv.h	/^inline void wlpdstm::TxMixinv::TxFree(void *ptr, size_t size) {$/;"	f	class:wlpdstm::TxMixinv	typeref:typename:void
TxFree	swisstm/src/stm_api/profiled_transaction.h	/^inline void wlpdstm::ProfiledTransaction<TX, STATS_TYPE>::TxFree(void *ptr, size_t size) {$/;"	f	class:wlpdstm::ProfiledTransaction	typeref:typename:void
TxFree	swisstm/src/stm_api/transaction.h	/^		static void TxFree(void *address, size_t size) {$/;"	f	class:wlpdstm::CurrentTransaction	typeref:typename:void
TxFree	swisstm/src/tlrw/memory/memory_txend.h	/^inline void wlpdstm::MemoryManager::TxFree(void *ptr) {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
TxFree	swisstm/src/tlrw/transaction.h	/^inline void wlpdstm::TransactionTlrw::TxFree(void *ptr, size_t size) {$/;"	f	class:wlpdstm::TransactionTlrw	typeref:typename:void
TxFreeEnd	swisstm/src/common/profiling/adaptive.h	/^inline void wlpdstm::AdaptiveProfiling<STATS, STATS_TYPE>::TxFreeEnd() {$/;"	f	class:wlpdstm::AdaptiveProfiling	typeref:typename:void
TxFreeEnd	swisstm/src/common/profiling/base.h	/^			void TxFreeEnd() {$/;"	f	class:wlpdstm::BaseProfiling	typeref:typename:void
TxFreeEnd	swisstm/src/common/profiling/non_tx_duration.h	/^inline void wlpdstm::NonTxDurationProfiling<STATS, STATS_TYPE>::TxFreeEnd() {$/;"	f	class:wlpdstm::NonTxDurationProfiling	typeref:typename:void
TxFreeEnd	swisstm/src/common/profiling/non_tx_duration_pcnt_simple.h	/^inline void wlpdstm::NonTxDurationPcntProfilingSimple<STATS, STATS_TYPE>::TxFreeEnd() {$/;"	f	class:wlpdstm::NonTxDurationPcntProfilingSimple	typeref:typename:void
TxFreeEnd	swisstm/src/common/profiling/non_tx_duration_simple.h	/^inline void wlpdstm::NonTxDurationProfilingSimple<STATS, STATS_TYPE>::TxFreeEnd() {$/;"	f	class:wlpdstm::NonTxDurationProfilingSimple	typeref:typename:void
TxFreeEnd	swisstm/src/common/profiling/simple.h	/^inline void wlpdstm::SimpleProfiling<STATS, STATS_TYPE>::TxFreeEnd() {$/;"	f	class:wlpdstm::SimpleProfiling	typeref:typename:void
TxFreeEnd	swisstm/src/common/profiling/tx_duration.h	/^inline void wlpdstm::TxDurationProfiling<STATS, STATS_TYPE>::TxFreeEnd() {$/;"	f	class:wlpdstm::TxDurationProfiling	typeref:typename:void
TxFreeEnd	swisstm/src/dynamic/profiling/adaptive_dynamic.h	/^inline void wlpdstm::AdaptiveDynamicProfiling<STATS, STATS_TYPE>::TxFreeEnd() {$/;"	f	class:wlpdstm::AdaptiveDynamicProfiling	typeref:typename:void
TxFreeStart	swisstm/src/common/profiling/adaptive.h	/^inline void wlpdstm::AdaptiveProfiling<STATS, STATS_TYPE>::TxFreeStart(void *ptr, size_t size) {$/;"	f	class:wlpdstm::AdaptiveProfiling	typeref:typename:void
TxFreeStart	swisstm/src/common/profiling/base.h	/^			void TxFreeStart(void *ptr, size_t size) {$/;"	f	class:wlpdstm::BaseProfiling	typeref:typename:void
TxFreeStart	swisstm/src/common/profiling/non_tx_duration.h	/^inline void wlpdstm::NonTxDurationProfiling<STATS, STATS_TYPE>::TxFreeStart(void *ptr, size_t si/;"	f	class:wlpdstm::NonTxDurationProfiling	typeref:typename:void
TxFreeStart	swisstm/src/common/profiling/non_tx_duration_pcnt_simple.h	/^inline void wlpdstm::NonTxDurationPcntProfilingSimple<STATS, STATS_TYPE>::TxFreeStart(void *ptr,/;"	f	class:wlpdstm::NonTxDurationPcntProfilingSimple	typeref:typename:void
TxFreeStart	swisstm/src/common/profiling/non_tx_duration_simple.h	/^inline void wlpdstm::NonTxDurationProfilingSimple<STATS, STATS_TYPE>::TxFreeStart(void *ptr, siz/;"	f	class:wlpdstm::NonTxDurationProfilingSimple	typeref:typename:void
TxFreeStart	swisstm/src/common/profiling/simple.h	/^inline void wlpdstm::SimpleProfiling<STATS, STATS_TYPE>::TxFreeStart(void *ptr, size_t size) {$/;"	f	class:wlpdstm::SimpleProfiling	typeref:typename:void
TxFreeStart	swisstm/src/common/profiling/tx_duration.h	/^inline void wlpdstm::TxDurationProfiling<STATS, STATS_TYPE>::TxFreeStart(void *ptr, size_t size)/;"	f	class:wlpdstm::TxDurationProfiling	typeref:typename:void
TxFreeStart	swisstm/src/dynamic/profiling/adaptive_dynamic.h	/^inline void wlpdstm::AdaptiveDynamicProfiling<STATS, STATS_TYPE>::TxFreeStart(void *ptr, size_t /;"	f	class:wlpdstm::AdaptiveDynamicProfiling	typeref:typename:void
TxFreeStartForEstimatingCosts	swisstm/src/common/profiling/adaptive.h	/^inline void wlpdstm::AdaptiveProfiling<STATS, STATS_TYPE>::TxFreeStartForEstimatingCosts() {$/;"	f	class:wlpdstm::AdaptiveProfiling	typeref:typename:void
TxFreeStartForEstimatingCosts	swisstm/src/dynamic/profiling/adaptive_dynamic.h	/^inline void wlpdstm::AdaptiveDynamicProfiling<STATS, STATS_TYPE>::TxFreeStartForEstimatingCosts(/;"	f	class:wlpdstm::AdaptiveDynamicProfiling	typeref:typename:void
TxId	swisstm/src/epochstm/transaction.h	/^			typedef uint32_t TxId;$/;"	t	class:wlpdstm::TransactionEpoch	typeref:typename:uint32_t
TxLazy	swisstm/src/dynamic/lazy/lazy.h	/^	class TxLazy {$/;"	c	namespace:wlpdstm
TxMalloc	swisstm/src/dynamic/memory/memory_impl.h	/^inline void *wlpdstm::MemoryManager::TxMalloc(size_t size) {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void *
TxMalloc	swisstm/src/dynamic/memory/memory_impl_priv.h	/^inline void *wlpdstm::MemoryManager::TxMalloc(size_t size) {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void *
TxMalloc	swisstm/src/dynamic/transaction.h	/^inline void *wlpdstm::TransactionDynamic::TxMalloc(size_t size) {$/;"	f	class:wlpdstm::TransactionDynamic	typeref:typename:void *
TxMalloc	swisstm/src/epochstm/memory/memory_epoch.h	/^inline void *wlpdstm::MemoryManager::TxMalloc(size_t size) {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void *
TxMalloc	swisstm/src/epochstm/memory/memory_leak.h	/^inline void *wlpdstm::MemoryManager::TxMalloc(size_t size) {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void *
TxMalloc	swisstm/src/epochstm/memory/memory_txend.h	/^inline void *wlpdstm::MemoryManager::TxMalloc(size_t size) {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void *
TxMalloc	swisstm/src/epochstm/transaction.h	/^inline void *wlpdstm::TransactionEpoch::TxMalloc(size_t size) {$/;"	f	class:wlpdstm::TransactionEpoch	typeref:typename:void *
TxMalloc	swisstm/src/p-tlrw/memory/memory_txend.h	/^inline void *wlpdstm::MemoryManager::TxMalloc(size_t size) {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void *
TxMalloc	swisstm/src/p-tlrw/transaction.h	/^inline void *wlpdstm::TransactionTlrw::TxMalloc(size_t size) {$/;"	f	class:wlpdstm::TransactionTlrw	typeref:typename:void *
TxMalloc	swisstm/src/rw/memory/memory_txend.h	/^inline void *wlpdstm::MemoryManager::TxMalloc(size_t size) {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void *
TxMalloc	swisstm/src/rw/transaction.h	/^inline void *wlpdstm::TransactionRw::TxMalloc(size_t size) {$/;"	f	class:wlpdstm::TransactionRw	typeref:typename:void *
TxMalloc	swisstm/src/stm/memory/memory_impl.h	/^inline void *wlpdstm::MemoryManager::TxMalloc(size_t size) {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void *
TxMalloc	swisstm/src/stm/memory/memory_impl_priv.h	/^inline void *wlpdstm::MemoryManager::TxMalloc(size_t size) {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void *
TxMalloc	swisstm/src/stm/transaction_mixinv.h	/^inline void *wlpdstm::TxMixinv::TxMalloc(size_t size) {$/;"	f	class:wlpdstm::TxMixinv	typeref:typename:void *
TxMalloc	swisstm/src/stm_api/profiled_transaction.h	/^inline void *wlpdstm::ProfiledTransaction<TX, STATS_TYPE>::TxMalloc(size_t size) {$/;"	f	class:wlpdstm::ProfiledTransaction	typeref:typename:void *
TxMalloc	swisstm/src/stm_api/transaction.h	/^		static void *TxMalloc(size_t size) {$/;"	f	class:wlpdstm::CurrentTransaction	typeref:typename:void *
TxMalloc	swisstm/src/tlrw/memory/memory_txend.h	/^inline void *wlpdstm::MemoryManager::TxMalloc(size_t size) {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void *
TxMalloc	swisstm/src/tlrw/transaction.h	/^inline void *wlpdstm::TransactionTlrw::TxMalloc(size_t size) {$/;"	f	class:wlpdstm::TransactionTlrw	typeref:typename:void *
TxMallocEnd	swisstm/src/common/profiling/adaptive.h	/^inline void wlpdstm::AdaptiveProfiling<STATS, STATS_TYPE>::TxMallocEnd(void *ptr) {$/;"	f	class:wlpdstm::AdaptiveProfiling	typeref:typename:void
TxMallocEnd	swisstm/src/common/profiling/base.h	/^			void TxMallocEnd(void *ptr) {$/;"	f	class:wlpdstm::BaseProfiling	typeref:typename:void
TxMallocEnd	swisstm/src/common/profiling/non_tx_duration.h	/^inline void wlpdstm::NonTxDurationProfiling<STATS, STATS_TYPE>::TxMallocEnd(void *ptr) {$/;"	f	class:wlpdstm::NonTxDurationProfiling	typeref:typename:void
TxMallocEnd	swisstm/src/common/profiling/non_tx_duration_pcnt_simple.h	/^inline void wlpdstm::NonTxDurationPcntProfilingSimple<STATS, STATS_TYPE>::TxMallocEnd(void *ptr)/;"	f	class:wlpdstm::NonTxDurationPcntProfilingSimple	typeref:typename:void
TxMallocEnd	swisstm/src/common/profiling/non_tx_duration_simple.h	/^inline void wlpdstm::NonTxDurationProfilingSimple<STATS, STATS_TYPE>::TxMallocEnd(void *ptr) {$/;"	f	class:wlpdstm::NonTxDurationProfilingSimple	typeref:typename:void
TxMallocEnd	swisstm/src/common/profiling/simple.h	/^inline void wlpdstm::SimpleProfiling<STATS, STATS_TYPE>::TxMallocEnd(void *ptr) {$/;"	f	class:wlpdstm::SimpleProfiling	typeref:typename:void
TxMallocEnd	swisstm/src/common/profiling/tx_duration.h	/^inline void wlpdstm::TxDurationProfiling<STATS, STATS_TYPE>::TxMallocEnd(void *ptr) {$/;"	f	class:wlpdstm::TxDurationProfiling	typeref:typename:void
TxMallocEnd	swisstm/src/dynamic/profiling/adaptive_dynamic.h	/^inline void wlpdstm::AdaptiveDynamicProfiling<STATS, STATS_TYPE>::TxMallocEnd(void *ptr) {$/;"	f	class:wlpdstm::AdaptiveDynamicProfiling	typeref:typename:void
TxMallocEndForEstimatingCosts	swisstm/src/common/profiling/adaptive.h	/^inline void wlpdstm::AdaptiveProfiling<STATS, STATS_TYPE>::TxMallocEndForEstimatingCosts() {$/;"	f	class:wlpdstm::AdaptiveProfiling	typeref:typename:void
TxMallocEndForEstimatingCosts	swisstm/src/dynamic/profiling/adaptive_dynamic.h	/^inline void wlpdstm::AdaptiveDynamicProfiling<STATS, STATS_TYPE>::TxMallocEndForEstimatingCosts(/;"	f	class:wlpdstm::AdaptiveDynamicProfiling	typeref:typename:void
TxMallocStart	swisstm/src/common/profiling/adaptive.h	/^inline void wlpdstm::AdaptiveProfiling<STATS, STATS_TYPE>::TxMallocStart(size_t size) {$/;"	f	class:wlpdstm::AdaptiveProfiling	typeref:typename:void
TxMallocStart	swisstm/src/common/profiling/base.h	/^			void TxMallocStart(size_t size) {$/;"	f	class:wlpdstm::BaseProfiling	typeref:typename:void
TxMallocStart	swisstm/src/common/profiling/non_tx_duration.h	/^inline void wlpdstm::NonTxDurationProfiling<STATS, STATS_TYPE>::TxMallocStart(size_t size) {$/;"	f	class:wlpdstm::NonTxDurationProfiling	typeref:typename:void
TxMallocStart	swisstm/src/common/profiling/non_tx_duration_pcnt_simple.h	/^inline void wlpdstm::NonTxDurationPcntProfilingSimple<STATS, STATS_TYPE>::TxMallocStart(size_t s/;"	f	class:wlpdstm::NonTxDurationPcntProfilingSimple	typeref:typename:void
TxMallocStart	swisstm/src/common/profiling/non_tx_duration_simple.h	/^inline void wlpdstm::NonTxDurationProfilingSimple<STATS, STATS_TYPE>::TxMallocStart(size_t size)/;"	f	class:wlpdstm::NonTxDurationProfilingSimple	typeref:typename:void
TxMallocStart	swisstm/src/common/profiling/simple.h	/^inline void wlpdstm::SimpleProfiling<STATS, STATS_TYPE>::TxMallocStart(size_t size) {$/;"	f	class:wlpdstm::SimpleProfiling	typeref:typename:void
TxMallocStart	swisstm/src/common/profiling/tx_duration.h	/^inline void wlpdstm::TxDurationProfiling<STATS, STATS_TYPE>::TxMallocStart(size_t size) {$/;"	f	class:wlpdstm::TxDurationProfiling	typeref:typename:void
TxMallocStart	swisstm/src/dynamic/profiling/adaptive_dynamic.h	/^inline void wlpdstm::AdaptiveDynamicProfiling<STATS, STATS_TYPE>::TxMallocStart(size_t size) {$/;"	f	class:wlpdstm::AdaptiveDynamicProfiling	typeref:typename:void
TxMallocStartForEstimatingCosts	swisstm/src/common/profiling/adaptive.h	/^inline void wlpdstm::AdaptiveProfiling<STATS, STATS_TYPE>::TxMallocStartForEstimatingCosts() {$/;"	f	class:wlpdstm::AdaptiveProfiling	typeref:typename:void
TxMallocStartForEstimatingCosts	swisstm/src/dynamic/profiling/adaptive_dynamic.h	/^inline void wlpdstm::AdaptiveDynamicProfiling<STATS, STATS_TYPE>::TxMallocStartForEstimatingCost/;"	f	class:wlpdstm::AdaptiveDynamicProfiling	typeref:typename:void
TxMixed	swisstm/src/dynamic/mixed/mixed.h	/^	class TxMixed {$/;"	c	namespace:wlpdstm
TxMixinv	swisstm/src/stm/transaction_mixinv.h	/^	class TxMixinv : public CacheAlignedAlloc {$/;"	c	namespace:wlpdstm
TxMixinvStats	swisstm/src/dynamic/stats.h	/^	class TxMixinvStats {$/;"	c	namespace:wlpdstm
TxMixinvStats	swisstm/src/stm/stats.h	/^	class TxMixinvStats {$/;"	c	namespace:wlpdstm
TxProfiling	swisstm/src/common/sampling.h	/^	typedef NoTxSampling TxProfiling;$/;"	t	namespace:wlpdstm	typeref:typename:NoTxSampling
TxProfiling	swisstm/src/common/sampling.h	/^	typedef RandomTxSampling TxProfiling;$/;"	t	namespace:wlpdstm	typeref:typename:RandomTxSampling
TxRestart	swisstm/src/common/stats_base.h	/^		inline void TxRestart() {$/;"	f	struct:wlpdstm::ThreadStatsBase	typeref:typename:void
TxRestart	swisstm/src/dynamic/transaction.h	/^inline void wlpdstm::TransactionDynamic::TxRestart() {$/;"	f	class:wlpdstm::TransactionDynamic	typeref:typename:void
TxRestart	swisstm/src/epochstm/cm.h	/^			void TxRestart() {$/;"	f	class:wlpdstm::Timid	typeref:typename:void
TxRestart	swisstm/src/epochstm/cm.h	/^		void TxRestart() {$/;"	f	class:wlpdstm::Greedy	typeref:typename:void
TxRestart	swisstm/src/epochstm/transaction.h	/^inline void wlpdstm::TransactionEpoch::TxRestart(RestartCause cause) {$/;"	f	class:wlpdstm::TransactionEpoch	typeref:typename:void
TxRestart	swisstm/src/p-tlrw/cm.h	/^			void TxRestart() {$/;"	f	class:wlpdstm::Timid	typeref:typename:void
TxRestart	swisstm/src/p-tlrw/cm.h	/^		void TxRestart() {$/;"	f	class:wlpdstm::Greedy	typeref:typename:void
TxRestart	swisstm/src/p-tlrw/transaction.h	/^inline void wlpdstm::TransactionTlrw::TxRestart(RestartCause cause) {$/;"	f	class:wlpdstm::TransactionTlrw	typeref:typename:void
TxRestart	swisstm/src/rw/cm.h	/^			void TxRestart() {$/;"	f	class:wlpdstm::Timid	typeref:typename:void
TxRestart	swisstm/src/rw/cm.h	/^		void TxRestart() {$/;"	f	class:wlpdstm::Greedy	typeref:typename:void
TxRestart	swisstm/src/rw/transaction.h	/^inline void wlpdstm::TransactionRw::TxRestart(RestartCause cause) {$/;"	f	class:wlpdstm::TransactionRw	typeref:typename:void
TxRestart	swisstm/src/stm/transaction_mixinv.h	/^inline void wlpdstm::TxMixinv::TxRestart() {$/;"	f	class:wlpdstm::TxMixinv	typeref:typename:void
TxRestart	swisstm/src/stm_api/transaction.h	/^		static void TxRestart() {$/;"	f	class:wlpdstm::CurrentTransaction	typeref:typename:void
TxRestart	swisstm/src/tlrw/cm.h	/^			void TxRestart() {$/;"	f	class:wlpdstm::Timid	typeref:typename:void
TxRestart	swisstm/src/tlrw/cm.h	/^		void TxRestart() {$/;"	f	class:wlpdstm::Greedy	typeref:typename:void
TxRestart	swisstm/src/tlrw/transaction.h	/^inline void wlpdstm::TransactionTlrw::TxRestart(RestartCause cause) {$/;"	f	class:wlpdstm::TransactionTlrw	typeref:typename:void
TxRestartEnd	swisstm/src/common/profiling/adaptive.h	/^inline void wlpdstm::AdaptiveProfiling<STATS, STATS_TYPE>::TxRestartEnd() {$/;"	f	class:wlpdstm::AdaptiveProfiling	typeref:typename:void
TxRestartEnd	swisstm/src/common/profiling/base.h	/^			void TxRestartEnd() {$/;"	f	class:wlpdstm::BaseProfiling	typeref:typename:void
TxRestartEnd	swisstm/src/common/profiling/non_tx_duration.h	/^inline void wlpdstm::NonTxDurationProfiling<STATS, STATS_TYPE>::TxRestartEnd() {$/;"	f	class:wlpdstm::NonTxDurationProfiling	typeref:typename:void
TxRestartEnd	swisstm/src/common/profiling/non_tx_duration_pcnt_simple.h	/^inline void wlpdstm::NonTxDurationPcntProfilingSimple<STATS, STATS_TYPE>::TxRestartEnd() {$/;"	f	class:wlpdstm::NonTxDurationPcntProfilingSimple	typeref:typename:void
TxRestartEnd	swisstm/src/common/profiling/non_tx_duration_simple.h	/^inline void wlpdstm::NonTxDurationProfilingSimple<STATS, STATS_TYPE>::TxRestartEnd() {$/;"	f	class:wlpdstm::NonTxDurationProfilingSimple	typeref:typename:void
TxRestartEnd	swisstm/src/common/profiling/simple.h	/^inline void wlpdstm::SimpleProfiling<STATS, STATS_TYPE>::TxRestartEnd() {$/;"	f	class:wlpdstm::SimpleProfiling	typeref:typename:void
TxRestartEnd	swisstm/src/common/profiling/tx_duration.h	/^inline void wlpdstm::TxDurationProfiling<STATS, STATS_TYPE>::TxRestartEnd() {$/;"	f	class:wlpdstm::TxDurationProfiling	typeref:typename:void
TxRestartEnd	swisstm/src/dynamic/profiling/adaptive_dynamic.h	/^inline void wlpdstm::AdaptiveDynamicProfiling<STATS, STATS_TYPE>::TxRestartEnd() {$/;"	f	class:wlpdstm::AdaptiveDynamicProfiling	typeref:typename:void
TxRestartStart	swisstm/src/common/profiling/adaptive.h	/^inline void wlpdstm::AdaptiveProfiling<STATS, STATS_TYPE>::TxRestartStart() {$/;"	f	class:wlpdstm::AdaptiveProfiling	typeref:typename:void
TxRestartStart	swisstm/src/common/profiling/base.h	/^			void TxRestartStart() {$/;"	f	class:wlpdstm::BaseProfiling	typeref:typename:void
TxRestartStart	swisstm/src/common/profiling/non_tx_duration.h	/^inline void wlpdstm::NonTxDurationProfiling<STATS, STATS_TYPE>::TxRestartStart() {$/;"	f	class:wlpdstm::NonTxDurationProfiling	typeref:typename:void
TxRestartStart	swisstm/src/common/profiling/non_tx_duration_pcnt_simple.h	/^inline void wlpdstm::NonTxDurationPcntProfilingSimple<STATS, STATS_TYPE>::TxRestartStart() {$/;"	f	class:wlpdstm::NonTxDurationPcntProfilingSimple	typeref:typename:void
TxRestartStart	swisstm/src/common/profiling/non_tx_duration_simple.h	/^inline void wlpdstm::NonTxDurationProfilingSimple<STATS, STATS_TYPE>::TxRestartStart() {$/;"	f	class:wlpdstm::NonTxDurationProfilingSimple	typeref:typename:void
TxRestartStart	swisstm/src/common/profiling/simple.h	/^inline void wlpdstm::SimpleProfiling<STATS, STATS_TYPE>::TxRestartStart() {$/;"	f	class:wlpdstm::SimpleProfiling	typeref:typename:void
TxRestartStart	swisstm/src/common/profiling/tx_duration.h	/^inline void wlpdstm::TxDurationProfiling<STATS, STATS_TYPE>::TxRestartStart() {$/;"	f	class:wlpdstm::TxDurationProfiling	typeref:typename:void
TxRestartStart	swisstm/src/dynamic/profiling/adaptive_dynamic.h	/^inline void wlpdstm::AdaptiveDynamicProfiling<STATS, STATS_TYPE>::TxRestartStart() {$/;"	f	class:wlpdstm::AdaptiveDynamicProfiling	typeref:typename:void
TxSampling	swisstm/src/common/sampling.h	/^			TxSampling() : counter(0) { }$/;"	f	class:wlpdstm::TxSampling
TxSampling	swisstm/src/common/sampling.h	/^	class TxSampling {$/;"	c	namespace:wlpdstm
TxSignals	swisstm/src/stm/transaction_mixinv.h	/^		enum TxSignals {$/;"	g	class:wlpdstm::TxMixinv
TxStart	swisstm/src/common/sampling.h	/^			void TxStart() {$/;"	f	class:wlpdstm::NoTxSampling	typeref:typename:void
TxStart	swisstm/src/common/sampling.h	/^			void TxStart() {$/;"	f	class:wlpdstm::RandomTxSampling	typeref:typename:void
TxStart	swisstm/src/common/sampling.h	/^			void TxStart() {$/;"	f	class:wlpdstm::TxSampling	typeref:typename:void
TxStart	swisstm/src/common/stats_base.h	/^		inline void TxStart(int lex_tx_id) {$/;"	f	struct:wlpdstm::ThreadStatsBase	typeref:typename:void
TxStart	swisstm/src/dynamic/memory/memory_impl.h	/^inline void wlpdstm::MemoryManager::TxStart() {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
TxStart	swisstm/src/dynamic/memory/memory_impl_priv.h	/^inline void wlpdstm::MemoryManager::TxStart() {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
TxStart	swisstm/src/dynamic/perf_cnt.h	/^            void TxStart() {$/;"	f	class:wlpdstm::PerfCnt	typeref:typename:void
TxStart	swisstm/src/dynamic/transaction.h	/^inline void wlpdstm::TransactionDynamic::TxStart(int lex_tx_id) {$/;"	f	class:wlpdstm::TransactionDynamic	typeref:typename:void
TxStart	swisstm/src/epochstm/cm.h	/^			void TxStart() {$/;"	f	class:wlpdstm::Timid	typeref:typename:void
TxStart	swisstm/src/epochstm/cm.h	/^		void TxStart() {$/;"	f	class:wlpdstm::Greedy	typeref:typename:void
TxStart	swisstm/src/epochstm/memory/memory_epoch.h	/^inline void wlpdstm::MemoryManager::TxStart(Epoch epoch) {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
TxStart	swisstm/src/epochstm/memory/memory_leak.h	/^inline void wlpdstm::MemoryManager::TxStart(Epoch epoch) {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
TxStart	swisstm/src/epochstm/memory/memory_txend.h	/^inline void wlpdstm::MemoryManager::TxStart() {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
TxStart	swisstm/src/epochstm/transaction.h	/^inline void wlpdstm::TransactionEpoch::TxStart(int lex_tx_id) {$/;"	f	class:wlpdstm::TransactionEpoch	typeref:typename:void
TxStart	swisstm/src/p-tlrw/cm.h	/^			void TxStart() {$/;"	f	class:wlpdstm::Timid	typeref:typename:void
TxStart	swisstm/src/p-tlrw/cm.h	/^		void TxStart() {$/;"	f	class:wlpdstm::Greedy	typeref:typename:void
TxStart	swisstm/src/p-tlrw/memory/memory_txend.h	/^inline void wlpdstm::MemoryManager::TxStart() {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
TxStart	swisstm/src/p-tlrw/transaction.h	/^inline void wlpdstm::TransactionTlrw::TxStart(int lex_tx_id) {$/;"	f	class:wlpdstm::TransactionTlrw	typeref:typename:void
TxStart	swisstm/src/rw/cm.h	/^			void TxStart() {$/;"	f	class:wlpdstm::Timid	typeref:typename:void
TxStart	swisstm/src/rw/cm.h	/^		void TxStart() {$/;"	f	class:wlpdstm::Greedy	typeref:typename:void
TxStart	swisstm/src/rw/memory/memory_txend.h	/^inline void wlpdstm::MemoryManager::TxStart() {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
TxStart	swisstm/src/rw/transaction.h	/^inline void wlpdstm::TransactionRw::TxStart(int lex_tx_id) {$/;"	f	class:wlpdstm::TransactionRw	typeref:typename:void
TxStart	swisstm/src/stm/memory/memory_impl.h	/^inline void wlpdstm::MemoryManager::TxStart() {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
TxStart	swisstm/src/stm/memory/memory_impl_priv.h	/^inline void wlpdstm::MemoryManager::TxStart() {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
TxStart	swisstm/src/stm/transaction_mixinv.h	/^inline void wlpdstm::TxMixinv::TxStart(int lex_tx_id) {$/;"	f	class:wlpdstm::TxMixinv	typeref:typename:void
TxStart	swisstm/src/stm_api/profiled_transaction.h	/^inline void wlpdstm::ProfiledTransaction<TX, STATS_TYPE>::TxStart(int lex_tx_id) {$/;"	f	class:wlpdstm::ProfiledTransaction	typeref:typename:void
TxStart	swisstm/src/stm_api/transaction.h	/^		static void TxStart(int lexical_tx_id = NO_LEXICAL_TX) {$/;"	f	class:wlpdstm::CurrentTransaction	typeref:typename:void
TxStart	swisstm/src/tlrw/cm.h	/^			void TxStart() {$/;"	f	class:wlpdstm::Timid	typeref:typename:void
TxStart	swisstm/src/tlrw/cm.h	/^		void TxStart() {$/;"	f	class:wlpdstm::Greedy	typeref:typename:void
TxStart	swisstm/src/tlrw/memory/memory_txend.h	/^inline void wlpdstm::MemoryManager::TxStart() {$/;"	f	class:wlpdstm::MemoryManager	typeref:typename:void
TxStart	swisstm/src/tlrw/transaction.h	/^inline void wlpdstm::TransactionTlrw::TxStart(int lex_tx_id) {$/;"	f	class:wlpdstm::TransactionTlrw	typeref:typename:void
TxStartEnd	swisstm/src/common/profiling/adaptive.h	/^inline void wlpdstm::AdaptiveProfiling<STATS, STATS_TYPE>::TxStartEnd() {$/;"	f	class:wlpdstm::AdaptiveProfiling	typeref:typename:void
TxStartEnd	swisstm/src/common/profiling/base.h	/^			void TxStartEnd() {$/;"	f	class:wlpdstm::BaseProfiling	typeref:typename:void
TxStartEnd	swisstm/src/common/profiling/non_tx_duration.h	/^inline void wlpdstm::NonTxDurationProfiling<STATS, STATS_TYPE>::TxStartEnd() {$/;"	f	class:wlpdstm::NonTxDurationProfiling	typeref:typename:void
TxStartEnd	swisstm/src/common/profiling/non_tx_duration_pcnt_simple.h	/^inline void wlpdstm::NonTxDurationPcntProfilingSimple<STATS, STATS_TYPE>::TxStartEnd() {$/;"	f	class:wlpdstm::NonTxDurationPcntProfilingSimple	typeref:typename:void
TxStartEnd	swisstm/src/common/profiling/non_tx_duration_simple.h	/^inline void wlpdstm::NonTxDurationProfilingSimple<STATS, STATS_TYPE>::TxStartEnd() {$/;"	f	class:wlpdstm::NonTxDurationProfilingSimple	typeref:typename:void
TxStartEnd	swisstm/src/common/profiling/simple.h	/^inline void wlpdstm::SimpleProfiling<STATS, STATS_TYPE>::TxStartEnd() {$/;"	f	class:wlpdstm::SimpleProfiling	typeref:typename:void
TxStartEnd	swisstm/src/common/profiling/tx_duration.h	/^inline void wlpdstm::TxDurationProfiling<STATS, STATS_TYPE>::TxStartEnd() {$/;"	f	class:wlpdstm::TxDurationProfiling	typeref:typename:void
TxStartEnd	swisstm/src/dynamic/profiling/adaptive_dynamic.h	/^inline void wlpdstm::AdaptiveDynamicProfiling<STATS, STATS_TYPE>::TxStartEnd() {$/;"	f	class:wlpdstm::AdaptiveDynamicProfiling	typeref:typename:void
TxStartInline	swisstm/src/dynamic/transaction.h	/^inline void wlpdstm::TransactionDynamic::TxStartInline(int lex_tx_id) {$/;"	f	class:wlpdstm::TransactionDynamic	typeref:typename:void
TxStartSetFunPtr	swisstm/src/dynamic/eager/eager.cc	/^void wlpdstm::TxEager::TxStartSetFunPtr(TransactionDynamic *desc) {$/;"	f	class:wlpdstm::TxEager	typeref:typename:void
TxStartSetFunPtr	swisstm/src/dynamic/lazy/lazy.cc	/^void wlpdstm::TxLazy::TxStartSetFunPtr(TransactionDynamic *desc) {$/;"	f	class:wlpdstm::TxLazy	typeref:typename:void
TxStartSetFunPtr	swisstm/src/dynamic/mixed/mixed.cc	/^void wlpdstm::TxMixed::TxStartSetFunPtr(TransactionDynamic *desc) {$/;"	f	class:wlpdstm::TxMixed	typeref:typename:void
TxStartSetFunPtrProfiled	swisstm/src/dynamic/eager/eager.cc	/^void wlpdstm::TxEager::TxStartSetFunPtrProfiled(TransactionDynamic *desc) {$/;"	f	class:wlpdstm::TxEager	typeref:typename:void
TxStartSetFunPtrProfiled	swisstm/src/dynamic/lazy/lazy.cc	/^void wlpdstm::TxLazy::TxStartSetFunPtrProfiled(TransactionDynamic *desc) {$/;"	f	class:wlpdstm::TxLazy	typeref:typename:void
TxStartSetFunPtrProfiled	swisstm/src/dynamic/mixed/mixed.cc	/^void wlpdstm::TxMixed::TxStartSetFunPtrProfiled(TransactionDynamic *desc) {$/;"	f	class:wlpdstm::TxMixed	typeref:typename:void
TxStartStart	swisstm/src/common/profiling/adaptive.h	/^inline void wlpdstm::AdaptiveProfiling<STATS, STATS_TYPE>::TxStartStart(int lex_tx_id) {$/;"	f	class:wlpdstm::AdaptiveProfiling	typeref:typename:void
TxStartStart	swisstm/src/common/profiling/base.h	/^			void TxStartStart(int lex_tx_id) {$/;"	f	class:wlpdstm::BaseProfiling	typeref:typename:void
TxStartStart	swisstm/src/common/profiling/non_tx_duration.h	/^inline void wlpdstm::NonTxDurationProfiling<STATS, STATS_TYPE>::TxStartStart(int lex_tx_id) {$/;"	f	class:wlpdstm::NonTxDurationProfiling	typeref:typename:void
TxStartStart	swisstm/src/common/profiling/non_tx_duration_pcnt_simple.h	/^inline void wlpdstm::NonTxDurationPcntProfilingSimple<STATS, STATS_TYPE>::TxStartStart(int lex_t/;"	f	class:wlpdstm::NonTxDurationPcntProfilingSimple	typeref:typename:void
TxStartStart	swisstm/src/common/profiling/non_tx_duration_simple.h	/^inline void wlpdstm::NonTxDurationProfilingSimple<STATS, STATS_TYPE>::TxStartStart(int lex_tx_id/;"	f	class:wlpdstm::NonTxDurationProfilingSimple	typeref:typename:void
TxStartStart	swisstm/src/common/profiling/simple.h	/^inline void wlpdstm::SimpleProfiling<STATS, STATS_TYPE>::TxStartStart(int lex_tx_id) {$/;"	f	class:wlpdstm::SimpleProfiling	typeref:typename:void
TxStartStart	swisstm/src/common/profiling/tx_duration.h	/^inline void wlpdstm::TxDurationProfiling<STATS, STATS_TYPE>::TxStartStart(int lex_tx_id) {$/;"	f	class:wlpdstm::TxDurationProfiling	typeref:typename:void
TxStartStart	swisstm/src/dynamic/profiling/adaptive_dynamic.h	/^inline void wlpdstm::AdaptiveDynamicProfiling<STATS, STATS_TYPE>::TxStartStart(int lex_tx_id) {$/;"	f	class:wlpdstm::AdaptiveDynamicProfiling	typeref:typename:void
TxStartStartForEstimatingCosts	swisstm/src/common/profiling/adaptive.h	/^inline void wlpdstm::AdaptiveProfiling<STATS, STATS_TYPE>::TxStartStartForEstimatingCosts() {$/;"	f	class:wlpdstm::AdaptiveProfiling	typeref:typename:void
TxStartStartForEstimatingCosts	swisstm/src/common/profiling/non_tx_duration.h	/^inline void wlpdstm::NonTxDurationProfiling<STATS, STATS_TYPE>::TxStartStartForEstimatingCosts()/;"	f	class:wlpdstm::NonTxDurationProfiling	typeref:typename:void
TxStartStartForEstimatingCosts	swisstm/src/common/profiling/tx_duration.h	/^inline void wlpdstm::TxDurationProfiling<STATS, STATS_TYPE>::TxStartStartForEstimatingCosts() {$/;"	f	class:wlpdstm::TxDurationProfiling	typeref:typename:void
TxStartStartForEstimatingCosts	swisstm/src/dynamic/profiling/adaptive_dynamic.h	/^inline void wlpdstm::AdaptiveDynamicProfiling<STATS, STATS_TYPE>::TxStartStartForEstimatingCosts/;"	f	class:wlpdstm::AdaptiveDynamicProfiling	typeref:typename:void
TxStatus	swisstm/src/dynamic/transaction.h	/^	enum TxStatus {$/;"	g	namespace:wlpdstm
TxStatus	swisstm/src/stm/transaction_mixinv.h	/^		enum TxStatus {$/;"	g	class:wlpdstm::TxMixinv
TxTryCommit	swisstm/src/dynamic/eager/eager_impl_inline.h	/^inline wlpdstm::TxEager::TryCommitResult wlpdstm::TxEager::TxTryCommit(TransactionDynamic *desc)/;"	f	class:wlpdstm::TxEager	typeref:typename:wlpdstm::TxEager::TryCommitResult
TxTryCommit	swisstm/src/dynamic/lazy/lazy_impl_inline.h	/^inline wlpdstm::TxLazy::TryCommitResult wlpdstm::TxLazy::TxTryCommit(TransactionDynamic *desc) {$/;"	f	class:wlpdstm::TxLazy	typeref:typename:wlpdstm::TxLazy::TryCommitResult
TxTryCommit	swisstm/src/dynamic/mixed/mixed_inline_fun.h	/^inline wlpdstm::TxMixed::TryCommitResult wlpdstm::TxMixed::TxTryCommit(TransactionDynamic *desc)/;"	f	class:wlpdstm::TxMixed	typeref:typename:wlpdstm::TxMixed::TryCommitResult
TxTryCommit	swisstm/src/stm/transaction_mixinv.h	/^inline wlpdstm::TxMixinv::TryCommitResult wlpdstm::TxMixinv::TxTryCommit() {$/;"	f	class:wlpdstm::TxMixinv	typeref:typename:wlpdstm::TxMixinv::TryCommitResult
TxTryCommitReadOnly	swisstm/src/dynamic/eager/eager_impl_inline.h	/^inline wlpdstm::TxEager::TryCommitResult wlpdstm::TxEager::TxTryCommitReadOnly(TransactionDynami/;"	f	class:wlpdstm::TxEager	typeref:typename:wlpdstm::TxEager::TryCommitResult
TxTryCommitReadOnly	swisstm/src/dynamic/lazy/lazy_impl_inline.h	/^inline wlpdstm::TxLazy::TryCommitResult wlpdstm::TxLazy::TxTryCommitReadOnly(TransactionDynamic /;"	f	class:wlpdstm::TxLazy	typeref:typename:wlpdstm::TxLazy::TryCommitResult
TxTryCommitReadOnly	swisstm/src/dynamic/mixed/mixed_inline_fun.h	/^inline wlpdstm::TxMixed::TryCommitResult wlpdstm::TxMixed::TxTryCommitReadOnly(TransactionDynami/;"	f	class:wlpdstm::TxMixed	typeref:typename:wlpdstm::TxMixed::TryCommitResult
TxTryCommitStatic	swisstm/src/dynamic/eager/eager_static.h	/^inline wlpdstm::TxEager::TryCommitResult wlpdstm::TxEager::TxTryCommitStatic(TransactionDynamic /;"	f	class:wlpdstm::TxEager	typeref:typename:wlpdstm::TxEager::TryCommitResult
TxTryCommitStatic	swisstm/src/dynamic/lazy/lazy_impl_inline.h	/^inline wlpdstm::TxLazy::TryCommitResult wlpdstm::TxLazy::TxTryCommitStatic(TransactionDynamic *d/;"	f	class:wlpdstm::TxLazy	typeref:typename:wlpdstm::TxLazy::TryCommitResult
TxTryCommitStatic	swisstm/src/dynamic/mixed/mixed_inline.h	/^inline wlpdstm::TxMixed::TryCommitResult wlpdstm::TxMixed::TxTryCommitStatic(TransactionDynamic /;"	f	class:wlpdstm::TxMixed	typeref:typename:wlpdstm::TxMixed::TryCommitResult
Type	swisstm/src/common/stats_base.h	/^		typedef typename STATS_TYPES::Type Type;$/;"	t	class:wlpdstm::StatsBase	typeref:typename:STATS_TYPES::Type
Type	swisstm/src/common/stats_base.h	/^		typedef typename STATS_TYPES::Type Type;$/;"	t	struct:wlpdstm::ThreadStatsBase	typeref:typename:STATS_TYPES::Type
Type	swisstm/src/dynamic/stats.h	/^		enum Type {$/;"	g	class:wlpdstm::TxMixinvStats
Type	swisstm/src/epochstm/stats.h	/^		enum Type {$/;"	g	class:wlpdstm::EpochSTMStats
Type	swisstm/src/p-tlrw/stats.h	/^		enum Type {$/;"	g	class:wlpdstm::TlrwStats
Type	swisstm/src/rw/stats.h	/^		enum Type {$/;"	g	class:wlpdstm::RwStats
Type	swisstm/src/stm/stats.h	/^		enum Type {$/;"	g	class:wlpdstm::TxMixinvStats
Type	swisstm/src/tlrw/stats.h	/^		enum Type {$/;"	g	class:wlpdstm::TlrwStats
UNALIGNED_ACCESSES	swisstm/Makefile.in	/^    UNALIGNED_ACCESSES = no$/;"	m
UNALIGNED_ACCESSES	swisstm/Makefile.in	/^    UNALIGNED_ACCESSES = yes$/;"	m
UNLOCK	rlu.c	/^#define UNLOCK(/;"	d	file:
UPDATE_LOCAL_LAST_OBSERVED_TS_FREQUENCY	swisstm/src/dynamic/transaction.h	/^#define UPDATE_LOCAL_LAST_OBSERVED_TS_FREQUENCY /;"	d
UPDATE_LOCAL_LAST_OBSERVED_TS_FREQUENCY	swisstm/src/stm/transaction_mixinv.h	/^#define UPDATE_LOCAL_LAST_OBSERVED_TS_FREQUENCY /;"	d
UPDATE_MINIMUM_TS	swisstm/src/dynamic/stats.h	/^			UPDATE_MINIMUM_TS,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
UPDATE_MINIMUM_TS	swisstm/src/stm/stats.h	/^			UPDATE_MINIMUM_TS,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
URCU_FREE_PTRS_SIZE	tree_bonsai.c	/^#define URCU_FREE_PTRS_SIZE /;"	d	file:
URCU_MAX_FREE_PTRS	list_rcu.c	/^#define URCU_MAX_FREE_PTRS /;"	d	file:
URCU_MAX_FREE_PTRS	tree_bonsai.c	/^#define URCU_MAX_FREE_PTRS /;"	d	file:
URCU_MAX_FREE_PTRS	tree_prcu.c	/^#define URCU_MAX_FREE_PTRS /;"	d	file:
URCU_MAX_FREE_PTRS	tree_rcu.c	/^#define URCU_MAX_FREE_PTRS /;"	d	file:
USER_ABORT	swisstm/src/dynamic/stats.h	/^			USER_ABORT,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
USE_HASHTABLE_EPOCH_MARKERS	swisstm/src/dynamic/lazy/hashtable.h	/^#define USE_HASHTABLE_EPOCH_MARKERS$/;"	d
USE_HASHTABLE_MARKERS	swisstm/src/dynamic/lazy/hashtable.h	/^#define USE_HASHTABLE_MARKERS$/;"	d
UnlockReadSet	swisstm/src/p-tlrw/transaction.h	/^inline void wlpdstm::TransactionTlrw::UnlockReadSet(ReadSet *rd_set, TxCounter cleanup_cnt) {$/;"	f	class:wlpdstm::TransactionTlrw	typeref:typename:void
UnlockReadSet	swisstm/src/rw/transaction.h	/^inline void wlpdstm::TransactionRw::UnlockReadSet() {$/;"	f	class:wlpdstm::TransactionRw	typeref:typename:void
UnlockReadSet	swisstm/src/tlrw/transaction.h	/^inline void wlpdstm::TransactionTlrw::UnlockReadSet() {$/;"	f	class:wlpdstm::TransactionTlrw	typeref:typename:void
UnlockWriteSet	swisstm/src/dynamic/lazy/lazy_impl_inline.h	/^inline void wlpdstm::TxLazy::UnlockWriteSet(TransactionDynamic *desc, WriteLog::iterator first_n/;"	f	class:wlpdstm::TxLazy	typeref:typename:void
UnlockWriteSet	swisstm/src/p-tlrw/transaction.h	/^inline void wlpdstm::TransactionTlrw::UnlockWriteSet(WriteSet *wr_set, TxCounter cleanup_cnt) {$/;"	f	class:wlpdstm::TransactionTlrw	typeref:typename:void
UnlockWriteSet	swisstm/src/rw/transaction.h	/^inline void wlpdstm::TransactionRw::UnlockWriteSet() {$/;"	f	class:wlpdstm::TransactionRw	typeref:typename:void
UnlockWriteSet	swisstm/src/tlrw/transaction.h	/^inline void wlpdstm::TransactionTlrw::UnlockWriteSet() {$/;"	f	class:wlpdstm::TransactionTlrw	typeref:typename:void
UpdateLastObservedTs	swisstm/src/dynamic/transaction.h	/^inline void wlpdstm::TransactionDynamic::UpdateLastObservedTs(Word ts) {$/;"	f	class:wlpdstm::TransactionDynamic	typeref:typename:void
UpdateLastObservedTs	swisstm/src/stm/transaction_mixinv.h	/^inline void wlpdstm::TxMixinv::UpdateLastObservedTs(Word ts) {$/;"	f	class:wlpdstm::TxMixinv	typeref:typename:void
UpdateMinimumObservedTs	swisstm/src/dynamic/transaction.h	/^inline Word wlpdstm::TransactionDynamic::UpdateMinimumObservedTs() {$/;"	f	class:wlpdstm::TransactionDynamic	typeref:typename:Word
UpdateMinimumObservedTs	swisstm/src/stm/transaction_mixinv.h	/^inline Word wlpdstm::TxMixinv::UpdateMinimumObservedTs() {$/;"	f	class:wlpdstm::TxMixinv	typeref:typename:Word
VERSION_LOCK_TABLE_SIZE	swisstm/src/dynamic/transaction.h	/^#define VERSION_LOCK_TABLE_SIZE /;"	d
VERSION_LOCK_TABLE_SIZE	swisstm/src/stm/transaction_mixinv.h	/^#define VERSION_LOCK_TABLE_SIZE /;"	d
VLIST_ENTRIES_PER_TASK	list_move_vlist.c	/^#define VLIST_ENTRIES_PER_TASK /;"	d	file:
VLIST_ENTRIES_PER_TASK	list_vlist.c	/^#define VLIST_ENTRIES_PER_TASK /;"	d	file:
VTREE_ENTRIES_PER_TASK	tree_vrbtree.c	/^#define VTREE_ENTRIES_PER_TASK /;"	d	file:
VTREE_ENTRIES_PER_TASK	tree_vtree.c	/^#define VTREE_ENTRIES_PER_TASK /;"	d	file:
Validate	swisstm/src/dynamic/transaction.h	/^inline bool wlpdstm::TransactionDynamic::Validate() {$/;"	f	class:wlpdstm::TransactionDynamic	typeref:typename:bool
Validate	swisstm/src/stm/transaction_mixinv.h	/^inline bool wlpdstm::TxMixinv::Validate() {$/;"	f	class:wlpdstm::TxMixinv	typeref:typename:bool
ValidateWithReadLockVersions	swisstm/src/dynamic/transaction.h	/^inline bool wlpdstm::TransactionDynamic::ValidateWithReadLockVersions() {$/;"	f	class:wlpdstm::TransactionDynamic	typeref:typename:bool
ValidateWithReadLocks	swisstm/src/dynamic/transaction.h	/^inline bool wlpdstm::TransactionDynamic::ValidateWithReadLocks() {$/;"	f	class:wlpdstm::TransactionDynamic	typeref:typename:bool
ValidateWithReadLocks	swisstm/src/stm/transaction_mixinv.h	/^inline bool wlpdstm::TxMixinv::ValidateWithReadLocks() {$/;"	f	class:wlpdstm::TxMixinv	typeref:typename:bool
VersionLock	swisstm/src/dynamic/version_lock.h	/^	typedef Word VersionLock;$/;"	t	namespace:wlpdstm	typeref:typename:Word
VersionLock	swisstm/src/stm/version_lock.h	/^	typedef Word VersionLock;$/;"	t	namespace:wlpdstm	typeref:typename:Word
WAITING_POLICY	swisstm/Makefile.in	/^	WAITING_POLICY = live$/;"	m
WAITING_POLICY_CPPFLAGS_live	swisstm/Makefile.in	/^WAITING_POLICY_CPPFLAGS_live =$/;"	m
WAITING_POLICY_CPPFLAGS_preemptive	swisstm/Makefile.in	/^WAITING_POLICY_CPPFLAGS_preemptive = -D USE_PREEMPTIVE_WAITING$/;"	m
WAIT_CYCLES_MULTIPLICATOR	swisstm/src/dynamic/transaction.h	/^	static const unsigned WAIT_CYCLES_MULTIPLICATOR = 8000;$/;"	v	namespace:wlpdstm	typeref:typename:const unsigned
WAIT_CYCLES_MULTIPLICATOR	swisstm/src/epochstm/transaction.h	/^			static const unsigned WAIT_CYCLES_MULTIPLICATOR = 8000;$/;"	m	class:wlpdstm::TransactionEpoch	typeref:typename:const unsigned
WAIT_CYCLES_MULTIPLICATOR	swisstm/src/p-tlrw/transaction.h	/^		static const unsigned WAIT_CYCLES_MULTIPLICATOR = 8000;$/;"	m	class:wlpdstm::TransactionTlrw	typeref:typename:const unsigned
WAIT_CYCLES_MULTIPLICATOR	swisstm/src/rw/transaction.h	/^		static const unsigned WAIT_CYCLES_MULTIPLICATOR = 8000;$/;"	m	class:wlpdstm::TransactionRw	typeref:typename:const unsigned
WAIT_CYCLES_MULTIPLICATOR	swisstm/src/stm/transaction_mixinv.h	/^		static const unsigned WAIT_CYCLES_MULTIPLICATOR = 8000;$/;"	m	class:wlpdstm::TxMixinv	typeref:typename:const unsigned
WAIT_CYCLES_MULTIPLICATOR	swisstm/src/tlrw/transaction.h	/^		static const unsigned WAIT_CYCLES_MULTIPLICATOR = 8000;$/;"	m	class:wlpdstm::TransactionTlrw	typeref:typename:const unsigned
WAIT_ON_ABORT	swisstm/Makefile.in	/^	WAIT_ON_ABORT = yes$/;"	m
WAIT_ON_ABORT	swisstm/src/dynamic/stats.h	/^			WAIT_ON_ABORT,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
WAIT_ON_ABORT	swisstm/src/epochstm/stats.h	/^			WAIT_ON_ABORT,$/;"	e	enum:wlpdstm::EpochSTMStats::Type
WAIT_ON_ABORT	swisstm/src/p-tlrw/stats.h	/^			WAIT_ON_ABORT,$/;"	e	enum:wlpdstm::TlrwStats::Type
WAIT_ON_ABORT	swisstm/src/rw/stats.h	/^			WAIT_ON_ABORT,$/;"	e	enum:wlpdstm::RwStats::Type
WAIT_ON_ABORT	swisstm/src/stm/stats.h	/^			WAIT_ON_ABORT,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
WAIT_ON_ABORT	swisstm/src/tlrw/stats.h	/^			WAIT_ON_ABORT,$/;"	e	enum:wlpdstm::TlrwStats::Type
WAIT_ON_ABORT_CPPFLAGS_no	swisstm/Makefile.in	/^WAIT_ON_ABORT_CPPFLAGS_no =$/;"	m
WAIT_ON_ABORT_CPPFLAGS_yes	swisstm/Makefile.in	/^WAIT_ON_ABORT_CPPFLAGS_yes = -D WAIT_ON_SUCC_ABORTS$/;"	m
WEIGHT	tree_bonsai.c	/^#define WEIGHT /;"	d	file:
WLPDSTM_ALLOC_H_	swisstm/src/common/alloc.h	/^#define WLPDSTM_ALLOC_H_$/;"	d
WLPDSTM_ARCH_H_	swisstm/src/common/arch.h	/^#define WLPDSTM_ARCH_H_$/;"	d
WLPDSTM_ARRAY_H_	swisstm/src/common/log.h	/^#define WLPDSTM_ARRAY_H_$/;"	d
WLPDSTM_BARRIER_H_	swisstm/src/mubench/barrier.h	/^#define WLPDSTM_BARRIER_H_$/;"	d
WLPDSTM_CACHE_ALIGNED_ALLOC_H_	swisstm/src/common/cache_aligned_alloc.h	/^#define WLPDSTM_CACHE_ALIGNED_ALLOC_H_$/;"	d
WLPDSTM_CM_H_	swisstm/src/epochstm/cm.h	/^#define WLPDSTM_CM_H_$/;"	d
WLPDSTM_CM_H_	swisstm/src/p-tlrw/cm.h	/^#define WLPDSTM_CM_H_$/;"	d
WLPDSTM_CM_H_	swisstm/src/rw/cm.h	/^#define WLPDSTM_CM_H_$/;"	d
WLPDSTM_CM_H_	swisstm/src/tlrw/cm.h	/^#define WLPDSTM_CM_H_$/;"	d
WLPDSTM_CONFIGURATION_H_	swisstm/src/common/configuration.h	/^#define WLPDSTM_CONFIGURATION_H_$/;"	d
WLPDSTM_CONSTANTS_H_	swisstm/src/common/constants.h	/^#define WLPDSTM_CONSTANTS_H_$/;"	d
WLPDSTM_CURRENT_TRANSACTION_H_	swisstm/src/stm_api/transaction.h	/^#define WLPDSTM_CURRENT_TRANSACTION_H_$/;"	d
WLPDSTM_DYNAMIC_API_LINKAGE_H_	swisstm/src/dynamic/api_linkage.h	/^#define WLPDSTM_DYNAMIC_API_LINKAGE_H_$/;"	d
WLPDSTM_DYNAMIC_EAGER_H_	swisstm/src/dynamic/eager/eager.h	/^#define WLPDSTM_DYNAMIC_EAGER_H_$/;"	d
WLPDSTM_DYNAMIC_EAGER_IMPL_INLINE_H_	swisstm/src/dynamic/eager/eager_impl_inline.h	/^#define WLPDSTM_DYNAMIC_EAGER_IMPL_INLINE_H_$/;"	d
WLPDSTM_DYNAMIC_EAGER_STATIC_H_	swisstm/src/dynamic/eager/eager_static.h	/^#define WLPDSTM_DYNAMIC_EAGER_STATIC_H_$/;"	d
WLPDSTM_DYNAMIC_LAZY_HASHTABLE_H_	swisstm/src/dynamic/lazy/hashtable.h	/^#define WLPDSTM_DYNAMIC_LAZY_HASHTABLE_H_$/;"	d
WLPDSTM_DYNAMIC_LAZY_H_	swisstm/src/dynamic/lazy/lazy.h	/^#define WLPDSTM_DYNAMIC_LAZY_H_$/;"	d
WLPDSTM_DYNAMIC_LAZY_IMPL_INLINE_H_	swisstm/src/dynamic/lazy/lazy_impl_inline.h	/^#define WLPDSTM_DYNAMIC_LAZY_IMPL_INLINE_H_$/;"	d
WLPDSTM_DYNAMIC_LAZY_STATIC_H_	swisstm/src/dynamic/lazy/lazy_static.h	/^#define WLPDSTM_DYNAMIC_LAZY_STATIC_H_$/;"	d
WLPDSTM_DYNAMIC_LOG_H_	swisstm/src/dynamic/log.h	/^#define WLPDSTM_DYNAMIC_LOG_H_$/;"	d
WLPDSTM_DYNAMIC_MIXED_H_	swisstm/src/dynamic/mixed/mixed.h	/^#define WLPDSTM_DYNAMIC_MIXED_H_$/;"	d
WLPDSTM_DYNAMIC_MIXED_INLINED_FUN_H_	swisstm/src/dynamic/mixed/mixed_inline_fun.h	/^#define WLPDSTM_DYNAMIC_MIXED_INLINED_FUN_H_$/;"	d
WLPDSTM_DYNAMIC_MIXED_INLINE_H_	swisstm/src/dynamic/mixed/mixed_inline.h	/^#define WLPDSTM_DYNAMIC_MIXED_INLINE_H_$/;"	d
WLPDSTM_DYNAMIC_PROFILING_ADAPTIVE_DYNAMICH_	swisstm/src/dynamic/profiling/adaptive_dynamic.h	/^#define WLPDSTM_DYNAMIC_PROFILING_ADAPTIVE_DYNAMICH_$/;"	d
WLPDSTM_ENERGY_H_	swisstm/src/common/energy.h	/^#define WLPDSTM_ENERGY_H_$/;"	d
WLPDSTM_EPOCHSTM_CONSTANTS_H_	swisstm/src/epochstm/constants.h	/^#define WLPDSTM_EPOCHSTM_CONSTANTS_H_$/;"	d
WLPDSTM_EPOCHSTM_MEMORY_H_	swisstm/src/epochstm/memory.h	/^#define WLPDSTM_EPOCHSTM_MEMORY_H_$/;"	d
WLPDSTM_EPOCHSTM_TRANSACTION_H_	swisstm/src/epochstm/transaction.h	/^#define WLPDSTM_EPOCHSTM_TRANSACTION_H_$/;"	d
WLPDSTM_ICC_JMP_H_	swisstm/src/intel/jmp.h	/^#define WLPDSTM_ICC_JMP_H_$/;"	d
WLPDSTM_ICC_MEMORY_H_	swisstm/src/intel/icc_memory.h	/^#define WLPDSTM_ICC_MEMORY_H_$/;"	d
WLPDSTM_JMP_H_	swisstm/src/common/jmp.h	/^#define WLPDSTM_JMP_H_$/;"	d
WLPDSTM_LARGE_LOCK_SET_H_	swisstm/src/stm/large_lock_set.h	/^#define WLPDSTM_LARGE_LOCK_SET_H_$/;"	d
WLPDSTM_LOCK_H_	swisstm/src/common/lock.h	/^#define WLPDSTM_LOCK_H_$/;"	d
WLPDSTM_MALLOC_H_	swisstm/src/stm_api/wlpdstm_malloc.h	/^#define WLPDSTM_MALLOC_H_$/;"	d
WLPDSTM_MEMBAR_H_	swisstm/src/common/membar.h	/^#define WLPDSTM_MEMBAR_H_$/;"	d
WLPDSTM_MEMORY_EPOCH_H_	swisstm/src/epochstm/memory/memory_epoch.h	/^#define WLPDSTM_MEMORY_EPOCH_H_$/;"	d
WLPDSTM_MEMORY_H_	swisstm/src/dynamic/memory.h	/^#define WLPDSTM_MEMORY_H_$/;"	d
WLPDSTM_MEMORY_H_	swisstm/src/stm/memory.h	/^#define WLPDSTM_MEMORY_H_$/;"	d
WLPDSTM_MEMORY_IMPL_H_	swisstm/src/dynamic/memory/memory_impl.h	/^#define WLPDSTM_MEMORY_IMPL_H_$/;"	d
WLPDSTM_MEMORY_IMPL_H_	swisstm/src/stm/memory/memory_impl.h	/^#define WLPDSTM_MEMORY_IMPL_H_$/;"	d
WLPDSTM_MEMORY_LEAK_H_	swisstm/src/epochstm/memory/memory_leak.h	/^#define WLPDSTM_MEMORY_LEAK_H_$/;"	d
WLPDSTM_MEMORY_PRIV_H_	swisstm/src/dynamic/memory/memory_impl_priv.h	/^#define WLPDSTM_MEMORY_PRIV_H_$/;"	d
WLPDSTM_MEMORY_PRIV_H_	swisstm/src/stm/memory/memory_impl_priv.h	/^#define WLPDSTM_MEMORY_PRIV_H_$/;"	d
WLPDSTM_MEMORY_TXEND_H_	swisstm/src/epochstm/memory/memory_txend.h	/^#define WLPDSTM_MEMORY_TXEND_H_$/;"	d
WLPDSTM_MEMORY_TXEND_H_	swisstm/src/p-tlrw/memory/memory_txend.h	/^#define WLPDSTM_MEMORY_TXEND_H_$/;"	d
WLPDSTM_MEMORY_TXEND_H_	swisstm/src/rw/memory/memory_txend.h	/^#define WLPDSTM_MEMORY_TXEND_H_$/;"	d
WLPDSTM_MEMORY_TXEND_H_	swisstm/src/tlrw/memory/memory_txend.h	/^#define WLPDSTM_MEMORY_TXEND_H_$/;"	d
WLPDSTM_PADDED_H_	swisstm/src/common/padded.h	/^#define WLPDSTM_PADDED_H_$/;"	d
WLPDSTM_PERF_CNT_H_	swisstm/src/dynamic/perf_cnt.h	/^#define WLPDSTM_PERF_CNT_H_$/;"	d
WLPDSTM_PERF_CNT_H_	swisstm/src/stm/perfcnt/perf_cnt.h	/^#define WLPDSTM_PERF_CNT_H_$/;"	d
WLPDSTM_PERF_CNT_PAPI_H_	swisstm/src/common/perfcnt/perf_cnt_papi.h	/^#define WLPDSTM_PERF_CNT_PAPI_H_$/;"	d
WLPDSTM_PERF_CNT_SOLARIS_H_	swisstm/src/common/perfcnt/perf_cnt_solaris.h	/^#define WLPDSTM_PERF_CNT_SOLARIS_H_$/;"	d
WLPDSTM_PRINT_UTILS_H_	swisstm/src/common/print_utils.h	/^#define WLPDSTM_PRINT_UTILS_H_$/;"	d
WLPDSTM_PRIVATIZATION_TREE_H_	swisstm/src/stm/privatization_tree.h	/^#define WLPDSTM_PRIVATIZATION_TREE_H_$/;"	d
WLPDSTM_PROFILED_TRANSACTION_H_	swisstm/src/stm_api/profiled_transaction.h	/^#define WLPDSTM_PROFILED_TRANSACTION_H_$/;"	d
WLPDSTM_PROFILING_ADAPTIVE_H_	swisstm/src/common/profiling/adaptive.h	/^#define WLPDSTM_PROFILING_ADAPTIVE_H_$/;"	d
WLPDSTM_PROFILING_BASE_H_	swisstm/src/common/profiling/base.h	/^#define WLPDSTM_PROFILING_BASE_H_$/;"	d
WLPDSTM_PROFILING_H_	swisstm/src/dynamic/profiling.h	/^#define WLPDSTM_PROFILING_H_$/;"	d
WLPDSTM_PROFILING_H_	swisstm/src/stm/profiling.h	/^#define WLPDSTM_PROFILING_H_$/;"	d
WLPDSTM_PROFILING_NON_TX_DURATION_H_	swisstm/src/common/profiling/non_tx_duration.h	/^#define WLPDSTM_PROFILING_NON_TX_DURATION_H_$/;"	d
WLPDSTM_PROFILING_NON_TX_DURATION_PCNT_SIMPLE_H_	swisstm/src/common/profiling/non_tx_duration_pcnt_simple.h	/^#define WLPDSTM_PROFILING_NON_TX_DURATION_PCNT_SIMPLE_H_$/;"	d
WLPDSTM_PROFILING_NON_TX_DURATION_SIMPLE_H_	swisstm/src/common/profiling/non_tx_duration_simple.h	/^#define WLPDSTM_PROFILING_NON_TX_DURATION_SIMPLE_H_$/;"	d
WLPDSTM_PROFILING_SIMPLE_H_	swisstm/src/common/profiling/simple.h	/^#define WLPDSTM_PROFILING_SIMPLE_H_$/;"	d
WLPDSTM_PROFILING_TX_DURATION_H_	swisstm/src/common/profiling/tx_duration.h	/^#define WLPDSTM_PROFILING_TX_DURATION_H_$/;"	d
WLPDSTM_PTHREAD_YIELD	swisstm/src/common/preemptive_utils.h	/^#define WLPDSTM_PTHREAD_YIELD$/;"	d
WLPDSTM_RANDOM_H_	swisstm/src/common/random.h	/^#define WLPDSTM_RANDOM_H_$/;"	d
WLPDSTM_RW_CONSTANTS_H_	swisstm/src/rw/constants.h	/^#define WLPDSTM_RW_CONSTANTS_H_$/;"	d
WLPDSTM_RW_MEMORY_H_	swisstm/src/rw/memory.h	/^#define WLPDSTM_RW_MEMORY_H_$/;"	d
WLPDSTM_RW_TRANSACTION_H_	swisstm/src/rw/transaction.h	/^#define WLPDSTM_RW_TRANSACTION_H_$/;"	d
WLPDSTM_SAMPLING_H_	swisstm/src/common/sampling.h	/^#define WLPDSTM_SAMPLING_H_$/;"	d
WLPDSTM_SCHED_YIELD	swisstm/src/common/preemptive_utils.h	/^#define WLPDSTM_SCHED_YIELD$/;"	d
WLPDSTM_STATS_BASE_H_	swisstm/src/common/stats_base.h	/^#define WLPDSTM_STATS_BASE_H_$/;"	d
WLPDSTM_STATS_H_	swisstm/src/dynamic/stats.h	/^#define WLPDSTM_STATS_H_$/;"	d
WLPDSTM_STATS_H_	swisstm/src/epochstm/stats.h	/^#define WLPDSTM_STATS_H_$/;"	d
WLPDSTM_STATS_H_	swisstm/src/p-tlrw/stats.h	/^#define WLPDSTM_STATS_H_$/;"	d
WLPDSTM_STATS_H_	swisstm/src/rw/stats.h	/^#define WLPDSTM_STATS_H_$/;"	d
WLPDSTM_STATS_H_	swisstm/src/stm/stats.h	/^#define WLPDSTM_STATS_H_$/;"	d
WLPDSTM_STATS_H_	swisstm/src/tlrw/stats.h	/^#define WLPDSTM_STATS_H_$/;"	d
WLPDSTM_SWISSTM_CONSTANTS_H_	swisstm/src/dynamic/constants.h	/^#define WLPDSTM_SWISSTM_CONSTANTS_H_$/;"	d
WLPDSTM_SWISSTM_CONSTANTS_H_	swisstm/src/stm/constants.h	/^#define WLPDSTM_SWISSTM_CONSTANTS_H_$/;"	d
WLPDSTM_TANGER_STACK_AREA_H_	swisstm/src/tanger/tanger_stack_area.h	/^#define WLPDSTM_TANGER_STACK_AREA_H_$/;"	d
WLPDSTM_TID_H_	swisstm/src/common/tid.h	/^#define WLPDSTM_TID_H_$/;"	d
WLPDSTM_TIMESTAMP_H_	swisstm/src/dynamic/timestamp.h	/^#define WLPDSTM_TIMESTAMP_H_$/;"	d
WLPDSTM_TIMESTAMP_H_	swisstm/src/stm/timestamp.h	/^#define WLPDSTM_TIMESTAMP_H_$/;"	d
WLPDSTM_TIMING_H_	swisstm/src/common/timing.h	/^#define WLPDSTM_TIMING_H_$/;"	d
WLPDSTM_TLRW_CONSTANTS_H_	swisstm/src/p-tlrw/constants.h	/^#define WLPDSTM_TLRW_CONSTANTS_H_$/;"	d
WLPDSTM_TLRW_CONSTANTS_H_	swisstm/src/tlrw/constants.h	/^#define WLPDSTM_TLRW_CONSTANTS_H_$/;"	d
WLPDSTM_TLRW_MEMORY_H_	swisstm/src/p-tlrw/memory.h	/^#define WLPDSTM_TLRW_MEMORY_H_$/;"	d
WLPDSTM_TLRW_MEMORY_H_	swisstm/src/tlrw/memory.h	/^#define WLPDSTM_TLRW_MEMORY_H_$/;"	d
WLPDSTM_TLRW_TRANSACTION_H_	swisstm/src/p-tlrw/transaction.h	/^#define WLPDSTM_TLRW_TRANSACTION_H_$/;"	d
WLPDSTM_TLRW_TRANSACTION_H_	swisstm/src/tlrw/transaction.h	/^#define WLPDSTM_TLRW_TRANSACTION_H_$/;"	d
WLPDSTM_TLS_H_	swisstm/src/common/tls.h	/^#define WLPDSTM_TLS_H_$/;"	d
WLPDSTM_TM_IMPL_CONST_H_	swisstm/src/common/tm_impl_const.h	/^#define WLPDSTM_TM_IMPL_CONST_H_$/;"	d
WLPDSTM_TRANSACTION_DYNAMIC_H_	swisstm/src/dynamic/transaction.h	/^#define WLPDSTM_TRANSACTION_DYNAMIC_H_$/;"	d
WLPDSTM_TRANSACTION_H_	swisstm/src/stm/transaction.h	/^#define WLPDSTM_TRANSACTION_H_$/;"	d
WLPDSTM_VERSION_LOCK_H_	swisstm/src/dynamic/version_lock.h	/^#define WLPDSTM_VERSION_LOCK_H_$/;"	d
WLPDSTM_VERSION_LOCK_H_	swisstm/src/stm/version_lock.h	/^#define WLPDSTM_VERSION_LOCK_H_$/;"	d
WLPDSTM_WLPDSTM_H_	swisstm/src/api/wlpdstm.h	/^#define WLPDSTM_WLPDSTM_H_$/;"	d
WLPDSTM_WORD_H_	swisstm/src/common/word.h	/^#define WLPDSTM_WORD_H_$/;"	d
WORD32_16_POS	swisstm/src/stm_api/read_write.h	/^#define WORD32_16_POS(/;"	d
WORD32_8_POS	swisstm/src/stm_api/read_write.h	/^#define WORD32_8_POS(/;"	d
WORD32_ADDRESS	swisstm/src/stm_api/read_write.h	/^#define WORD32_ADDRESS(/;"	d
WORD64_16_POS	swisstm/src/stm_api/read_write.h	/^#define WORD64_16_POS(/;"	d
WORD64_32_POS	swisstm/src/stm_api/read_write.h	/^#define WORD64_32_POS(/;"	d
WORD64_8_POS	swisstm/src/stm_api/read_write.h	/^#define WORD64_8_POS(/;"	d
WORD64_ADDRESS	swisstm/src/stm_api/read_write.h	/^#define WORD64_ADDRESS(/;"	d
WORD_ADDRESS_MASK	swisstm/src/common/constants.h	/^	const uintptr_t WORD_ADDRESS_MASK = BYTES_IN_WORD - 1;$/;"	v	namespace:wlpdstm	typeref:typename:const uintptr_t
WORD_FIELD_NAME	swisstm/src/stm_api/read_write.h	/^#	define WORD_FIELD_NAME	/;"	d
WORD_LOG_SIZE	swisstm/src/dynamic/constants.h	/^	const unsigned WORD_LOG_SIZE = 22;$/;"	v	namespace:wlpdstm	typeref:typename:const unsigned
WORD_LOG_SIZE	swisstm/src/stm/constants.h	/^	const unsigned WORD_LOG_SIZE = 22;$/;"	v	namespace:wlpdstm	typeref:typename:const unsigned
WRITES	swisstm/src/dynamic/stats.h	/^			WRITES,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
WRITES	swisstm/src/stm/stats.h	/^			WRITES,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
WRITE_LOCK_CLEAR	swisstm/src/dynamic/constants.h	/^#define WRITE_LOCK_CLEAR /;"	d
WRITE_LOCK_CLEAR	swisstm/src/stm/constants.h	/^#define WRITE_LOCK_CLEAR /;"	d
WRITE_LOCK_GET_THREAD_ID	swisstm/src/p-tlrw/transaction.h	/^#define WRITE_LOCK_GET_THREAD_ID(/;"	d
WRITE_LOCK_GET_TX_CNT	swisstm/src/p-tlrw/transaction.h	/^#define WRITE_LOCK_GET_TX_CNT(/;"	d
WRITE_LOG_SIZE	swisstm/src/dynamic/stats.h	/^			WRITE_LOG_SIZE,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
WRITE_LOG_SIZE	swisstm/src/stm/stats.h	/^			WRITE_LOG_SIZE,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
WRITE_LOG_SIZE_ABORT_READ	swisstm/src/dynamic/stats.h	/^			WRITE_LOG_SIZE_ABORT_READ,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
WRITE_LOG_SIZE_ABORT_READ	swisstm/src/stm/stats.h	/^			WRITE_LOG_SIZE_ABORT_READ,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
WRITE_LOG_SIZE_ABORT_WRITE	swisstm/src/dynamic/stats.h	/^			WRITE_LOG_SIZE_ABORT_WRITE,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
WRITE_LOG_SIZE_ABORT_WRITE	swisstm/src/stm/stats.h	/^			WRITE_LOG_SIZE_ABORT_WRITE,$/;"	e	enum:wlpdstm::TxMixinvStats::Type
WRITE_OP	swisstm/src/dynamic/constants.h	/^		WRITE_OP = 2,$/;"	e	enum:wlpdstm::OperationType
WRITE_OP	swisstm/src/stm/constants.h	/^		WRITE_OP = 2,$/;"	e	enum:wlpdstm::OperationType
WRITE_STATS_ARRAY_ROWS	swisstm/src/epochstm/transaction.h	/^#define WRITE_STATS_ARRAY_ROWS /;"	d
WS_GET_RUN_COUNTER	rlu.c	/^#define WS_GET_RUN_COUNTER(/;"	d	file:
WS_GET_THREAD_ID	rlu.c	/^#define WS_GET_THREAD_ID(/;"	d	file:
WS_INDEX	rlu.c	/^#define WS_INDEX(/;"	d	file:
WS_OBJ_HEADER_SIZE	rlu.c	/^#define WS_OBJ_HEADER_SIZE /;"	d	file:
W_OUTPUT_FILENAME	run_tests.py	/^W_OUTPUT_FILENAME = '__w_check.txt'$/;"	v
WaitOnAbort	swisstm/src/dynamic/transaction.h	/^inline void wlpdstm::TransactionDynamic::WaitOnAbort() {$/;"	f	class:wlpdstm::TransactionDynamic	typeref:typename:void
WaitOnAbort	swisstm/src/epochstm/transaction.h	/^inline void wlpdstm::TransactionEpoch::WaitOnAbort() {$/;"	f	class:wlpdstm::TransactionEpoch	typeref:typename:void
WaitOnAbort	swisstm/src/p-tlrw/transaction.h	/^inline void wlpdstm::TransactionTlrw::WaitOnAbort() {$/;"	f	class:wlpdstm::TransactionTlrw	typeref:typename:void
WaitOnAbort	swisstm/src/rw/transaction.h	/^inline void wlpdstm::TransactionRw::WaitOnAbort() {$/;"	f	class:wlpdstm::TransactionRw	typeref:typename:void
WaitOnAbort	swisstm/src/stm/transaction_mixinv.h	/^inline void wlpdstm::TxMixinv::WaitOnAbort() {$/;"	f	class:wlpdstm::TxMixinv	typeref:typename:void
WaitOnAbort	swisstm/src/tlrw/transaction.h	/^inline void wlpdstm::TransactionTlrw::WaitOnAbort() {$/;"	f	class:wlpdstm::TransactionTlrw	typeref:typename:void
WlpdstmAlloced	swisstm/src/common/alloc.h	/^	class WlpdstmAlloced {$/;"	c	namespace:wlpdstm
Word	swisstm/src/common/word.h	/^	typedef uintptr_t Word;$/;"	t	typeref:typename:uintptr_t
WriteLock	swisstm/src/dynamic/version_lock.h	/^	typedef VersionLock WriteLock;$/;"	t	namespace:wlpdstm	typeref:typename:VersionLock
WriteLock	swisstm/src/epochstm/transaction.h	/^			typedef Word WriteLock;$/;"	t	class:wlpdstm::TransactionEpoch	typeref:typename:Word
WriteLock	swisstm/src/p-tlrw/transaction.h	/^		typedef Word WriteLock;$/;"	t	class:wlpdstm::TransactionTlrw	typeref:typename:Word
WriteLock	swisstm/src/rw/transaction.h	/^		typedef Word WriteLock;$/;"	t	class:wlpdstm::TransactionRw	typeref:typename:Word
WriteLock	swisstm/src/stm/transaction_mixinv.h	/^	typedef VersionLock WriteLock;$/;"	t	namespace:wlpdstm	typeref:typename:VersionLock
WriteLock	swisstm/src/tlrw/transaction.h	/^		typedef Word WriteLock;$/;"	t	class:wlpdstm::TransactionTlrw	typeref:typename:Word
WriteLog	swisstm/src/dynamic/log.h	/^	struct WriteLog : public Log<WriteLogEntry> {$/;"	s	namespace:wlpdstm
WriteLog	swisstm/src/epochstm/transaction.h	/^			typedef Log<WriteLogEntry> WriteLog;$/;"	t	class:wlpdstm::TransactionEpoch	typeref:typename:Log<WriteLogEntry>
WriteLog	swisstm/src/p-tlrw/transaction.h	/^		typedef Log<WriteLogEntry> WriteLog;$/;"	t	class:wlpdstm::TransactionTlrw	typeref:typename:Log<WriteLogEntry>
WriteLog	swisstm/src/rw/transaction.h	/^		typedef Log<WriteLogEntry> WriteLog;$/;"	t	class:wlpdstm::TransactionRw	typeref:typename:Log<WriteLogEntry>
WriteLog	swisstm/src/stm/transaction_mixinv.h	/^		typedef Log<WriteLogEntry> WriteLog;$/;"	t	class:wlpdstm::TxMixinv	typeref:typename:Log<WriteLogEntry>
WriteLog	swisstm/src/tlrw/transaction.h	/^		typedef Log<WriteLogEntry> WriteLog;$/;"	t	class:wlpdstm::TransactionTlrw	typeref:typename:Log<WriteLogEntry>
WriteLogEntry	swisstm/src/dynamic/log.h	/^	struct WriteLogEntry {$/;"	s	namespace:wlpdstm
WriteLogEntry	swisstm/src/epochstm/transaction.h	/^			struct WriteLogEntry {$/;"	s	class:wlpdstm::TransactionEpoch
WriteLogEntry	swisstm/src/p-tlrw/transaction.h	/^		struct WriteLogEntry {$/;"	s	class:wlpdstm::TransactionTlrw
WriteLogEntry	swisstm/src/rw/transaction.h	/^		struct WriteLogEntry {$/;"	s	class:wlpdstm::TransactionRw
WriteLogEntry	swisstm/src/stm/transaction_mixinv.h	/^		struct WriteLogEntry {$/;"	s	class:wlpdstm::TxMixinv
WriteLogEntry	swisstm/src/tlrw/transaction.h	/^		struct WriteLogEntry {$/;"	s	class:wlpdstm::TransactionTlrw
WriteLogHashtable	swisstm/src/dynamic/lazy/hashtable.h	/^	typedef Hashtable<WriteLogEntry> WriteLogHashtable;$/;"	t	namespace:wlpdstm	typeref:typename:Hashtable<WriteLogEntry>
WriteSet	swisstm/src/p-tlrw/transaction.h	/^		class WriteSet : public Log<WriteSetEntry> {$/;"	c	class:wlpdstm::TransactionTlrw
WriteSet	swisstm/src/rw/transaction.h	/^		typedef Log<WriteSetEntry> WriteSet;$/;"	t	class:wlpdstm::TransactionRw	typeref:typename:Log<WriteSetEntry>
WriteSet	swisstm/src/tlrw/transaction.h	/^		typedef Log<WriteSetEntry> WriteSet;$/;"	t	class:wlpdstm::TransactionTlrw	typeref:typename:Log<WriteSetEntry>
WriteSetEntry	swisstm/src/p-tlrw/transaction.h	/^		typedef OwnershipRecord *WriteSetEntry;$/;"	t	class:wlpdstm::TransactionTlrw	typeref:typename:OwnershipRecord *
WriteSetEntry	swisstm/src/rw/transaction.h	/^		typedef OwnershipRecord *WriteSetEntry;$/;"	t	class:wlpdstm::TransactionRw	typeref:typename:OwnershipRecord *
WriteSetEntry	swisstm/src/tlrw/transaction.h	/^		typedef OwnershipRecord *WriteSetEntry;$/;"	t	class:wlpdstm::TransactionTlrw	typeref:typename:OwnershipRecord *
WriteWord	swisstm/src/dynamic/transaction.h	/^inline void wlpdstm::TransactionDynamic::WriteWord(Word *address, Word value, Word mask) {$/;"	f	class:wlpdstm::TransactionDynamic	typeref:typename:void
WriteWord	swisstm/src/epochstm/transaction.h	/^inline void wlpdstm::TransactionEpoch::WriteWord(Word *addr, Word val, Word mask) {$/;"	f	class:wlpdstm::TransactionEpoch	typeref:typename:void
WriteWord	swisstm/src/p-tlrw/transaction.h	/^inline void wlpdstm::TransactionTlrw::WriteWord(Word *addr, Word val, Word mask) {$/;"	f	class:wlpdstm::TransactionTlrw	typeref:typename:void
WriteWord	swisstm/src/rw/transaction.h	/^inline void wlpdstm::TransactionRw::WriteWord(Word *addr, Word val, Word mask) {$/;"	f	class:wlpdstm::TransactionRw	typeref:typename:void
WriteWord	swisstm/src/stm/transaction_mixinv.h	/^inline void wlpdstm::TxMixinv::WriteWord(Word *address, Word value, Word mask) {$/;"	f	class:wlpdstm::TxMixinv	typeref:typename:void
WriteWord	swisstm/src/stm_api/profiled_transaction.h	/^inline void wlpdstm::ProfiledTransaction<TX, STATS_TYPE>::WriteWord(Word *addr, Word val, Word m/;"	f	class:wlpdstm::ProfiledTransaction	typeref:typename:void
WriteWord	swisstm/src/stm_api/transaction.h	/^		static void WriteWord(Word *address, Word value) {$/;"	f	class:wlpdstm::CurrentTransaction	typeref:typename:void
WriteWord	swisstm/src/tlrw/transaction.h	/^inline void wlpdstm::TransactionTlrw::WriteWord(Word *addr, Word val, Word mask) {$/;"	f	class:wlpdstm::TransactionTlrw	typeref:typename:void
WriteWordEnd	swisstm/src/common/profiling/adaptive.h	/^inline void wlpdstm::AdaptiveProfiling<STATS, STATS_TYPE>::WriteWordEnd() {$/;"	f	class:wlpdstm::AdaptiveProfiling	typeref:typename:void
WriteWordEnd	swisstm/src/common/profiling/base.h	/^			void WriteWordEnd() {$/;"	f	class:wlpdstm::BaseProfiling	typeref:typename:void
WriteWordEnd	swisstm/src/common/profiling/non_tx_duration.h	/^inline void wlpdstm::NonTxDurationProfiling<STATS, STATS_TYPE>::WriteWordEnd() {$/;"	f	class:wlpdstm::NonTxDurationProfiling	typeref:typename:void
WriteWordEnd	swisstm/src/common/profiling/non_tx_duration_pcnt_simple.h	/^inline void wlpdstm::NonTxDurationPcntProfilingSimple<STATS, STATS_TYPE>::WriteWordEnd() {$/;"	f	class:wlpdstm::NonTxDurationPcntProfilingSimple	typeref:typename:void
WriteWordEnd	swisstm/src/common/profiling/non_tx_duration_simple.h	/^inline void wlpdstm::NonTxDurationProfilingSimple<STATS, STATS_TYPE>::WriteWordEnd() {$/;"	f	class:wlpdstm::NonTxDurationProfilingSimple	typeref:typename:void
WriteWordEnd	swisstm/src/common/profiling/simple.h	/^inline void wlpdstm::SimpleProfiling<STATS, STATS_TYPE>::WriteWordEnd() {$/;"	f	class:wlpdstm::SimpleProfiling	typeref:typename:void
WriteWordEnd	swisstm/src/common/profiling/tx_duration.h	/^inline void wlpdstm::TxDurationProfiling<STATS, STATS_TYPE>::WriteWordEnd() {$/;"	f	class:wlpdstm::TxDurationProfiling	typeref:typename:void
WriteWordEnd	swisstm/src/dynamic/profiling/adaptive_dynamic.h	/^inline void wlpdstm::AdaptiveDynamicProfiling<STATS, STATS_TYPE>::WriteWordEnd() {$/;"	f	class:wlpdstm::AdaptiveDynamicProfiling	typeref:typename:void
WriteWordInner	swisstm/src/dynamic/transaction.h	/^inline void wlpdstm::TransactionDynamic::WriteWordInner(Word *address, Word value, Word mask) {$/;"	f	class:wlpdstm::TransactionDynamic	typeref:typename:void
WriteWordInner	swisstm/src/stm/transaction_mixinv.h	/^inline void wlpdstm::TxMixinv::WriteWordInner(Word *address, Word value, Word mask) {$/;"	f	class:wlpdstm::TxMixinv	typeref:typename:void
WriteWordLocal	swisstm/src/stm_api/transaction.h	/^		static void WriteWordLocal(Word *address, Word value) {$/;"	f	class:wlpdstm::CurrentTransaction	typeref:typename:void
WriteWordLogEntry	swisstm/src/dynamic/log.h	/^	struct WriteWordLogEntry {$/;"	s	namespace:wlpdstm
WriteWordLogEntry	swisstm/src/stm/transaction_mixinv.h	/^		struct WriteWordLogEntry {$/;"	s	class:wlpdstm::TxMixinv
WriteWordLogMemPool	swisstm/src/dynamic/log.h	/^	typedef Log<WriteWordLogEntry> WriteWordLogMemPool;$/;"	t	namespace:wlpdstm	typeref:typename:Log<WriteWordLogEntry>
WriteWordLogMemPool	swisstm/src/stm/transaction_mixinv.h	/^		typedef Log<WriteWordLogEntry> WriteWordLogMemPool;$/;"	t	class:wlpdstm::TxMixinv	typeref:typename:Log<WriteWordLogEntry>
WriteWordStart	swisstm/src/common/profiling/adaptive.h	/^inline void wlpdstm::AdaptiveProfiling<STATS, STATS_TYPE>::WriteWordStart(Word *addr, Word val, /;"	f	class:wlpdstm::AdaptiveProfiling	typeref:typename:void
WriteWordStart	swisstm/src/common/profiling/base.h	/^			void WriteWordStart(Word *addr, Word val, Word mask = LOG_ENTRY_UNMASKED) {$/;"	f	class:wlpdstm::BaseProfiling	typeref:typename:void
WriteWordStart	swisstm/src/common/profiling/non_tx_duration.h	/^inline void wlpdstm::NonTxDurationProfiling<STATS, STATS_TYPE>::WriteWordStart(Word *addr, Word /;"	f	class:wlpdstm::NonTxDurationProfiling	typeref:typename:void
WriteWordStart	swisstm/src/common/profiling/non_tx_duration_pcnt_simple.h	/^inline void wlpdstm::NonTxDurationPcntProfilingSimple<STATS, STATS_TYPE>::WriteWordStart(Word *a/;"	f	class:wlpdstm::NonTxDurationPcntProfilingSimple	typeref:typename:void
WriteWordStart	swisstm/src/common/profiling/non_tx_duration_simple.h	/^inline void wlpdstm::NonTxDurationProfilingSimple<STATS, STATS_TYPE>::WriteWordStart(Word *addr,/;"	f	class:wlpdstm::NonTxDurationProfilingSimple	typeref:typename:void
WriteWordStart	swisstm/src/common/profiling/simple.h	/^inline void wlpdstm::SimpleProfiling<STATS, STATS_TYPE>::WriteWordStart(Word *addr, Word val, Wo/;"	f	class:wlpdstm::SimpleProfiling	typeref:typename:void
WriteWordStart	swisstm/src/common/profiling/tx_duration.h	/^inline void wlpdstm::TxDurationProfiling<STATS, STATS_TYPE>::WriteWordStart(Word *addr, Word val/;"	f	class:wlpdstm::TxDurationProfiling	typeref:typename:void
WriteWordStart	swisstm/src/dynamic/profiling/adaptive_dynamic.h	/^inline void wlpdstm::AdaptiveDynamicProfiling<STATS, STATS_TYPE>::WriteWordStart(Word *addr, Wor/;"	f	class:wlpdstm::AdaptiveDynamicProfiling	typeref:typename:void
WriteWordStartForEstimatingCosts	swisstm/src/common/profiling/adaptive.h	/^inline void wlpdstm::AdaptiveProfiling<STATS, STATS_TYPE>::WriteWordStartForEstimatingCosts() {$/;"	f	class:wlpdstm::AdaptiveProfiling	typeref:typename:void
WriteWordStartForEstimatingCosts	swisstm/src/dynamic/profiling/adaptive_dynamic.h	/^inline void wlpdstm::AdaptiveDynamicProfiling<STATS, STATS_TYPE>::WriteWordStartForEstimatingCos/;"	f	class:wlpdstm::AdaptiveDynamicProfiling	typeref:typename:void
XSTR	swisstm/src/mubench/intset-list-mv.c	/^#define XSTR(/;"	d	file:
XSTR	swisstm/src/mubench/intset.c	/^#define XSTR(/;"	d	file:
YieldCPU	swisstm/src/dynamic/transaction.h	/^inline void wlpdstm::TransactionDynamic::YieldCPU() {$/;"	f	class:wlpdstm::TransactionDynamic	typeref:typename:void
YieldCPU	swisstm/src/stm/transaction_mixinv.h	/^inline void wlpdstm::TxMixinv::YieldCPU() {$/;"	f	class:wlpdstm::TxMixinv	typeref:typename:void
ZIPF_MAX_GEN	zipf/zipf.c	/^#define ZIPF_MAX_GEN	/;"	d	file:
_GNU_SOURCE	benchmark_list.c	/^#define _GNU_SOURCE$/;"	d	file:
_ITM_LB	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION void _ITM_LB(_ITM_transaction *td, const void *addr,  size_t size) {$/;"	f	typeref:typename:_ITM_CALL_CONVENTION void
_ITM_LCD	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION void _ITM_LCD(_ITM_transaction *td, const double _Complex *addr) {$/;"	f	typeref:typename:_ITM_CALL_CONVENTION void
_ITM_LCE	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION void _ITM_LCE(_ITM_transaction *td, const long double _Complex *addr) {$/;"	f	typeref:typename:_ITM_CALL_CONVENTION void
_ITM_LCF	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION void _ITM_LCF(_ITM_transaction *td, const float _Complex *addr) {$/;"	f	typeref:typename:_ITM_CALL_CONVENTION void
_ITM_LD	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION void _ITM_LD(_ITM_transaction *td, const double *addr) {$/;"	f	typeref:typename:_ITM_CALL_CONVENTION void
_ITM_LE	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION void _ITM_LE(_ITM_transaction *td, const long double *addr) {$/;"	f	typeref:typename:_ITM_CALL_CONVENTION void
_ITM_LF	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION void _ITM_LF(_ITM_transaction *td, const float *addr) {$/;"	f	typeref:typename:_ITM_CALL_CONVENTION void
_ITM_LM128	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION void _ITM_LM128(_ITM_transaction *td, const __m128 *addr) {$/;"	f	typeref:typename:_ITM_CALL_CONVENTION void
_ITM_LM64	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION void _ITM_LM64(_ITM_transaction *td, const __m64 *addr) {$/;"	f	typeref:typename:_ITM_CALL_CONVENTION void
_ITM_LU1	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION void _ITM_LU1(_ITM_transaction *td, const uint8 *addr) {$/;"	f	typeref:typename:_ITM_CALL_CONVENTION void
_ITM_LU2	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION void _ITM_LU2(_ITM_transaction *td, const uint16 *addr) {$/;"	f	typeref:typename:_ITM_CALL_CONVENTION void
_ITM_LU4	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION void _ITM_LU4(_ITM_transaction *td, const uint32 *addr) {$/;"	f	typeref:typename:_ITM_CALL_CONVENTION void
_ITM_LU8	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION void _ITM_LU8(_ITM_transaction *td, const uint64 *addr) {$/;"	f	typeref:typename:_ITM_CALL_CONVENTION void
_ITM_RD	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION double _ITM_RD(_ITM_transaction *td, const double *addr) {$/;"	f	typeref:typename:_ITM_CALL_CONVENTION double
_ITM_RF	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION float _ITM_RF(_ITM_transaction *td, const float *addr) {$/;"	f	typeref:typename:_ITM_CALL_CONVENTION float
_ITM_RM128	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION __m128 _ITM_RM128(_ITM_transaction *td, const __m128 *addr) {$/;"	f	typeref:typename:_ITM_CALL_CONVENTION __m128
_ITM_RU1	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION uint8 _ITM_RU1 (_ITM_transaction *td, const uint8 *addr) {$/;"	f	typeref:typename:_ITM_CALL_CONVENTION uint8
_ITM_RU2	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION uint16 _ITM_RU2(_ITM_transaction *td, const uint16 *addr) {$/;"	f	typeref:typename:_ITM_CALL_CONVENTION uint16
_ITM_RU4	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION uint32 _ITM_RU4(_ITM_transaction *td, const uint32 *addr) {$/;"	f	typeref:typename:_ITM_CALL_CONVENTION uint32
_ITM_RU8	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION uint64 _ITM_RU8(_ITM_transaction *td, const uint64 *addr) {$/;"	f	typeref:typename:_ITM_CALL_CONVENTION uint64
_ITM_RaRD	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION double _ITM_RaRD(_ITM_transaction *td, const double *addr) {$/;"	f	typeref:typename:_ITM_CALL_CONVENTION double
_ITM_RaRF	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION float _ITM_RaRF(_ITM_transaction *td, const float *addr) {$/;"	f	typeref:typename:_ITM_CALL_CONVENTION float
_ITM_RaRM128	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION __m128 _ITM_RaRM128(_ITM_transaction *td, const __m128 *addr) {$/;"	f	typeref:typename:_ITM_CALL_CONVENTION __m128
_ITM_RaRU1	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION uint8 _ITM_RaRU1(_ITM_transaction *td, const uint8 *addr) {$/;"	f	typeref:typename:_ITM_CALL_CONVENTION uint8
_ITM_RaRU2	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION uint16 _ITM_RaRU2(_ITM_transaction *td, const uint16 *addr) {$/;"	f	typeref:typename:_ITM_CALL_CONVENTION uint16
_ITM_RaRU4	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION uint32 _ITM_RaRU4(_ITM_transaction *td, const uint32 *addr) {$/;"	f	typeref:typename:_ITM_CALL_CONVENTION uint32
_ITM_RaRU8	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION uint64 _ITM_RaRU8(_ITM_transaction *td, const uint64 *addr) {$/;"	f	typeref:typename:_ITM_CALL_CONVENTION uint64
_ITM_RaWD	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION double _ITM_RaWD(_ITM_transaction *td, const double *addr) {$/;"	f	typeref:typename:_ITM_CALL_CONVENTION double
_ITM_RaWF	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION float _ITM_RaWF(_ITM_transaction *td, const float *addr) {$/;"	f	typeref:typename:_ITM_CALL_CONVENTION float
_ITM_RaWM128	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION __m128 _ITM_RaWM128(_ITM_transaction *td, const __m128 *addr) {$/;"	f	typeref:typename:_ITM_CALL_CONVENTION __m128
_ITM_RaWU1	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION uint8 _ITM_RaWU1(_ITM_transaction *td, const uint8 *addr) {$/;"	f	typeref:typename:_ITM_CALL_CONVENTION uint8
_ITM_RaWU2	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION uint16 _ITM_RaWU2(_ITM_transaction *td, const uint16 *addr) {$/;"	f	typeref:typename:_ITM_CALL_CONVENTION uint16
_ITM_RaWU4	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION uint32 _ITM_RaWU4(_ITM_transaction *td, const uint32 *addr) {$/;"	f	typeref:typename:_ITM_CALL_CONVENTION uint32
_ITM_RaWU8	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION uint64 _ITM_RaWU8(_ITM_transaction *td, const uint64 *addr) {$/;"	f	typeref:typename:_ITM_CALL_CONVENTION uint64
_ITM_RfWD	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION double _ITM_RfWD(_ITM_transaction *td, const double *addr) {$/;"	f	typeref:typename:_ITM_CALL_CONVENTION double
_ITM_RfWF	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION float _ITM_RfWF(_ITM_transaction *td, const float  *addr) {$/;"	f	typeref:typename:_ITM_CALL_CONVENTION float
_ITM_RfWM128	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION __m128 _ITM_RfWM128(_ITM_transaction *td, const __m128 *addr) {$/;"	f	typeref:typename:_ITM_CALL_CONVENTION __m128
_ITM_RfWU1	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION uint8 _ITM_RfWU1(_ITM_transaction *td, const uint8 *addr) {$/;"	f	typeref:typename:_ITM_CALL_CONVENTION uint8
_ITM_RfWU2	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION uint16 _ITM_RfWU2(_ITM_transaction *td, const uint16 *addr) {$/;"	f	typeref:typename:_ITM_CALL_CONVENTION uint16
_ITM_RfWU4	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION uint32 _ITM_RfWU4(_ITM_transaction *td, const uint32 *addr) {$/;"	f	typeref:typename:_ITM_CALL_CONVENTION uint32
_ITM_RfWU8	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION uint64  _ITM_RfWU8(_ITM_transaction *td, const uint64 *addr) {$/;"	f	typeref:typename:_ITM_CALL_CONVENTION uint64
_ITM_WD	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION void _ITM_WD(_ITM_transaction *td,  double *addr, double val) {$/;"	f	typeref:typename:_ITM_CALL_CONVENTION void
_ITM_WF	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION void _ITM_WF(_ITM_transaction *td, float *addr, float val) {$/;"	f	typeref:typename:_ITM_CALL_CONVENTION void
_ITM_WM128	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION void _ITM_WM128(_ITM_transaction *td, __m128 *addr, __m128 val) {$/;"	f	typeref:typename:_ITM_CALL_CONVENTION void
_ITM_WU1	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION void _ITM_WU1(_ITM_transaction *td, uint8 *addr,  uint8 val) {$/;"	f	typeref:typename:_ITM_CALL_CONVENTION void
_ITM_WU2	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION void _ITM_WU2(_ITM_transaction *td, uint16 *addr, uint16 val) {$/;"	f	typeref:typename:_ITM_CALL_CONVENTION void
_ITM_WU4	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION void _ITM_WU4(_ITM_transaction *td, uint32 *addr, uint32 val) {$/;"	f	typeref:typename:_ITM_CALL_CONVENTION void
_ITM_WU8	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION void _ITM_WU8(_ITM_transaction *td, uint64 *addr, uint64 val) {$/;"	f	typeref:typename:_ITM_CALL_CONVENTION void
_ITM_WaRD	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION void _ITM_WaRD(_ITM_transaction *td,  double *addr, double val) {$/;"	f	typeref:typename:_ITM_CALL_CONVENTION void
_ITM_WaRF	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION void _ITM_WaRF(_ITM_transaction *td, float *addr, float val) {$/;"	f	typeref:typename:_ITM_CALL_CONVENTION void
_ITM_WaRM128	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION void _ITM_WaRM128(_ITM_transaction *td, __m128 *addr, __m128 val) {$/;"	f	typeref:typename:_ITM_CALL_CONVENTION void
_ITM_WaRU1	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION void _ITM_WaRU1(_ITM_transaction *td, uint8 *addr, uint8 val) {$/;"	f	typeref:typename:_ITM_CALL_CONVENTION void
_ITM_WaRU2	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION void _ITM_WaRU2(_ITM_transaction *td, uint16 *addr,  uint16 val) {$/;"	f	typeref:typename:_ITM_CALL_CONVENTION void
_ITM_WaRU4	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION void _ITM_WaRU4(_ITM_transaction *td,  uint32 *addr, uint32 val) {$/;"	f	typeref:typename:_ITM_CALL_CONVENTION void
_ITM_WaRU8	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION void _ITM_WaRU8(_ITM_transaction *td, uint64 *addr, uint64 val) {$/;"	f	typeref:typename:_ITM_CALL_CONVENTION void
_ITM_WaWD	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION void _ITM_WaWD(_ITM_transaction *td,  double *addr, double val) {$/;"	f	typeref:typename:_ITM_CALL_CONVENTION void
_ITM_WaWF	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION void _ITM_WaWF(_ITM_transaction *td, float *addr, float val) {$/;"	f	typeref:typename:_ITM_CALL_CONVENTION void
_ITM_WaWM128	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION void _ITM_WaWM128(_ITM_transaction *td, __m128 *addr, __m128 val) {$/;"	f	typeref:typename:_ITM_CALL_CONVENTION void
_ITM_WaWU1	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION void _ITM_WaWU1(_ITM_transaction *td, uint8 *addr, uint8 val) {$/;"	f	typeref:typename:_ITM_CALL_CONVENTION void
_ITM_WaWU2	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION void _ITM_WaWU2(_ITM_transaction *td, uint16 *addr, uint16 val) {$/;"	f	typeref:typename:_ITM_CALL_CONVENTION void
_ITM_WaWU4	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION void _ITM_WaWU4(_ITM_transaction *td,  uint32 *addr, uint32 val) {$/;"	f	typeref:typename:_ITM_CALL_CONVENTION void
_ITM_WaWU8	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION void _ITM_WaWU8(_ITM_transaction *td, uint64 *addr, uint64 val) {$/;"	f	typeref:typename:_ITM_CALL_CONVENTION void
_ITM_abortTransaction	swisstm/src/intel/itm.cc	/^	_ITM_EXPORT void _ITM_CALL_CONVENTION _ITM_abortTransaction(_ITM_transaction *td,$/;"	f	typeref:typename:_ITM_EXPORT void _ITM_CALL_CONVENTION
_ITM_addUserCommitAction	swisstm/src/intel/itm.cc	/^	void _ITM_CALL_CONVENTION _ITM_addUserCommitAction(_ITM_transaction * __td, $/;"	f	typeref:typename:void _ITM_CALL_CONVENTION
_ITM_addUserUndoAction	swisstm/src/intel/itm.cc	/^	void _ITM_CALL_CONVENTION _ITM_addUserUndoAction(_ITM_transaction * __td, $/;"	f	typeref:typename:void _ITM_CALL_CONVENTION
_ITM_changeTransactionMode	swisstm/src/intel/itm.cc	/^	_ITM_EXPORT void _ITM_CALL_CONVENTION _ITM_changeTransactionMode(_ITM_transaction *td,$/;"	f	typeref:typename:_ITM_EXPORT void _ITM_CALL_CONVENTION
_ITM_commitTransaction	swisstm/src/intel/itm.cc	/^	_ITM_EXPORT void _ITM_CALL_CONVENTION _ITM_commitTransaction(_ITM_transaction *td,$/;"	f	typeref:typename:_ITM_EXPORT void _ITM_CALL_CONVENTION
_ITM_commitTransactionToId	swisstm/src/intel/itm.cc	/^	_ITM_EXPORT void _ITM_CALL_CONVENTION _ITM_commitTransactionToId(_ITM_transaction *td,$/;"	f	typeref:typename:_ITM_EXPORT void _ITM_CALL_CONVENTION
_ITM_dropReferences	swisstm/src/intel/itm.cc	/^	void _ITM_CALL_CONVENTION _ITM_dropReferences(_ITM_transaction * __td, const void * __start, si/;"	f	typeref:typename:void _ITM_CALL_CONVENTION
_ITM_error	swisstm/src/intel/itm.cc	/^	_ITM_EXPORT void _ITM_CALL_CONVENTION _ITM_error (const _ITM_srcLocation *loc, int errorCode) {$/;"	f	typeref:typename:_ITM_EXPORT void _ITM_CALL_CONVENTION
_ITM_finalizeProcess	swisstm/src/intel/itm.cc	/^	_ITM_EXPORT void _ITM_CALL_CONVENTION _ITM_finalizeProcess(void) {$/;"	f	typeref:typename:_ITM_EXPORT void _ITM_CALL_CONVENTION
_ITM_finalizeThread	swisstm/src/intel/itm.cc	/^	_ITM_EXPORT void _ITM_CALL_CONVENTION _ITM_finalizeThread(void) {$/;"	f	typeref:typename:_ITM_EXPORT void _ITM_CALL_CONVENTION
_ITM_free	swisstm/src/intel/itm.cc	/^	_ITM_EXPORT void _ITM_CALL_CONVENTION _ITM_free (void * ptr) {$/;"	f	typeref:typename:_ITM_EXPORT void _ITM_CALL_CONVENTION
_ITM_getThreadnum	swisstm/src/intel/itm.cc	/^	int _ITM_CALL_CONVENTION _ITM_getThreadnum(void) {$/;"	f	typeref:typename:int _ITM_CALL_CONVENTION
_ITM_getTransaction	swisstm/src/intel/itm.cc	/^	_ITM_transaction *_ITM_CALL_CONVENTION _ITM_getTransaction(void) {$/;"	f	typeref:typename:_ITM_transaction * _ITM_CALL_CONVENTION
_ITM_getTransactionId	swisstm/src/intel/itm.cc	/^	_ITM_transactionId _ITM_CALL_CONVENTION _ITM_getTransactionId(_ITM_transaction *td) {$/;"	f	typeref:typename:_ITM_transactionId _ITM_CALL_CONVENTION
_ITM_inTransaction	swisstm/src/intel/itm.cc	/^	_ITM_howExecuting _ITM_CALL_CONVENTION _ITM_inTransaction(_ITM_transaction *td) {$/;"	f	typeref:typename:_ITM_howExecuting _ITM_CALL_CONVENTION
_ITM_initializeProcess	swisstm/src/intel/itm.cc	/^	_ITM_EXPORT int _ITM_CALL_CONVENTION _ITM_initializeProcess(void) { \/* Idempotent *\/$/;"	f	typeref:typename:_ITM_EXPORT int _ITM_CALL_CONVENTION
_ITM_initializeThread	swisstm/src/intel/itm.cc	/^	_ITM_EXPORT int _ITM_CALL_CONVENTION _ITM_initializeThread(void) {$/;"	f	typeref:typename:_ITM_EXPORT int _ITM_CALL_CONVENTION
_ITM_libraryVersion	swisstm/src/intel/itm.cc	/^	_ITM_EXPORT const char * _ITM_CALL_CONVENTION _ITM_libraryVersion (void) {$/;"	f	typeref:typename:_ITM_EXPORT const char * _ITM_CALL_CONVENTION
_ITM_malloc	swisstm/src/intel/itm.cc	/^	_ITM_EXPORT void * _ITM_CALL_CONVENTION _ITM_malloc (size_t size) {$/;"	f	typeref:typename:_ITM_EXPORT void * _ITM_CALL_CONVENTION
_ITM_memcpyRnWt	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION void _ITM_memcpyRnWt(_ITM_transaction *td, void *dest, const void *src, si/;"	f	typeref:typename:_ITM_CALL_CONVENTION void
_ITM_memcpyRnWtaR	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION void _ITM_memcpyRnWtaR(_ITM_transaction *td, void *dest, const void *src, /;"	f	typeref:typename:_ITM_CALL_CONVENTION void
_ITM_memcpyRnWtaW	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION void _ITM_memcpyRnWtaW(_ITM_transaction *td, void *dest, const void *src, /;"	f	typeref:typename:_ITM_CALL_CONVENTION void
_ITM_memcpyRtWn	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION void _ITM_memcpyRtWn(_ITM_transaction *td, void *dest, const void *src, si/;"	f	typeref:typename:_ITM_CALL_CONVENTION void
_ITM_memcpyRtWt	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION void _ITM_memcpyRtWt(_ITM_transaction *td, void *dest, const void *src, si/;"	f	typeref:typename:_ITM_CALL_CONVENTION void
_ITM_memcpyRtWtaR	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION void _ITM_memcpyRtWtaR(_ITM_transaction *td, void *dest, const void *src, /;"	f	typeref:typename:_ITM_CALL_CONVENTION void
_ITM_memcpyRtWtaW	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION void _ITM_memcpyRtWtaW(_ITM_transaction *td, void *dest, const void *src, /;"	f	typeref:typename:_ITM_CALL_CONVENTION void
_ITM_memcpyRtaRWn	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION void _ITM_memcpyRtaRWn(_ITM_transaction *td, void *dest, const void *src, /;"	f	typeref:typename:_ITM_CALL_CONVENTION void
_ITM_memcpyRtaRWt	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION void _ITM_memcpyRtaRWt(_ITM_transaction *td, void *dest, const void *src, /;"	f	typeref:typename:_ITM_CALL_CONVENTION void
_ITM_memcpyRtaRWtaR	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION void _ITM_memcpyRtaRWtaR(_ITM_transaction *td, void *dest, const void *src/;"	f	typeref:typename:_ITM_CALL_CONVENTION void
_ITM_memcpyRtaRWtaW	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION void _ITM_memcpyRtaRWtaW(_ITM_transaction *td, void *dest, const void *src/;"	f	typeref:typename:_ITM_CALL_CONVENTION void
_ITM_memcpyRtaWWn	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION void _ITM_memcpyRtaWWn(_ITM_transaction *td, void *dest, const void *src, /;"	f	typeref:typename:_ITM_CALL_CONVENTION void
_ITM_memcpyRtaWWt	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION void _ITM_memcpyRtaWWt(_ITM_transaction *td, void *dest, const void *src, /;"	f	typeref:typename:_ITM_CALL_CONVENTION void
_ITM_memcpyRtaWWtaR	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION void _ITM_memcpyRtaWWtaR(_ITM_transaction *td, void *dest, const void *src/;"	f	typeref:typename:_ITM_CALL_CONVENTION void
_ITM_memcpyRtaWWtaW	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION void _ITM_memcpyRtaWWtaW(_ITM_transaction *td, void *dest, const void *src/;"	f	typeref:typename:_ITM_CALL_CONVENTION void
_ITM_memmoveRnWt	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION void _ITM_memmoveRnWt(_ITM_transaction *td, void *dest, const void *src, s/;"	f	typeref:typename:_ITM_CALL_CONVENTION void
_ITM_memmoveRnWtaR	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION void _ITM_memmoveRnWtaR(_ITM_transaction *td, void *dest, const void *src,/;"	f	typeref:typename:_ITM_CALL_CONVENTION void
_ITM_memmoveRnWtaW	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION void _ITM_memmoveRnWtaW(_ITM_transaction *td, void *dest, const void *src,/;"	f	typeref:typename:_ITM_CALL_CONVENTION void
_ITM_memmoveRtWn	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION void _ITM_memmoveRtWn(_ITM_transaction *td, void *dest, const void *src, s/;"	f	typeref:typename:_ITM_CALL_CONVENTION void
_ITM_memmoveRtWt	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION void _ITM_memmoveRtWt(_ITM_transaction *td, void *dest, const void *src, s/;"	f	typeref:typename:_ITM_CALL_CONVENTION void
_ITM_memmoveRtWtaR	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION void _ITM_memmoveRtWtaR(_ITM_transaction *td, void *dest, const void *src,/;"	f	typeref:typename:_ITM_CALL_CONVENTION void
_ITM_memmoveRtWtaW	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION void _ITM_memmoveRtWtaW(_ITM_transaction *td, void *dest, const void *src,/;"	f	typeref:typename:_ITM_CALL_CONVENTION void
_ITM_memmoveRtaRWn	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION void _ITM_memmoveRtaRWn(_ITM_transaction *td, void *dest, const void *src,/;"	f	typeref:typename:_ITM_CALL_CONVENTION void
_ITM_memmoveRtaRWt	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION void _ITM_memmoveRtaRWt(_ITM_transaction *td, void *dest, const void *src,/;"	f	typeref:typename:_ITM_CALL_CONVENTION void
_ITM_memmoveRtaRWtaR	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION void _ITM_memmoveRtaRWtaR(_ITM_transaction *td, void *dest, const void *sr/;"	f	typeref:typename:_ITM_CALL_CONVENTION void
_ITM_memmoveRtaRWtaW	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION void _ITM_memmoveRtaRWtaW(_ITM_transaction *td, void *dest, const void *sr/;"	f	typeref:typename:_ITM_CALL_CONVENTION void
_ITM_memmoveRtaWWn	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION void _ITM_memmoveRtaWWn(_ITM_transaction *td, void *dest, const void *src,/;"	f	typeref:typename:_ITM_CALL_CONVENTION void
_ITM_memmoveRtaWWt	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION void _ITM_memmoveRtaWWt(_ITM_transaction *td, void *dest, const void *src,/;"	f	typeref:typename:_ITM_CALL_CONVENTION void
_ITM_memmoveRtaWWtaR	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION void _ITM_memmoveRtaWWtaR(_ITM_transaction *td, void *dest, const void *sr/;"	f	typeref:typename:_ITM_CALL_CONVENTION void
_ITM_memmoveRtaWWtaW	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION void _ITM_memmoveRtaWWtaW(_ITM_transaction *td, void *dest, const void *sr/;"	f	typeref:typename:_ITM_CALL_CONVENTION void
_ITM_memsetW	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION void _ITM_memsetW(_ITM_transaction *td, void *target, int src, size_t coun/;"	f	typeref:typename:_ITM_CALL_CONVENTION void
_ITM_memsetWaR	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION void _ITM_memsetWaR(_ITM_transaction *td, void *target, int src, size_t co/;"	f	typeref:typename:_ITM_CALL_CONVENTION void
_ITM_memsetWaW	swisstm/src/intel/itm.cc	/^	_ITM_CALL_CONVENTION void _ITM_memsetWaW(_ITM_transaction *td, void *target, int src, size_t co/;"	f	typeref:typename:_ITM_CALL_CONVENTION void
_ITM_registerThrownObject	swisstm/src/intel/itm.cc	/^	_ITM_EXPORT void _ITM_CALL_CONVENTION _ITM_registerThrownObject(_ITM_transaction *td,$/;"	f	typeref:typename:_ITM_EXPORT void _ITM_CALL_CONVENTION
_ITM_rollbackTransaction	swisstm/src/intel/itm.cc	/^	_ITM_EXPORT void _ITM_CALL_CONVENTION _ITM_rollbackTransaction(_ITM_transaction *td,$/;"	f	typeref:typename:_ITM_EXPORT void _ITM_CALL_CONVENTION
_ITM_tryCommitTransaction	swisstm/src/intel/itm.cc	/^	_ITM_EXPORT uint32 _ITM_CALL_CONVENTION _ITM_tryCommitTransaction(_ITM_transaction *td,$/;"	f	typeref:typename:_ITM_EXPORT uint32 _ITM_CALL_CONVENTION
_ITM_userError	swisstm/src/intel/itm.cc	/^	void _ITM_CALL_CONVENTION _ITM_userError(const char *errString, int exitCode) {$/;"	f	typeref:typename:void _ITM_CALL_CONVENTION
_ITM_versionCompatible	swisstm/src/intel/itm.cc	/^	_ITM_EXPORT int _ITM_CALL_CONVENTION _ITM_versionCompatible (int) { \/* Zero if not compatible /;"	f	typeref:typename:_ITM_EXPORT int _ITM_CALL_CONVENTION
_LINUX_FLIST_H	zipf/flist.h	/^#define _LINUX_FLIST_H$/;"	d
_LINUX_HASH_H	zipf/hash.h	/^#define _LINUX_HASH_H$/;"	d
__QBSR_H	qsbr.h	/^#define __QBSR_H$/;"	d
__UTIL_H	util.h	/^#define __UTIL_H$/;"	d
__anon5b2d285c0103	swisstm/src/common/stats_base.h	/^		enum {$/;"	g	struct:wlpdstm::ThreadStatsBase
__anon6d907ae8010a	zipf/rand.h	/^	union {$/;"	u	struct:frand_state
__anon706747f3010a	swisstm/src/epochstm/transaction.h	/^				union {$/;"	u	struct:wlpdstm::TransactionEpoch::OwnershipRecord
__anon706747f3020a	swisstm/src/epochstm/transaction.h	/^				union {$/;"	u	struct:wlpdstm::TransactionEpoch::ReaderExtraArray
__anon706747f3030a	swisstm/src/epochstm/transaction.h	/^			typedef union {$/;"	u	class:wlpdstm::TransactionEpoch
__anon706747f30408	swisstm/src/epochstm/transaction.h	/^			typedef struct {$/;"	s	class:wlpdstm::TransactionEpoch
__anon706747f3050a	swisstm/src/epochstm/transaction.h	/^			CACHE_LINE_ALIGNED union {$/;"	u	class:wlpdstm::TransactionEpoch
__anon7286301e0103	zipf/test.c	/^enum {$/;"	g	file:
__anon7286301e0203	zipf/test.c	/^enum {$/;"	g	file:
__anon7ebeeeb6010a	swisstm/src/p-tlrw/transaction.h	/^		typedef union {$/;"	u	class:wlpdstm::TransactionTlrw
__anon7ebeeeb6020a	swisstm/src/p-tlrw/transaction.h	/^			CACHE_LINE_ALIGNED union {$/;"	u	class:wlpdstm::TransactionTlrw
__anon7ebeeeb6030a	swisstm/src/p-tlrw/transaction.h	/^			CACHE_LINE_ALIGNED union {$/;"	u	class:wlpdstm::TransactionTlrw
__anon7ebeeeb60408	swisstm/src/p-tlrw/transaction.h	/^				struct {$/;"	s	union:wlpdstm::TransactionTlrw::__anon7ebeeeb6030a
__anon85aa60e3010a	swisstm/src/rw/cm.h	/^		union {$/;"	u	class:wlpdstm::Greedy
__anon85aa60e30208	swisstm/src/rw/cm.h	/^			struct {$/;"	s	union:wlpdstm::Greedy::__anon85aa60e3010a
__anon87a360de010a	swisstm/src/stm/transaction_mixinv.h	/^		CACHE_LINE_ALIGNED union {$/;"	u	class:wlpdstm::TxMixinv
__anon87a360de020a	swisstm/src/stm/transaction_mixinv.h	/^		CACHE_LINE_ALIGNED union {$/;"	u	class:wlpdstm::TxMixinv
__anon87a360de030a	swisstm/src/stm/transaction_mixinv.h	/^		CACHE_LINE_ALIGNED union {$/;"	u	class:wlpdstm::TxMixinv
__anon87a360de040a	swisstm/src/stm/transaction_mixinv.h	/^		CACHE_LINE_ALIGNED union {$/;"	u	class:wlpdstm::TxMixinv
__anon87a360de050a	swisstm/src/stm/transaction_mixinv.h	/^		CACHE_LINE_ALIGNED union {$/;"	u	class:wlpdstm::TxMixinv
__anona85c20f9010a	swisstm/src/rw/transaction.h	/^			CACHE_LINE_ALIGNED union {$/;"	u	class:wlpdstm::TransactionRw
__anonabcb3183010a	swisstm/src/tlrw/cm.h	/^		union {$/;"	u	class:wlpdstm::Greedy
__anonabcb31830208	swisstm/src/tlrw/cm.h	/^			struct {$/;"	s	union:wlpdstm::Greedy::__anonabcb3183010a
__anonb360769d010a	swisstm/src/epochstm/cm.h	/^		union {$/;"	u	class:wlpdstm::Greedy
__anonb360769d0208	swisstm/src/epochstm/cm.h	/^			struct {$/;"	s	union:wlpdstm::Greedy::__anonb360769d010a
__anonc8737335010a	swisstm/src/dynamic/transaction.h	/^			CACHE_LINE_ALIGNED union {$/;"	u	class:wlpdstm::TransactionDynamic
__anonc8737335020a	swisstm/src/dynamic/transaction.h	/^			CACHE_LINE_ALIGNED union {$/;"	u	class:wlpdstm::TransactionDynamic
__anonc8737335030a	swisstm/src/dynamic/transaction.h	/^			CACHE_LINE_ALIGNED union {$/;"	u	class:wlpdstm::TransactionDynamic
__anonc8737335040a	swisstm/src/dynamic/transaction.h	/^			CACHE_LINE_ALIGNED union {$/;"	u	class:wlpdstm::TransactionDynamic
__anonc8737335050a	swisstm/src/dynamic/transaction.h	/^			CACHE_LINE_ALIGNED union {$/;"	u	class:wlpdstm::TransactionDynamic
__anonc8737335060a	swisstm/src/dynamic/transaction.h	/^			CACHE_LINE_ALIGNED union {$/;"	u	class:wlpdstm::TransactionDynamic
__anonc9561e00010a	swisstm/src/p-tlrw/cm.h	/^		union {$/;"	u	class:wlpdstm::Greedy
__anonc9561e000208	swisstm/src/p-tlrw/cm.h	/^			struct {$/;"	s	union:wlpdstm::Greedy::__anonc9561e00010a
__anonca9151d0010a	swisstm/src/common/atomic.h	/^			union {$/;"	u	class:wlpdstm::PaddedSpinTryLock
__anoncebd37810103	swisstm/src/mubench/types.h	/^enum {$/;"	g
__anoncf01a599010a	swisstm/src/tlrw/transaction.h	/^		typedef union {$/;"	u	class:wlpdstm::TransactionTlrw
__anoncf01a599020a	swisstm/src/tlrw/transaction.h	/^			CACHE_LINE_ALIGNED union {$/;"	u	class:wlpdstm::TransactionTlrw
__anoned8f9a5d0108	swisstm/src/stm_api/read_write.h	/^		struct {$/;"	s	union:wlpdstm::read_write_conv_u
__anoned8f9a5d0208	swisstm/src/stm_api/read_write.h	/^		struct {$/;"	s	union:wlpdstm::read_write_conv_u
__anoned8f9a5d0308	swisstm/src/stm_api/read_write.h	/^		struct {$/;"	s	union:wlpdstm::read_write_conv_u
__anoned8f9a5d0408	swisstm/src/stm_api/read_write.h	/^		struct {$/;"	s	union:wlpdstm::read_write_conv_u
__anoned8f9a5d0508	swisstm/src/stm_api/read_write.h	/^		struct {$/;"	s	union:wlpdstm::read_write_conv_u
__anoned8f9a5d0608	swisstm/src/stm_api/read_write.h	/^		struct {$/;"	s	union:wlpdstm::read_write_conv_u
__anoned8f9a5d0708	swisstm/src/stm_api/read_write.h	/^		struct {$/;"	s	union:wlpdstm::read_write_conv_u
__anoned8f9a5d0808	swisstm/src/stm_api/read_write.h	/^		struct {$/;"	s	union:wlpdstm::read_write_conv_u
__anoned8f9a5d0908	swisstm/src/stm_api/read_write.h	/^		struct {$/;"	s	union:wlpdstm::read_write_conv_u
__anoned8f9a5d0a08	swisstm/src/stm_api/read_write.h	/^		struct {$/;"	s	union:wlpdstm::read_write_conv_u
__anoned8f9a5d0b08	swisstm/src/stm_api/read_write.h	/^		struct {$/;"	s	union:wlpdstm::read_write_conv_u
__anoned9e1f2b0103	swisstm/src/mubench/rbtree.c	/^enum {$/;"	g	file:
__fill_random_buf	zipf/rand.c	/^void __fill_random_buf(void *buf, unsigned int len, unsigned long seed)$/;"	f	typeref:typename:void
__flist_add	zipf/flist.h	/^static inline void __flist_add(struct flist_head *new_entry,$/;"	f	typeref:typename:void
__flist_del	zipf/flist.h	/^static inline void __flist_del(struct flist_head *prev,$/;"	f	typeref:typename:void
__flist_splice	zipf/flist.h	/^static inline void __flist_splice(const struct flist_head *list,$/;"	f	typeref:typename:void
__frand32_copy	zipf/rand.h	/^static inline void __frand32_copy(struct taus88_state *dst,$/;"	f	typeref:typename:void
__frand64_copy	zipf/rand.h	/^static inline void __frand64_copy(struct taus258_state *dst,$/;"	f	typeref:typename:void
__hash_long	zipf/hash.h	/^static inline unsigned long __hash_long(uint64_t val)$/;"	f	typeref:typename:unsigned long
__hash_u64	zipf/hash.h	/^static inline uint64_t __hash_u64(uint64_t val)$/;"	f	typeref:typename:uint64_t
__init_rand32	zipf/rand.c	/^static void __init_rand32(struct taus88_state *state, unsigned int seed)$/;"	f	typeref:typename:void	file:
__init_rand64	zipf/rand.c	/^static void __init_rand64(struct taus258_state *state, uint64_t seed)$/;"	f	typeref:typename:void	file:
__jhash_final	zipf/hash.h	/^#define __jhash_final(/;"	d
__jhash_mix	zipf/hash.h	/^#define __jhash_mix(/;"	d
__list_find	list_harris.c	/^#define __list_find(/;"	d	file:
__rand	zipf/rand.h	/^static inline uint64_t __rand(struct frand_state *state)$/;"	f	typeref:typename:uint64_t
__rand32	zipf/rand.h	/^static inline unsigned int __rand32(struct taus88_state *state)$/;"	f	typeref:typename:unsigned int
__rand64	zipf/rand.h	/^static inline uint64_t __rand64(struct taus258_state *state)$/;"	f	typeref:typename:uint64_t
__rand_0_1	zipf/rand.h	/^static inline double __rand_0_1(struct frand_state *state)$/;"	f	typeref:typename:double
__read_tsc	rlu.c	/^__read_tsc(void)$/;"	f	typeref:typename:uint64_t	file:
__seed	zipf/rand.c	/^static inline uint64_t __seed(uint64_t x, uint64_t m)$/;"	f	typeref:typename:uint64_t	file:
_inner_beginTransaction	swisstm/src/intel/itm.cc	/^	uint32 _ITM_CALL_CONVENTION _inner_beginTransaction(_ITM_transaction *td,$/;"	f	typeref:typename:uint32 _ITM_CALL_CONVENTION
_inner_jmpReturn	swisstm/src/intel/itm.cc	/^	uint32 _ITM_CALL_CONVENTION _inner_jmpReturn(_ITM_transaction *td) {$/;"	f	typeref:typename:uint32 _ITM_CALL_CONVENTION
_rlu_new_node	tree_rlu.c	/^static node_t *_rlu_new_node(int key)$/;"	f	typeref:typename:node_t *	file:
abort	rlu.c	/^static void abort(void)$/;"	f	typeref:typename:void	file:
abort_file	run_bench.py	/^        abort_file = open(final_dir + "abort.dat", "w+")$/;"	v
aborted	swisstm/src/epochstm/cm.h	/^				volatile bool aborted;$/;"	m	struct:wlpdstm::Greedy::__anonb360769d010a::__anonb360769d0208	typeref:typename:volatile bool
aborted	swisstm/src/p-tlrw/cm.h	/^				volatile bool aborted;$/;"	m	struct:wlpdstm::Greedy::__anonc9561e00010a::__anonc9561e000208	typeref:typename:volatile bool
aborted	swisstm/src/rw/cm.h	/^				volatile bool aborted;$/;"	m	struct:wlpdstm::Greedy::__anon85aa60e3010a::__anon85aa60e30208	typeref:typename:volatile bool
aborted	swisstm/src/tlrw/cm.h	/^				volatile bool aborted;$/;"	m	struct:wlpdstm::Greedy::__anonabcb3183010a::__anonabcb31830208	typeref:typename:volatile bool
aborted_externally	swisstm/src/dynamic/transaction.h	/^				volatile bool aborted_externally;$/;"	m	union:wlpdstm::TransactionDynamic::__anonc8737335030a	typeref:typename:volatile bool
aborted_externally	swisstm/src/stm/transaction_mixinv.h	/^			volatile bool aborted_externally;$/;"	m	union:wlpdstm::TxMixinv::__anon87a360de030a	typeref:typename:volatile bool
add_or_change_slot	tree_vrbtree.c	/^add_or_change_slot(node_t *node, node_t *left, node_t *right, node_t *parent,$/;"	f	typeref:typename:void	file:
add_or_change_slot_child	tree_vrbtree.c	/^add_or_change_slot_child(node_t *node, node_t *old_child, node_t *new_child,$/;"	f	typeref:typename:void	file:
add_or_change_slot_parent	tree_vrbtree.c	/^add_or_change_slot_parent(node_t *node, node_t *parent, vtree_pthread_data_t *vtree_data)$/;"	f	typeref:typename:void	file:
add_slot	list_move_vlist.c	/^static inline void add_slot(node_t *node, node_t *next, vlist_pthread_data_t *vlist_data)$/;"	f	typeref:typename:void	file:
add_slot	list_vlist.c	/^static inline void add_slot(node_t *node, node_t *next, vlist_pthread_data_t *vlist_data)$/;"	f	typeref:typename:void	file:
add_slot	tree_vrbtree.c	/^add_slot(node_t *node, node_t *left, node_t *right, node_t *parent,$/;"	f	typeref:struct:vtree_slot *	file:
add_slot	tree_vtree.c	/^static inline void add_slot(node_t *node, node_t *left_child, node_t *right_child,$/;"	f	typeref:typename:void	file:
address	swisstm/src/dynamic/log.h	/^		Word *address;$/;"	m	struct:wlpdstm::WriteWordLogEntry	typeref:typename:Word *
address	swisstm/src/stm/transaction_mixinv.h	/^			Word *address;$/;"	m	struct:wlpdstm::TxMixinv::WriteWordLogEntry	typeref:typename:Word *
after	swisstm/src/common/perfcnt/perf_cnt_solaris.h	/^			cpc_buf_t *diff, *after, *before;$/;"	m	class:wlpdstm::PerfCntSolaris	typeref:typename:cpc_buf_t *
alg_type	config-list.json	/^                        "alg_type" : ["timestone"],$/;"	a	object:list10k.0
alg_type	config-list.json	/^                        "alg_type" : ["timestone"],$/;"	a	object:list1k.0
alg_type	config-list.json	/^                        "alg_type" : ["timestone"],$/;"	a	object:list50k.0
alg_type	config-tree.json	/^                        "alg_type" : ["mvrlu_ordo"],$/;"	a	object:tree10k.0
alg_type	config.json	/^                        "alg_type" : ["mvrlu"],$/;"	a	object:tree10k-aug10.0
alg_type	list.json	/^                        "alg_type" : ["mvrlu_ordo_list", "rcu_list", "rlu_list", "vlist_list", "/;"	a	object:list100k.0
alg_type	list.json	/^                        "alg_type" : ["mvrlu_ordo_list", "rcu_list", "rlu_list", "vlist_list", "/;"	a	object:list10k.0
alg_type	list.json	/^                        "alg_type" : ["mvrlu_ordo_list", "rcu_list", "rlu_list", "vlist_list", "/;"	a	object:list1k.0
all	Makefile	/^all: $(BINS)$/;"	t
all	swisstm/Makefile	/^all: $(INCLUDE_OUT_FILE) $(LIB_DIR)\/libwlpdstm.a $(OBJ_DIR)\/intset-rbtree $(OBJ_DIR)\/rbforest$/;"	t
alloc_pthread_data	list_harris.c	/^pthread_data_t *alloc_pthread_data(void)$/;"	f	typeref:typename:pthread_data_t *
alloc_pthread_data	list_move_rlu.c	/^pthread_data_t *alloc_pthread_data(void)$/;"	f	typeref:typename:pthread_data_t *
alloc_pthread_data	list_move_spinlock.c	/^pthread_data_t *alloc_pthread_data(void)$/;"	f	typeref:typename:pthread_data_t *
alloc_pthread_data	list_move_vlist.c	/^pthread_data_t *alloc_pthread_data(void)$/;"	f	typeref:typename:pthread_data_t *
alloc_pthread_data	list_rcu.c	/^pthread_data_t *alloc_pthread_data(void)$/;"	f	typeref:typename:pthread_data_t *
alloc_pthread_data	list_rlu.c	/^pthread_data_t *alloc_pthread_data(void)$/;"	f	typeref:typename:pthread_data_t *
alloc_pthread_data	list_spinlock.c	/^pthread_data_t *alloc_pthread_data(void)$/;"	f	typeref:typename:pthread_data_t *
alloc_pthread_data	list_vlist.c	/^pthread_data_t *alloc_pthread_data(void)$/;"	f	typeref:typename:pthread_data_t *
alloc_pthread_data	tree_bonsai.c	/^pthread_data_t *alloc_pthread_data(void)$/;"	f	typeref:typename:pthread_data_t *
alloc_pthread_data	tree_citrus_rlu.c	/^pthread_data_t *alloc_pthread_data(void)$/;"	f	typeref:typename:pthread_data_t *
alloc_pthread_data	tree_prcu.c	/^pthread_data_t *alloc_pthread_data(void)$/;"	f	typeref:typename:pthread_data_t *
alloc_pthread_data	tree_rcu.c	/^pthread_data_t *alloc_pthread_data(void)$/;"	f	typeref:typename:pthread_data_t *
alloc_pthread_data	tree_rlu.c	/^pthread_data_t *alloc_pthread_data(void)$/;"	f	typeref:typename:pthread_data_t *
alloc_pthread_data	tree_vrbtree.c	/^pthread_data_t *alloc_pthread_data(void)$/;"	f	typeref:typename:pthread_data_t *
alloc_pthread_data	tree_vtree.c	/^pthread_data_t *alloc_pthread_data(void)$/;"	f	typeref:typename:pthread_data_t *
allocate_free	swisstm/src/common/log.h	/^	inline void Log<T, INITIAL_SIZE, GROWTH_FACTOR>::allocate_free(int size) {$/;"	f	class:wlpdstm::Log	typeref:typename:void
alloced_in_tx	swisstm/src/dynamic/memory/memory_impl.h	/^			PtrBuffer *alloced_in_tx;$/;"	m	class:wlpdstm::MemoryManager	typeref:typename:PtrBuffer *
alloced_in_tx	swisstm/src/dynamic/memory/memory_impl_priv.h	/^	PtrBuffer *alloced_in_tx;$/;"	m	class:wlpdstm::MemoryManager	typeref:typename:PtrBuffer *
alloced_in_tx	swisstm/src/epochstm/memory/memory_epoch.h	/^			MemoryBlock *alloced_in_tx;$/;"	m	class:wlpdstm::MemoryManager	typeref:typename:MemoryBlock *
alloced_in_tx	swisstm/src/epochstm/memory/memory_txend.h	/^	PtrBuffer *alloced_in_tx;$/;"	m	class:wlpdstm::MemoryManager	typeref:typename:PtrBuffer *
alloced_in_tx	swisstm/src/p-tlrw/memory/memory_txend.h	/^	PtrBuffer *alloced_in_tx;$/;"	m	class:wlpdstm::MemoryManager	typeref:typename:PtrBuffer *
alloced_in_tx	swisstm/src/rw/memory/memory_txend.h	/^	PtrBuffer *alloced_in_tx;$/;"	m	class:wlpdstm::MemoryManager	typeref:typename:PtrBuffer *
alloced_in_tx	swisstm/src/stm/memory/memory_impl.h	/^			PtrBuffer *alloced_in_tx;$/;"	m	class:wlpdstm::MemoryManager	typeref:typename:PtrBuffer *
alloced_in_tx	swisstm/src/stm/memory/memory_impl_priv.h	/^	PtrBuffer *alloced_in_tx;$/;"	m	class:wlpdstm::MemoryManager	typeref:typename:PtrBuffer *
alloced_in_tx	swisstm/src/tlrw/memory/memory_txend.h	/^	PtrBuffer *alloced_in_tx;$/;"	m	class:wlpdstm::MemoryManager	typeref:typename:PtrBuffer *
alloced_in_tx_old	swisstm/src/dynamic/memory/memory_impl.h	/^			PtrBuffer *alloced_in_tx_old;$/;"	m	class:wlpdstm::MemoryManager	typeref:typename:PtrBuffer *
alloced_in_tx_old	swisstm/src/dynamic/memory/memory_impl_priv.h	/^	PtrBuffer *alloced_in_tx_old;$/;"	m	class:wlpdstm::MemoryManager	typeref:typename:PtrBuffer *
alloced_in_tx_old	swisstm/src/epochstm/memory/memory_txend.h	/^	PtrBuffer *alloced_in_tx_old;$/;"	m	class:wlpdstm::MemoryManager	typeref:typename:PtrBuffer *
alloced_in_tx_old	swisstm/src/p-tlrw/memory/memory_txend.h	/^	PtrBuffer *alloced_in_tx_old;$/;"	m	class:wlpdstm::MemoryManager	typeref:typename:PtrBuffer *
alloced_in_tx_old	swisstm/src/rw/memory/memory_txend.h	/^	PtrBuffer *alloced_in_tx_old;$/;"	m	class:wlpdstm::MemoryManager	typeref:typename:PtrBuffer *
alloced_in_tx_old	swisstm/src/stm/memory/memory_impl.h	/^			PtrBuffer *alloced_in_tx_old;$/;"	m	class:wlpdstm::MemoryManager	typeref:typename:PtrBuffer *
alloced_in_tx_old	swisstm/src/stm/memory/memory_impl_priv.h	/^	PtrBuffer *alloced_in_tx_old;$/;"	m	class:wlpdstm::MemoryManager	typeref:typename:PtrBuffer *
alloced_in_tx_old	swisstm/src/tlrw/memory/memory_txend.h	/^	PtrBuffer *alloced_in_tx_old;$/;"	m	class:wlpdstm::MemoryManager	typeref:typename:PtrBuffer *
arch_random	zipf/rand.c	/^int arch_random;$/;"	v	typeref:typename:int
array	swisstm/src/common/log.h	/^					T *array;$/;"	m	class:wlpdstm::Log::iterator	typeref:typename:T *
array	swisstm/src/common/log.h	/^			T *array;$/;"	m	class:wlpdstm::Log	typeref:typename:T *
atomic_cas_acquire	swisstm/src/common/atomic.h	/^#define atomic_cas_acquire(/;"	d
atomic_cas_full	swisstm/src/common/atomic.h	/^#define atomic_cas_full(/;"	d
atomic_cas_no_barrier	swisstm/src/common/atomic.h	/^#define atomic_cas_no_barrier(/;"	d
atomic_cas_release	swisstm/src/common/atomic.h	/^#define atomic_cas_release(/;"	d
atomic_load_acquire	swisstm/src/common/atomic.h	/^#define atomic_load_acquire(/;"	d
atomic_load_no_barrier	swisstm/src/common/atomic.h	/^#define atomic_load_no_barrier(/;"	d
atomic_store_full	swisstm/src/common/atomic.h	/^#define atomic_store_full(/;"	d
atomic_store_no_barrier	swisstm/src/common/atomic.h	/^#define atomic_store_no_barrier(/;"	d
atomic_store_release	swisstm/src/common/atomic.h	/^#define atomic_store_release(/;"	d
avg_freq	swisstm/src/common/sampling.h	/^			unsigned avg_freq;$/;"	m	class:wlpdstm::RandomTxSampling	typeref:typename:unsigned
aword	swisstm/src/common/atomic.h	/^#define aword /;"	d
b16	swisstm/src/stm_api/read_write.h	/^			uint16_t b16[4];$/;"	m	struct:wlpdstm::read_write_conv_u::__anoned8f9a5d0108	typeref:typename:uint16_t[4]
b16	swisstm/src/stm_api/read_write.h	/^		uint16_t b16[8];$/;"	m	union:wlpdstm::read_write_conv_u	typeref:typename:uint16_t[8]
b32	swisstm/src/stm_api/read_write.h	/^			uint32_t b32[2];$/;"	m	struct:wlpdstm::read_write_conv_u::__anoned8f9a5d0208	typeref:typename:uint32_t[2]
b32	swisstm/src/stm_api/read_write.h	/^			uint32_t b32[2];$/;"	m	struct:wlpdstm::read_write_conv_u::__anoned8f9a5d0308	typeref:typename:uint32_t[2]
b32	swisstm/src/stm_api/read_write.h	/^			uint32_t b32[2];$/;"	m	struct:wlpdstm::read_write_conv_u::__anoned8f9a5d0408	typeref:typename:uint32_t[2]
b32	swisstm/src/stm_api/read_write.h	/^		uint32_t b32[4];$/;"	m	union:wlpdstm::read_write_conv_u	typeref:typename:uint32_t[4]
b64	swisstm/src/stm_api/read_write.h	/^			uint64_t b64;$/;"	m	struct:wlpdstm::read_write_conv_u::__anoned8f9a5d0508	typeref:typename:uint64_t
b64	swisstm/src/stm_api/read_write.h	/^			uint64_t b64;$/;"	m	struct:wlpdstm::read_write_conv_u::__anoned8f9a5d0608	typeref:typename:uint64_t
b64	swisstm/src/stm_api/read_write.h	/^			uint64_t b64;$/;"	m	struct:wlpdstm::read_write_conv_u::__anoned8f9a5d0708	typeref:typename:uint64_t
b64	swisstm/src/stm_api/read_write.h	/^			uint64_t b64;$/;"	m	struct:wlpdstm::read_write_conv_u::__anoned8f9a5d0808	typeref:typename:uint64_t
b64	swisstm/src/stm_api/read_write.h	/^			uint64_t b64;$/;"	m	struct:wlpdstm::read_write_conv_u::__anoned8f9a5d0908	typeref:typename:uint64_t
b64	swisstm/src/stm_api/read_write.h	/^			uint64_t b64;$/;"	m	struct:wlpdstm::read_write_conv_u::__anoned8f9a5d0a08	typeref:typename:uint64_t
b64	swisstm/src/stm_api/read_write.h	/^			uint64_t b64;$/;"	m	struct:wlpdstm::read_write_conv_u::__anoned8f9a5d0b08	typeref:typename:uint64_t
b64	swisstm/src/stm_api/read_write.h	/^		uint64_t b64[2];$/;"	m	union:wlpdstm::read_write_conv_u	typeref:typename:uint64_t[2]
b8	swisstm/src/stm_api/read_write.h	/^		uint8_t  b8[16];$/;"	m	union:wlpdstm::read_write_conv_u	typeref:typename:uint8_t[16]
barrier	benchmark_list.h	/^	barrier_t *barrier;$/;"	m	struct:pthread_data	typeref:typename:barrier_t *
barrier	benchmark_list.h	/^typedef struct barrier {$/;"	s
barrier	benchmark_list_move.h	/^	barrier_t *barrier;$/;"	m	struct:pthread_data	typeref:typename:barrier_t *
barrier	benchmark_list_move.h	/^typedef struct barrier {$/;"	s
barrier	swisstm/src/mubench/intset-list-mv.c	/^  barrier_t *barrier;$/;"	m	struct:thread_data	typeref:typename:barrier_t *	file:
barrier	swisstm/src/mubench/intset-list-mv.c	/^typedef struct barrier {$/;"	s	file:
barrier	swisstm/src/mubench/intset.c	/^  barrier_t *barrier;$/;"	m	struct:thread_data	typeref:typename:barrier_t *	file:
barrier	swisstm/src/mubench/intset.c	/^typedef struct barrier {$/;"	s	file:
barrier_cross	benchmark_list.c	/^static void barrier_cross(barrier_t *b)$/;"	f	typeref:typename:void	file:
barrier_cross	benchmark_list_move.c	/^static void barrier_cross(barrier_t *b)$/;"	f	typeref:typename:void	file:
barrier_cross	swisstm/src/mubench/intset-list-mv.c	/^void barrier_cross(barrier_t *b)$/;"	f	typeref:typename:void
barrier_cross	swisstm/src/mubench/intset.c	/^void barrier_cross(barrier_t *b)$/;"	f	typeref:typename:void
barrier_init	benchmark_list.c	/^static void barrier_init(barrier_t *b, int n)$/;"	f	typeref:typename:void	file:
barrier_init	benchmark_list_move.c	/^static void barrier_init(barrier_t *b, int n)$/;"	f	typeref:typename:void	file:
barrier_init	swisstm/src/mubench/intset-list-mv.c	/^void barrier_init(barrier_t *b, int n)$/;"	f	typeref:typename:void
barrier_init	swisstm/src/mubench/intset.c	/^void barrier_init(barrier_t *b, int n)$/;"	f	typeref:typename:void
barrier_t	benchmark_list.h	/^} barrier_t;$/;"	t	typeref:struct:barrier
barrier_t	benchmark_list_move.h	/^} barrier_t;$/;"	t	typeref:struct:barrier
barrier_t	swisstm/src/mubench/barrier.h	/^union barrier_t {$/;"	u
barrier_t	swisstm/src/mubench/intset-list-mv.c	/^} barrier_t;$/;"	t	typeref:struct:barrier	file:
barrier_t	swisstm/src/mubench/intset.c	/^} barrier_t;$/;"	t	typeref:struct:barrier	file:
before	swisstm/src/common/perfcnt/perf_cnt_solaris.h	/^			cpc_buf_t *diff, *after, *before;$/;"	m	class:wlpdstm::PerfCntSolaris	typeref:typename:cpc_buf_t *
begin	swisstm/src/common/log.h	/^	inline typename Log<T, CHUNK_LENGTH, INIT>::iterator Log<T, CHUNK_LENGTH, INIT>::begin() const /;"	f	class:wlpdstm::Log	typeref:typename:Log<T,CHUNK_LENGTH,INIT>::iterator
begin	swisstm/src/common/log.h	/^	inline typename Log<T, INITIAL_SIZE, GROWTH_FACTOR>::iterator Log<T, INITIAL_SIZE, GROWTH_FACTO/;"	f	class:wlpdstm::Log	typeref:typename:Log<T,INITIAL_SIZE,GROWTH_FACTOR>::iterator
begin	swisstm/src/common/log.h	/^	inline typename Log<T, INITIAL_SIZE>::iterator Log<T, INITIAL_SIZE>::begin() const {$/;"	f	class:wlpdstm::Log	typeref:typename:Log<T,INITIAL_SIZE>::iterator
begin_transaction_jmpbuf	swisstm/src/intel/jmp.h	/^typedef struct begin_transaction_jmpbuf {$/;"	s
bench_thread	benchmark_list.c	/^static void *bench_thread(void *data)$/;"	f	typeref:typename:void *	file:
bench_thread	benchmark_list_move.c	/^static void *bench_thread(void *data)$/;"	f	typeref:typename:void *	file:
benchmark_list.o	Makefile	/^benchmark_list.o: benchmark_list.c benchmark_list.h$/;"	t
benchmark_list_harris	Makefile	/^benchmark_list_harris: rand.o zipf.o benchmark_list.o list_harris.o qsbr.o$/;"	t
benchmark_list_move.o	Makefile	/^benchmark_list_move.o: benchmark_list_move.c benchmark_list_move.h$/;"	t
benchmark_list_move_rlu	Makefile	/^benchmark_list_move_rlu: rand.o zipf.o benchmark_list_move.o list_move_rlu.o rlu.o$/;"	t
benchmark_list_move_spinlock	Makefile	/^benchmark_list_move_spinlock: rand.o zipf.o benchmark_list_move.o list_move_spinlock.o$/;"	t
benchmark_list_move_swisstm	Makefile	/^benchmark_list_move_swisstm: benchmark_list_swisstm$/;"	t
benchmark_list_move_vlist	Makefile	/^benchmark_list_move_vlist: rand.o zipf.o benchmark_list_move.o list_move_vlist.o qsbr.o$/;"	t
benchmark_list_mvrlu_ordo	Makefile	/^benchmark_list_mvrlu_ordo: rand.o zipf.o benchmark_list.o list_mvrlu.o $(LIB_DIR)\/libts.a$/;"	t
benchmark_list_rcu	Makefile	/^benchmark_list_rcu: rand.o zipf.o benchmark_list.o list_rcu.o$/;"	t
benchmark_list_rlu	Makefile	/^benchmark_list_rlu: rand.o zipf.o benchmark_list.o list_rlu.o rlu.o$/;"	t
benchmark_list_rlu_ordo	Makefile	/^benchmark_list_rlu_ordo: rand.o zipf.o benchmark_list.o list_rlu.o rlu_ordo.o$/;"	t
benchmark_list_spinlock	Makefile	/^benchmark_list_spinlock: rand.o zipf.o benchmark_list.o list_spinlock.o$/;"	t
benchmark_list_swisstm	Makefile	/^benchmark_list_swisstm:$/;"	t
benchmark_list_timestone	Makefile	/^benchmark_list_timestone: rand.o zipf.o benchmark_list.o list_rlu.o rlu.o$/;"	t
benchmark_list_ts.o	Makefile	/^benchmark_list_ts.o: benchmark_list.c benchmark_list.h$/;"	t
benchmark_list_vlist	Makefile	/^benchmark_list_vlist: rand.o zipf.o benchmark_list.o list_vlist.o qsbr.o$/;"	t
benchmark_tree_bonsai	Makefile	/^benchmark_tree_bonsai: rand.o zipf.o benchmark_list.o tree_bonsai.o$/;"	t
benchmark_tree_citrus_mvrlu	Makefile	/^benchmark_tree_citrus_mvrlu: rand.o zipf.o benchmark_list.o tree_citrus_mvrlu.o $(LIB_DIR)\/libt/;"	t
benchmark_tree_citrus_rlu	Makefile	/^benchmark_tree_citrus_rlu: rand.o zipf.o benchmark_list.o tree_citrus_rlu.o rlu.o$/;"	t
benchmark_tree_mvrlu	Makefile	/^benchmark_tree_mvrlu: rand.o zipf.o benchmark_list_ts.o tree_mvrlu.o $(LIB_DIR)\/libts.a$/;"	t
benchmark_tree_prcu_d	Makefile	/^benchmark_tree_prcu_d: rand.o zipf.o benchmark_list.o tree_prcu_d.o$/;"	t
benchmark_tree_prcu_deer	Makefile	/^benchmark_tree_prcu_deer: rand.o zipf.o benchmark_list.o tree_prcu_deer.o$/;"	t
benchmark_tree_prcu_eer	Makefile	/^benchmark_tree_prcu_eer: rand.o zipf.o benchmark_list.o tree_prcu_eer.o$/;"	t
benchmark_tree_rcu	Makefile	/^benchmark_tree_rcu: rand.o zipf.o benchmark_list.o tree_rcu.o$/;"	t
benchmark_tree_rlu	Makefile	/^benchmark_tree_rlu: rand.o zipf.o benchmark_list.o tree_rlu.o rlu.o$/;"	t
benchmark_tree_rlu_ordo	Makefile	/^benchmark_tree_rlu_ordo: rand.o zipf.o benchmark_list.o tree_rlu.o rlu_ordo.o$/;"	t
benchmark_tree_swisstm	Makefile	/^benchmark_tree_swisstm: benchmark_list_swisstm$/;"	t
benchmark_tree_vrbtree	Makefile	/^benchmark_tree_vrbtree: rand.o zipf.o benchmark_list.o tree_vrbtree.o qsbr.o$/;"	t
benchmark_tree_vtree	Makefile	/^benchmark_tree_vtree: rand.o zipf.o benchmark_list.o tree_vtree.o qsbr.o$/;"	t
block_buf	swisstm/src/epochstm/memory/memory_epoch.h	/^			MemoryBlockBuf *block_buf;$/;"	m	class:wlpdstm::MemoryManager	typeref:typename:MemoryBlockBuf *
block_size	zipf/test.c	/^static unsigned long block_size = 1;$/;"	v	typeref:typename:unsigned long	file:
bonsai_delete	tree_bonsai.c	/^static node_t *bonsai_delete(node_t *node, int key, node_t **deleted, rcu_pthread_data_t *rcu_da/;"	f	typeref:typename:node_t *	file:
bonsai_delete_succ	tree_bonsai.c	/^static node_t *bonsai_delete_succ(node_t *node, node_t **succ, rcu_pthread_data_t *rcu_data)$/;"	f	typeref:typename:node_t *	file:
bonsai_doubleL	tree_bonsai.c	/^static node_t *bonsai_doubleL(node_t *left, node_t *right, int key, rcu_pthread_data_t *rcu_data/;"	f	typeref:typename:node_t *	file:
bonsai_doubleR	tree_bonsai.c	/^static node_t *bonsai_doubleR(node_t *left, node_t *right, int key, rcu_pthread_data_t *rcu_data/;"	f	typeref:typename:node_t *	file:
bonsai_get_size	tree_bonsai.c	/^#define bonsai_get_size(/;"	d	file:
bonsai_insert	tree_bonsai.c	/^static node_t *bonsai_insert(node_t *node, int key, int *rv, rcu_pthread_data_t *rcu_data)$/;"	f	typeref:typename:node_t *	file:
bonsai_mkbalanced	tree_bonsai.c	/^bonsai_mkbalanced(node_t *cur, node_t *left, node_t *right,$/;"	f	typeref:typename:node_t *	file:
bonsai_mkbalancedL	tree_bonsai.c	/^static node_t *bonsai_mkbalancedL(node_t *left, node_t *right, int key, rcu_pthread_data_t *rcu_/;"	f	typeref:typename:node_t *	file:
bonsai_mkbalancedR	tree_bonsai.c	/^static node_t *bonsai_mkbalancedR(node_t *left, node_t *right, int key, rcu_pthread_data_t *rcu_/;"	f	typeref:typename:node_t *	file:
bonsai_mknode	tree_bonsai.c	/^static node_t *bonsai_mknode(node_t *left, node_t *right, int key)$/;"	f	typeref:typename:node_t *	file:
bonsai_singleL	tree_bonsai.c	/^static node_t *bonsai_singleL(node_t *left, node_t *right, int key, rcu_pthread_data_t *rcu_data/;"	f	typeref:typename:node_t *	file:
bonsai_singleR	tree_bonsai.c	/^static node_t *bonsai_singleR(node_t *left, node_t *right, int key, rcu_pthread_data_t *rcu_data/;"	f	typeref:typename:node_t *	file:
bonsai_tree	tree_bonsai.c	/^typedef struct bonsai_tree {$/;"	s	file:
bonsai_tree_t	tree_bonsai.c	/^} bonsai_tree_t;$/;"	t	typeref:struct:bonsai_tree	file:
bool_t	swisstm/src/mubench/types.h	/^typedef long bool_t;$/;"	t	typeref:typename:long
buckets	config-list.json	/^                        "buckets" : 1,$/;"	n	object:list10k.0
buckets	config-list.json	/^                        "buckets" : 1,$/;"	n	object:list1k.0
buckets	config-list.json	/^                        "buckets" : 1,$/;"	n	object:list50k.0
buckets	config-tree.json	/^                        "buckets" : 1,$/;"	n	object:tree10k.0
buckets	config.json	/^                        "buckets" : 1,$/;"	n	object:tree10k-aug10.0
buckets	list.json	/^                        "buckets" : 1,$/;"	n	object:list100k.0
buckets	list.json	/^                        "buckets" : 1,$/;"	n	object:list10k.0
buckets	list.json	/^                        "buckets" : 1,$/;"	n	object:list1k.0
buffer	rlu.h	/^	volatile unsigned char buffer[RLU_MAX_WRITE_SET_BUFFER_SIZE];$/;"	m	struct:obj_list	typeref:typename:volatile unsigned char[]
bytes	swisstm/src/common/constants.h	/^		uint8_t bytes[BYTES_IN_WORD];$/;"	m	union:wlpdstm::word_to_bytes	typeref:typename:uint8_t[]
c	swisstm/src/mubench/rbtree.h	/^    intptr_t c;$/;"	m	struct:node	typeref:typename:intptr_t
cache_misses	swisstm/src/common/perfcnt/perf_cnt_papi.h	/^		uint64_t cache_misses;$/;"	m	class:wlpdstm::PerfCntPapi	typeref:typename:uint64_t
cache_misses	swisstm/src/common/perfcnt/perf_cnt_solaris.h	/^			uint64_t cache_misses;$/;"	m	class:wlpdstm::PerfCntSolaris	typeref:typename:uint64_t
cache_misses_ind	swisstm/src/common/perfcnt/perf_cnt_solaris.h	/^			int cache_misses_ind;$/;"	m	class:wlpdstm::PerfCntSolaris	typeref:typename:int
calculate_parent_ts	swisstm/src/stm/privatization_tree.h	/^inline Word wlpdstm::PrivatizationTree::calculate_parent_ts(Word my_ts, Word sibling_ts) {$/;"	f	class:wlpdstm::PrivatizationTree	typeref:typename:Word
calloc	swisstm/src/mubench/tm.h	/^#    define calloc(/;"	d
cas_lock	swisstm/src/common/lock.h	/^	class cas_lock {$/;"	c	namespace:wlpdstm
change_node_parent	tree_vrbtree.c	/^#define change_node_parent(/;"	d	file:
child	tree_citrus_rlu.c	/^	struct node *child[2];$/;"	m	struct:node	typeref:struct:node * [2]	file:
child	tree_prcu.c	/^	struct node *child[2] __attribute__((aligned(16)));$/;"	m	struct:node	typeref:struct:node * [2]	file:
child	tree_rcu.c	/^	struct node *child[2] __attribute__((aligned(16)));$/;"	m	struct:node	typeref:struct:node * [2]	file:
child	tree_rlu.c	/^	struct node *child[2];$/;"	m	struct:node	typeref:struct:node * [2]	file:
child	tree_vrbtree.c	/^	struct node *child[2];$/;"	m	struct:vtree_slot	typeref:struct:node * [2]	file:
child	tree_vtree.c	/^	struct node *child[2];$/;"	m	struct:vtree_slot	typeref:struct:node * [2]	file:
chunk	swisstm/src/common/log.h	/^					LogChunk *chunk;$/;"	m	class:wlpdstm::Log::iterator	typeref:typename:LogChunk *
chunk	swisstm/src/common/log.h	/^				LogChunk *chunk;$/;"	m	class:wlpdstm::Log::rev_iterator	typeref:typename:LogChunk *
clean	Makefile	/^clean:$/;"	t
clean	swisstm/Makefile	/^clean:$/;"	t
cleanup_thread	swisstm/src/p-tlrw/transaction.h	/^			pthread_t cleanup_thread;$/;"	m	class:wlpdstm::TransactionTlrw	typeref:typename:pthread_t
cleanup_tx	swisstm/src/p-tlrw/transaction.h	/^					volatile TxCounter cleanup_tx;$/;"	m	struct:wlpdstm::TransactionTlrw::__anon7ebeeeb6030a::__anon7ebeeeb60408	typeref:typename:volatile TxCounter
clear	swisstm/src/common/log.h	/^	inline void Log<T, CHUNK_LENGTH, INIT>::clear() {$/;"	f	class:wlpdstm::Log	typeref:typename:void
clear	swisstm/src/common/log.h	/^	inline void Log<T, INITIAL_SIZE, GROWTH_FACTOR>::clear() {$/;"	f	class:wlpdstm::Log	typeref:typename:void
clear	swisstm/src/common/log.h	/^	inline void Log<T, INITIAL_SIZE>::clear() {$/;"	f	class:wlpdstm::Log	typeref:typename:void
clear	swisstm/src/dynamic/lazy/hashtable.h	/^inline void wlpdstm::Hashtable<VAL, SIZE>::clear() {$/;"	f	class:wlpdstm::Hashtable	typeref:typename:void
clear	swisstm/src/dynamic/log.h	/^inline void wlpdstm::WriteLog::clear() {$/;"	f	class:wlpdstm::WriteLog	typeref:typename:void
cm	swisstm/src/epochstm/transaction.h	/^			CACHE_LINE_ALIGNED ContentionManager cm;$/;"	m	class:wlpdstm::TransactionEpoch	typeref:typename:CACHE_LINE_ALIGNED ContentionManager
cm	swisstm/src/p-tlrw/transaction.h	/^			CACHE_LINE_ALIGNED ContentionManager cm;$/;"	m	class:wlpdstm::TransactionTlrw	typeref:typename:CACHE_LINE_ALIGNED ContentionManager
cm	swisstm/src/rw/transaction.h	/^			CACHE_LINE_ALIGNED ContentionManager cm;$/;"	m	class:wlpdstm::TransactionRw	typeref:typename:CACHE_LINE_ALIGNED ContentionManager
cm	swisstm/src/tlrw/transaction.h	/^			CACHE_LINE_ALIGNED ContentionManager cm;$/;"	m	class:wlpdstm::TransactionTlrw	typeref:typename:CACHE_LINE_ALIGNED ContentionManager
cm_phase	swisstm/src/dynamic/transaction.h	/^			CmPhase cm_phase;$/;"	m	class:wlpdstm::TransactionDynamic	typeref:typename:CmPhase
cm_phase	swisstm/src/stm/transaction_mixinv.h	/^		CmPhase cm_phase;$/;"	m	class:wlpdstm::TxMixinv	typeref:typename:CmPhase
cm_ts	swisstm/src/dynamic/transaction.cc	/^CACHE_LINE_ALIGNED wlpdstm::GlobalTimestamp wlpdstm::TransactionDynamic::cm_ts;$/;"	m	class:wlpdstm::TransactionDynamic	typeref:typename:CACHE_LINE_ALIGNED wlpdstm::GlobalTimestamp
cm_ts	swisstm/src/dynamic/transaction.h	/^			static GlobalTimestamp cm_ts;$/;"	m	class:wlpdstm::TransactionDynamic	typeref:typename:GlobalTimestamp
cm_ts	swisstm/src/stm/transaction_mixinv.cc	/^CACHE_LINE_ALIGNED wlpdstm::GlobalTimestamp wlpdstm::TxMixinv::cm_ts;$/;"	m	class:wlpdstm::TxMixinv	typeref:typename:CACHE_LINE_ALIGNED wlpdstm::GlobalTimestamp
cm_ts	swisstm/src/stm/transaction_mixinv.h	/^		static GlobalTimestamp cm_ts;$/;"	m	class:wlpdstm::TxMixinv	typeref:typename:GlobalTimestamp
cmd	run_tests.py	/^            cmd = 'cp %s\/* %s' %(LLIST_SCRIPT, result_dir)$/;"	v
cmd	run_tests.py	/^        cmd= 'cd %s && sh extr_txs_tree.sh && cd -'%result_dir$/;"	v
cmd_line_args_t	swisstm/src/mubench/rbforest.cc	/^struct cmd_line_args_t {$/;"	s	file:
cmd_numa_prefix	run_tests.py	/^def cmd_numa_prefix(threads_num):$/;"	f
colorOf	swisstm/src/mubench/rbtree.c	/^colorOf (node_t* n)$/;"	f	typeref:typename:int	file:
commit_ts	swisstm/src/dynamic/transaction.cc	/^CACHE_LINE_ALIGNED wlpdstm::GlobalTimestamp wlpdstm::TransactionDynamic::commit_ts;$/;"	m	class:wlpdstm::TransactionDynamic	typeref:typename:CACHE_LINE_ALIGNED wlpdstm::GlobalTimestamp
commit_ts	swisstm/src/dynamic/transaction.h	/^			static GlobalTimestamp commit_ts;$/;"	m	class:wlpdstm::TransactionDynamic	typeref:typename:GlobalTimestamp
commit_ts	swisstm/src/stm/transaction_mixinv.cc	/^CACHE_LINE_ALIGNED wlpdstm::GlobalTimestamp wlpdstm::TxMixinv::commit_ts;$/;"	m	class:wlpdstm::TxMixinv	typeref:typename:CACHE_LINE_ALIGNED wlpdstm::GlobalTimestamp
commit_ts	swisstm/src/stm/transaction_mixinv.h	/^		static GlobalTimestamp commit_ts;$/;"	m	class:wlpdstm::TxMixinv	typeref:typename:GlobalTimestamp
compare_and_swap_release	swisstm/src/common/atomic.h	/^inline uintptr_t wlpdstm::compare_and_swap_release(uintptr_t *addr, uintptr_t oldval, uintptr_t /;"	f	class:wlpdstm	typeref:typename:uintptr_t
complete	benchmark_list.h	/^	pthread_cond_t complete;$/;"	m	struct:barrier	typeref:typename:pthread_cond_t
complete	benchmark_list_move.h	/^	pthread_cond_t complete;$/;"	m	struct:barrier	typeref:typename:pthread_cond_t
complete	swisstm/src/mubench/intset-list-mv.c	/^  pthread_cond_t complete;$/;"	m	struct:barrier	typeref:typename:pthread_cond_t	file:
complete	swisstm/src/mubench/intset.c	/^  pthread_cond_t complete;$/;"	m	struct:barrier	typeref:typename:pthread_cond_t	file:
config_items	swisstm/src/common/configuration.h	/^			map<std::string, ConfigItem> config_items;$/;"	m	class:wlpdstm::Config	typeref:typename:map<std::string,ConfigItem>
consecutive_count	swisstm/src/common/profiling/adaptive.h	/^			unsigned consecutive_count;$/;"	m	class:wlpdstm::AdaptiveProfiling	typeref:typename:unsigned
consecutive_count	swisstm/src/common/profiling/non_tx_duration.h	/^			unsigned consecutive_count;$/;"	m	class:wlpdstm::NonTxDurationProfiling	typeref:typename:unsigned
consecutive_count	swisstm/src/common/profiling/tx_duration.h	/^			unsigned consecutive_count;$/;"	m	class:wlpdstm::TxDurationProfiling	typeref:typename:unsigned
consecutive_count	swisstm/src/dynamic/profiling/adaptive_dynamic.h	/^			unsigned consecutive_count;$/;"	m	class:wlpdstm::AdaptiveDynamicProfiling	typeref:typename:unsigned
consumed_energy	swisstm/src/dynamic/transaction.h	/^		uint64_t consumed_energy;$/;"	m	struct:wlpdstm::GreenCMQueueItem	typeref:typename:uint64_t
container_of	zipf/flist.h	/^#define container_of(/;"	d
contains	swisstm/src/common/log.h	/^	inline bool Log<T, CHUNK_LENGTH, INIT>::contains(const T *el) {$/;"	f	class:wlpdstm::Log	typeref:typename:bool
contains	swisstm/src/common/log.h	/^	inline bool Log<T, CHUNK_LENGTH>::contains(const T *el) {$/;"	f	class:wlpdstm::Log	typeref:typename:bool
cost_read_word_end	swisstm/src/common/profiling/adaptive.h	/^			uint64_t cost_read_word_end;$/;"	m	class:wlpdstm::AdaptiveProfiling	typeref:typename:uint64_t
cost_read_word_end	swisstm/src/dynamic/profiling/adaptive_dynamic.h	/^			uint64_t cost_read_word_end;$/;"	m	class:wlpdstm::AdaptiveDynamicProfiling	typeref:typename:uint64_t
cost_read_word_start	swisstm/src/common/profiling/adaptive.h	/^			uint64_t cost_read_word_start;			$/;"	m	class:wlpdstm::AdaptiveProfiling	typeref:typename:uint64_t
cost_read_word_start	swisstm/src/dynamic/profiling/adaptive_dynamic.h	/^			uint64_t cost_read_word_start;			$/;"	m	class:wlpdstm::AdaptiveDynamicProfiling	typeref:typename:uint64_t
cost_tx_abort_end	swisstm/src/common/profiling/adaptive.h	/^			uint64_t cost_tx_abort_end;$/;"	m	class:wlpdstm::AdaptiveProfiling	typeref:typename:uint64_t
cost_tx_abort_end	swisstm/src/common/profiling/tx_duration.h	/^			uint64_t cost_tx_abort_end;$/;"	m	class:wlpdstm::TxDurationProfiling	typeref:typename:uint64_t
cost_tx_abort_end	swisstm/src/dynamic/profiling/adaptive_dynamic.h	/^			uint64_t cost_tx_abort_end;$/;"	m	class:wlpdstm::AdaptiveDynamicProfiling	typeref:typename:uint64_t
cost_tx_abort_start	swisstm/src/common/profiling/adaptive.h	/^			uint64_t cost_tx_abort_start;$/;"	m	class:wlpdstm::AdaptiveProfiling	typeref:typename:uint64_t
cost_tx_abort_start	swisstm/src/dynamic/profiling/adaptive_dynamic.h	/^			uint64_t cost_tx_abort_start;$/;"	m	class:wlpdstm::AdaptiveDynamicProfiling	typeref:typename:uint64_t
cost_tx_commit	swisstm/src/common/profiling/non_tx_duration.h	/^			uint64_t cost_tx_commit;$/;"	m	class:wlpdstm::NonTxDurationProfiling	typeref:typename:uint64_t
cost_tx_commit_end	swisstm/src/common/profiling/adaptive.h	/^			uint64_t cost_tx_commit_end;$/;"	m	class:wlpdstm::AdaptiveProfiling	typeref:typename:uint64_t
cost_tx_commit_end	swisstm/src/common/profiling/tx_duration.h	/^			uint64_t cost_tx_commit_end;$/;"	m	class:wlpdstm::TxDurationProfiling	typeref:typename:uint64_t
cost_tx_commit_end	swisstm/src/dynamic/profiling/adaptive_dynamic.h	/^			uint64_t cost_tx_commit_end;$/;"	m	class:wlpdstm::AdaptiveDynamicProfiling	typeref:typename:uint64_t
cost_tx_commit_start	swisstm/src/common/profiling/adaptive.h	/^			uint64_t cost_tx_commit_start;$/;"	m	class:wlpdstm::AdaptiveProfiling	typeref:typename:uint64_t
cost_tx_commit_start	swisstm/src/dynamic/profiling/adaptive_dynamic.h	/^			uint64_t cost_tx_commit_start;$/;"	m	class:wlpdstm::AdaptiveDynamicProfiling	typeref:typename:uint64_t
cost_tx_free_end	swisstm/src/common/profiling/adaptive.h	/^			uint64_t cost_tx_free_end;$/;"	m	class:wlpdstm::AdaptiveProfiling	typeref:typename:uint64_t
cost_tx_free_end	swisstm/src/dynamic/profiling/adaptive_dynamic.h	/^			uint64_t cost_tx_free_end;$/;"	m	class:wlpdstm::AdaptiveDynamicProfiling	typeref:typename:uint64_t
cost_tx_free_start	swisstm/src/common/profiling/adaptive.h	/^			uint64_t cost_tx_free_start;$/;"	m	class:wlpdstm::AdaptiveProfiling	typeref:typename:uint64_t
cost_tx_free_start	swisstm/src/dynamic/profiling/adaptive_dynamic.h	/^			uint64_t cost_tx_free_start;$/;"	m	class:wlpdstm::AdaptiveDynamicProfiling	typeref:typename:uint64_t
cost_tx_malloc_end	swisstm/src/common/profiling/adaptive.h	/^			uint64_t cost_tx_malloc_end;$/;"	m	class:wlpdstm::AdaptiveProfiling	typeref:typename:uint64_t
cost_tx_malloc_end	swisstm/src/dynamic/profiling/adaptive_dynamic.h	/^			uint64_t cost_tx_malloc_end;$/;"	m	class:wlpdstm::AdaptiveDynamicProfiling	typeref:typename:uint64_t
cost_tx_malloc_start	swisstm/src/common/profiling/adaptive.h	/^			uint64_t cost_tx_malloc_start;$/;"	m	class:wlpdstm::AdaptiveProfiling	typeref:typename:uint64_t
cost_tx_malloc_start	swisstm/src/dynamic/profiling/adaptive_dynamic.h	/^			uint64_t cost_tx_malloc_start;$/;"	m	class:wlpdstm::AdaptiveDynamicProfiling	typeref:typename:uint64_t
cost_tx_restart	swisstm/src/common/profiling/non_tx_duration.h	/^			uint64_t cost_tx_restart;$/;"	m	class:wlpdstm::NonTxDurationProfiling	typeref:typename:uint64_t
cost_tx_restart_end	swisstm/src/common/profiling/adaptive.h	/^			uint64_t cost_tx_restart_end;$/;"	m	class:wlpdstm::AdaptiveProfiling	typeref:typename:uint64_t
cost_tx_restart_end	swisstm/src/common/profiling/tx_duration.h	/^			uint64_t cost_tx_restart_end;$/;"	m	class:wlpdstm::TxDurationProfiling	typeref:typename:uint64_t
cost_tx_restart_end	swisstm/src/dynamic/profiling/adaptive_dynamic.h	/^			uint64_t cost_tx_restart_end;$/;"	m	class:wlpdstm::AdaptiveDynamicProfiling	typeref:typename:uint64_t
cost_tx_restart_start	swisstm/src/common/profiling/adaptive.h	/^			uint64_t cost_tx_restart_start;$/;"	m	class:wlpdstm::AdaptiveProfiling	typeref:typename:uint64_t
cost_tx_restart_start	swisstm/src/dynamic/profiling/adaptive_dynamic.h	/^			uint64_t cost_tx_restart_start;$/;"	m	class:wlpdstm::AdaptiveDynamicProfiling	typeref:typename:uint64_t
cost_tx_start	swisstm/src/common/profiling/non_tx_duration.h	/^            uint64_t cost_tx_start;$/;"	m	class:wlpdstm::NonTxDurationProfiling	typeref:typename:uint64_t
cost_tx_start_end	swisstm/src/common/profiling/adaptive.h	/^			uint64_t cost_tx_start_end;$/;"	m	class:wlpdstm::AdaptiveProfiling	typeref:typename:uint64_t
cost_tx_start_end	swisstm/src/dynamic/profiling/adaptive_dynamic.h	/^			uint64_t cost_tx_start_end;$/;"	m	class:wlpdstm::AdaptiveDynamicProfiling	typeref:typename:uint64_t
cost_tx_start_start	swisstm/src/common/profiling/adaptive.h	/^            uint64_t cost_tx_start_start;$/;"	m	class:wlpdstm::AdaptiveProfiling	typeref:typename:uint64_t
cost_tx_start_start	swisstm/src/common/profiling/tx_duration.h	/^            uint64_t cost_tx_start_start;$/;"	m	class:wlpdstm::TxDurationProfiling	typeref:typename:uint64_t
cost_tx_start_start	swisstm/src/dynamic/profiling/adaptive_dynamic.h	/^            uint64_t cost_tx_start_start;$/;"	m	class:wlpdstm::AdaptiveDynamicProfiling	typeref:typename:uint64_t
cost_write_word_end	swisstm/src/common/profiling/adaptive.h	/^			uint64_t cost_write_word_end;$/;"	m	class:wlpdstm::AdaptiveProfiling	typeref:typename:uint64_t
cost_write_word_end	swisstm/src/dynamic/profiling/adaptive_dynamic.h	/^			uint64_t cost_write_word_end;$/;"	m	class:wlpdstm::AdaptiveDynamicProfiling	typeref:typename:uint64_t
cost_write_word_start	swisstm/src/common/profiling/adaptive.h	/^			uint64_t cost_write_word_start;$/;"	m	class:wlpdstm::AdaptiveProfiling	typeref:typename:uint64_t
cost_write_word_start	swisstm/src/dynamic/profiling/adaptive_dynamic.h	/^			uint64_t cost_write_word_start;$/;"	m	class:wlpdstm::AdaptiveDynamicProfiling	typeref:typename:uint64_t
count	benchmark_list.h	/^	int count;$/;"	m	struct:barrier	typeref:typename:int
count	benchmark_list_move.h	/^	int count;$/;"	m	struct:barrier	typeref:typename:int
count	list_harris.c	/^	unsigned long count;$/;"	m	struct:harris_pthread_data	typeref:typename:unsigned long	file:
count	list_move_vlist.c	/^	int count;$/;"	m	struct:vlist_record	typeref:typename:int	file:
count	list_move_vlist.c	/^	unsigned long count;$/;"	m	struct:vlist_pthread_data	typeref:typename:unsigned long	file:
count	list_vlist.c	/^	int count;$/;"	m	struct:vlist_record	typeref:typename:int	file:
count	list_vlist.c	/^	unsigned long count;$/;"	m	struct:vlist_pthread_data	typeref:typename:unsigned long	file:
count	swisstm/src/mubench/intset-list-mv.c	/^  int count;$/;"	m	struct:barrier	typeref:typename:int	file:
count	swisstm/src/mubench/intset.c	/^  int count;$/;"	m	struct:barrier	typeref:typename:int	file:
count	swisstm/src/mubench/thread.h	/^    long count;$/;"	m	struct:thread_barrier	typeref:typename:long
count	tree_prcu.c	/^	volatile long count[2];$/;"	m	struct:prcu_table	typeref:typename:volatile long[2]	file:
count	tree_vrbtree.c	/^	int count;$/;"	m	struct:vtree_record	typeref:typename:int	file:
count	tree_vrbtree.c	/^	unsigned long count;$/;"	m	struct:vtree_pthread_data	typeref:typename:unsigned long	file:
count	tree_vtree.c	/^	int count;$/;"	m	struct:vtree_record	typeref:typename:int	file:
count	tree_vtree.c	/^	unsigned long count;$/;"	m	struct:vtree_pthread_data	typeref:typename:unsigned long	file:
countLock	swisstm/src/mubench/thread.h	/^    THREAD_MUTEX_T countLock;$/;"	m	struct:thread_barrier	typeref:typename:THREAD_MUTEX_T
count_idx	swisstm/src/common/stats_base.h	/^		unsigned count_idx;$/;"	m	struct:wlpdstm::AverageStat	typeref:typename:unsigned
counter	swisstm/src/common/sampling.h	/^			unsigned counter;$/;"	m	class:wlpdstm::RandomTxSampling	typeref:typename:unsigned
counter	swisstm/src/common/sampling.h	/^			unsigned counter;$/;"	m	class:wlpdstm::Sampling	typeref:typename:unsigned
counter	swisstm/src/common/sampling.h	/^			unsigned counter;$/;"	m	class:wlpdstm::TxSampling	typeref:typename:unsigned
counter	swisstm/src/epochstm/cm.h	/^				volatile uint64_t counter;$/;"	m	struct:wlpdstm::Greedy::__anonb360769d010a::__anonb360769d0208	typeref:typename:volatile uint64_t
counter	swisstm/src/mubench/barrier.h	/^    volatile uintptr_t counter;$/;"	m	union:barrier_t	typeref:typename:volatile uintptr_t
counter	swisstm/src/p-tlrw/cm.h	/^				volatile uint64_t counter;$/;"	m	struct:wlpdstm::Greedy::__anonc9561e00010a::__anonc9561e000208	typeref:typename:volatile uint64_t
counter	swisstm/src/rw/cm.h	/^				volatile uint64_t counter;$/;"	m	struct:wlpdstm::Greedy::__anon85aa60e3010a::__anon85aa60e30208	typeref:typename:volatile uint64_t
counter	swisstm/src/tlrw/cm.h	/^				volatile uint64_t counter;$/;"	m	struct:wlpdstm::Greedy::__anonabcb3183010a::__anonabcb31830208	typeref:typename:volatile uint64_t
counters	swisstm/src/epochstm/transaction.cc	/^CACHE_LINE_ALIGNED wlpdstm::TransactionEpoch::PaddedTxCounter wlpdstm::TransactionEpoch::counter/;"	m	class:wlpdstm::TransactionEpoch	typeref:typename:CACHE_LINE_ALIGNED wlpdstm::TransactionEpoch::PaddedTxCounter[]
counters	swisstm/src/epochstm/transaction.h	/^		CACHE_LINE_ALIGNED static PaddedTxCounter counters[MAX_THREADS];$/;"	m	class:wlpdstm::TransactionEpoch	typeref:typename:CACHE_LINE_ALIGNED PaddedTxCounter[]
counts	swisstm/src/common/perfcnt/perf_cnt_papi.h	/^		long_long counts[MAX_EVENTS];$/;"	m	class:wlpdstm::PerfCntPapi	typeref:typename:long_long[]
cpc	swisstm/src/common/perfcnt/perf_cnt_solaris.h	/^			cpc_t *cpc;$/;"	m	class:wlpdstm::PerfCntSolaris	typeref:typename:cpc_t *
cpu_map	swisstm/src/p-tlrw/transaction.h	/^			int cpu_map;$/;"	m	class:wlpdstm::TransactionTlrw	typeref:typename:int
cpu_set	benchmark_list.c	/^static cpu_set_t cpu_set[450];$/;"	v	typeref:typename:cpu_set_t[450]	file:
crossing	benchmark_list.h	/^	int crossing;$/;"	m	struct:barrier	typeref:typename:int
crossing	benchmark_list_move.h	/^	int crossing;$/;"	m	struct:barrier	typeref:typename:int
crossing	swisstm/src/mubench/intset-list-mv.c	/^  int crossing;$/;"	m	struct:barrier	typeref:typename:int	file:
crossing	swisstm/src/mubench/intset.c	/^  int crossing;$/;"	m	struct:barrier	typeref:typename:int	file:
curr_freq	swisstm/src/common/sampling.h	/^			unsigned curr_freq;$/;"	m	class:wlpdstm::RandomTxSampling	typeref:typename:unsigned
current	swisstm/src/common/log.h	/^					Node *current;$/;"	m	class:wlpdstm::Log::iterator	typeref:typename:Node *
current	swisstm/src/common/log.h	/^					unsigned current;$/;"	m	class:wlpdstm::Log::iterator	typeref:typename:unsigned
current_cnt	swisstm/src/epochstm/transaction.h	/^			Word current_cnt;$/;"	m	class:wlpdstm::TransactionEpoch	typeref:typename:Word
current_epoch	swisstm/src/dynamic/lazy/hashtable.h	/^			uint8_t current_epoch;$/;"	m	class:wlpdstm::Hashtable	typeref:typename:uint8_t
current_epoch	swisstm/src/epochstm/memory/memory_epoch.h	/^			Epoch current_epoch;$/;"	m	class:wlpdstm::MemoryManager	typeref:typename:Epoch
current_lock	swisstm/src/epochstm/transaction.h	/^			WriteLock current_lock;$/;"	m	class:wlpdstm::TransactionEpoch	typeref:typename:WriteLock
current_profiling_cost	swisstm/src/common/profiling/adaptive.h	/^            uint64_t current_profiling_cost;$/;"	m	class:wlpdstm::AdaptiveProfiling	typeref:typename:uint64_t
current_profiling_cost	swisstm/src/common/profiling/non_tx_duration.h	/^            uint64_t current_profiling_cost;$/;"	m	class:wlpdstm::NonTxDurationProfiling	typeref:typename:uint64_t
current_profiling_cost	swisstm/src/common/profiling/tx_duration.h	/^            uint64_t current_profiling_cost;$/;"	m	class:wlpdstm::TxDurationProfiling	typeref:typename:uint64_t
current_profiling_cost	swisstm/src/dynamic/profiling/adaptive_dynamic.h	/^            uint64_t current_profiling_cost;$/;"	m	class:wlpdstm::AdaptiveDynamicProfiling	typeref:typename:uint64_t
current_tm	swisstm/src/dynamic/transaction.h	/^			unsigned current_tm;$/;"	m	class:wlpdstm::TransactionDynamic	typeref:typename:unsigned
current_ts	swisstm/src/epochstm/cm.h	/^				volatile uint64_t current_ts;$/;"	m	struct:wlpdstm::Greedy::__anonb360769d010a::__anonb360769d0208	typeref:typename:volatile uint64_t
current_ts	swisstm/src/p-tlrw/cm.h	/^				volatile uint64_t current_ts;$/;"	m	struct:wlpdstm::Greedy::__anonc9561e00010a::__anonc9561e000208	typeref:typename:volatile uint64_t
current_ts	swisstm/src/rw/cm.h	/^				volatile uint64_t current_ts;$/;"	m	struct:wlpdstm::Greedy::__anon85aa60e3010a::__anon85aa60e30208	typeref:typename:volatile uint64_t
current_ts	swisstm/src/tlrw/cm.h	/^				volatile uint64_t current_ts;$/;"	m	struct:wlpdstm::Greedy::__anonabcb3183010a::__anonabcb31830208	typeref:typename:volatile uint64_t
current_tx	swisstm/src/p-tlrw/transaction.h	/^					volatile TxCounter current_tx;$/;"	m	struct:wlpdstm::TransactionTlrw::__anon7ebeeeb6030a::__anon7ebeeeb60408	typeref:typename:volatile TxCounter
current_tx_id	swisstm/src/epochstm/transaction.h	/^			TxId current_tx_id;$/;"	m	class:wlpdstm::TransactionEpoch	typeref:typename:TxId
current_tx_stats	swisstm/src/common/stats_base.h	/^		Statistics current_tx_stats;$/;"	m	struct:wlpdstm::ThreadStatsBase	typeref:typename:Statistics
current_write_lock	swisstm/src/p-tlrw/transaction.h	/^			WriteLock current_write_lock;$/;"	m	class:wlpdstm::TransactionTlrw	typeref:typename:WriteLock
cycles	swisstm/src/common/perfcnt/perf_cnt_papi.h	/^		uint64_t cycles;$/;"	m	class:wlpdstm::PerfCntPapi	typeref:typename:uint64_t
cycles	swisstm/src/common/perfcnt/perf_cnt_solaris.h	/^			uint64_t cycles;$/;"	m	class:wlpdstm::PerfCntSolaris	typeref:typename:uint64_t
cycles_before	swisstm/src/common/perfcnt/perf_cnt_papi.h	/^        uint64_t cycles_before;$/;"	m	class:wlpdstm::PerfCntPapi	typeref:typename:uint64_t
d	swisstm/src/stm_api/read_write.h	/^		double d[2];$/;"	m	union:wlpdstm::read_write_conv_u	typeref:typename:double[2]
data	run_bench.py	/^    data = json.load(json_data_file)$/;"	v
data	swisstm/src/common/log.h	/^				T data;$/;"	m	struct:wlpdstm::Log::Node	typeref:typename:T
data	swisstm/src/tanger/tanger_stack_area.h	/^		void *data;$/;"	m	class:wlpdstm::StackArea	typeref:typename:void *
data_structure	config-list.json	/^                        "data_structure": "list",$/;"	s	object:list10k.0
data_structure	config-list.json	/^                        "data_structure": "list",$/;"	s	object:list1k.0
data_structure	config-list.json	/^                        "data_structure": "list",$/;"	s	object:list50k.0
data_structure	config-tree.json	/^                        "data_structure": "tree",$/;"	s	object:tree10k.0
data_structure	config.json	/^                        "data_structure": "tree",$/;"	s	object:tree10k-aug10.0
data_structure	list.json	/^                        "data_structure": "list",$/;"	s	object:list100k.0
data_structure	list.json	/^                        "data_structure": "list",$/;"	s	object:list10k.0
data_structure	list.json	/^                        "data_structure": "list",$/;"	s	object:list1k.0
decision	swisstm/src/dynamic/transaction.h	/^		volatile Word decision;$/;"	m	struct:wlpdstm::GreenCMQueueItem	typeref:typename:volatile Word
default_value	swisstm/src/common/configuration.h	/^		const std::string default_value;$/;"	m	struct:wlpdstm::ConfigItem	typeref:typename:const std::string
delete_last	swisstm/src/common/log.h	/^	inline void Log<T, CHUNK_LENGTH, INIT>::delete_last() {$/;"	f	class:wlpdstm::Log	typeref:typename:void
delete_last	swisstm/src/common/log.h	/^	inline void Log<T, INITIAL_SIZE, GROWTH_FACTOR>::delete_last() {$/;"	f	class:wlpdstm::Log	typeref:typename:void
delete_node	swisstm/src/mubench/rbtree.c	/^#define delete_node(/;"	d	file:
delete_node	swisstm/src/mubench/rbtree.c	/^delete_node (rbtree_t* s, node_t* p)$/;"	f	typeref:typename:node_t *	file:
destroy_nvm	tree_rlu.c	/^void destroy_nvm()$/;"	f	typeref:typename:void
diff	swisstm/src/common/perfcnt/perf_cnt_solaris.h	/^			cpc_buf_t *diff, *after, *before;$/;"	m	class:wlpdstm::PerfCntSolaris	typeref:typename:cpc_buf_t *
diff	swisstm/src/mubench/intset.c	/^  int diff;$/;"	m	struct:thread_data	typeref:typename:int	file:
disable_hash	zipf/zipf.h	/^	int disable_hash;$/;"	m	struct:zipf_state	typeref:typename:int
dist_type	zipf/test.c	/^static int dist_type = TYPE_ZIPF;$/;"	v	typeref:typename:int	file:
dist_types	zipf/test.c	/^static const char *dist_types[] = { "None", "Zipf", "Pareto", "Normal" };$/;"	v	typeref:typename:const char * []	file:
dist_val	zipf/test.c	/^static double dist_val;$/;"	v	typeref:typename:double	file:
ds_data	benchmark_list.h	/^	void *ds_data; \/\/ data structure specific data$/;"	m	struct:pthread_data	typeref:typename:void *
ds_data	benchmark_list_move.h	/^	void *ds_data; \/\/ data structure specific data$/;"	m	struct:pthread_data	typeref:typename:void *
duration	config-list.json	/^                        "duration" : 10000,$/;"	n	object:list10k.0
duration	config-list.json	/^                        "duration" : 10000,$/;"	n	object:list1k.0
duration	config-list.json	/^                        "duration" : 10000,$/;"	n	object:list50k.0
duration	config-tree.json	/^                        "duration" : 5000,$/;"	n	object:tree10k.0
duration	config.json	/^                        "duration" : 20000,$/;"	n	object:tree10k-aug10.0
duration	list.json	/^                        "duration" : 30000,$/;"	n	object:list100k.0
duration	list.json	/^                        "duration" : 30000,$/;"	n	object:list10k.0
duration	list.json	/^                        "duration" : 30000,$/;"	n	object:list1k.0
ebp	swisstm/src/intel/jmp.h	/^	uint32_t ebp;$/;"	m	struct:begin_transaction_jmpbuf	typeref:typename:uint32_t
ebx	swisstm/src/intel/jmp.h	/^	uint32_t ebx;$/;"	m	struct:begin_transaction_jmpbuf	typeref:typename:uint32_t
edi	swisstm/src/intel/jmp.h	/^	uint32_t edi;$/;"	m	struct:begin_transaction_jmpbuf	typeref:typename:uint32_t
element	swisstm/src/common/log.h	/^					unsigned element;$/;"	m	class:wlpdstm::Log::iterator	typeref:typename:unsigned
element	swisstm/src/common/log.h	/^				unsigned element;$/;"	m	class:wlpdstm::Log::rev_iterator	typeref:typename:unsigned
elements	swisstm/src/common/log.h	/^				T elements[CHUNK_LENGTH];$/;"	m	struct:wlpdstm::Log::LogChunk	typeref:typename:T[]
empty	swisstm/src/common/log.h	/^	inline bool Log<T, CHUNK_LENGTH, INIT>::empty() const {$/;"	f	class:wlpdstm::Log	typeref:typename:bool
empty	swisstm/src/common/log.h	/^	inline bool Log<T, INITIAL_SIZE, GROWTH_FACTOR>::empty() const {$/;"	f	class:wlpdstm::Log	typeref:typename:bool
empty	swisstm/src/common/log.h	/^	inline bool Log<T, INITIAL_SIZE>::empty() const {$/;"	f	class:wlpdstm::Log	typeref:typename:bool
end	swisstm/src/common/log.h	/^	inline typename Log<T, CHUNK_LENGTH, INIT>::iterator Log<T, CHUNK_LENGTH, INIT>::end() const {$/;"	f	class:wlpdstm::Log	typeref:typename:Log<T,CHUNK_LENGTH,INIT>::iterator
end	swisstm/src/common/log.h	/^	inline typename Log<T, INITIAL_SIZE, GROWTH_FACTOR>::iterator Log<T, INITIAL_SIZE, GROWTH_FACTO/;"	f	class:wlpdstm::Log	typeref:typename:Log<T,INITIAL_SIZE,GROWTH_FACTOR>::iterator
end	swisstm/src/common/log.h	/^	inline typename Log<T, INITIAL_SIZE>::iterator Log<T, INITIAL_SIZE>::end() const {$/;"	f	class:wlpdstm::Log	typeref:typename:Log<T,INITIAL_SIZE>::iterator
end_barrier	swisstm/src/mubench/rbforest.cc	/^    barrier_t *end_barrier;$/;"	m	struct:thread_data_t	typeref:typename:barrier_t *	file:
end_orec	swisstm/src/epochstm/transaction.h	/^				OwnershipRecord *end_orec; \/\/ one past the end$/;"	m	struct:wlpdstm::TransactionEpoch::__anon706747f30408	typeref:typename:OwnershipRecord *
end_touched_orec_idx	swisstm/src/epochstm/transaction.h	/^				unsigned end_touched_orec_idx; \/\/ one past the end$/;"	m	struct:wlpdstm::TransactionEpoch::__anon706747f30408	typeref:typename:unsigned
enter_barrier	swisstm/src/mubench/barrier.h	/^inline void enter_barrier(barrier_t *b) {$/;"	f	typeref:typename:void
epoch	list_move_vlist.c	/^	unsigned long epoch;$/;"	m	struct:vlist_pthread_data	typeref:typename:unsigned long	file:
epoch	list_move_vlist.c	/^	unsigned long epoch;$/;"	m	struct:vlist_record	typeref:typename:unsigned long	file:
epoch	list_move_vlist.c	/^	unsigned long epoch;$/;"	m	struct:vlist_slot	typeref:typename:unsigned long	file:
epoch	list_vlist.c	/^	unsigned long epoch;$/;"	m	struct:vlist_pthread_data	typeref:typename:unsigned long	file:
epoch	list_vlist.c	/^	unsigned long epoch;$/;"	m	struct:vlist_record	typeref:typename:unsigned long	file:
epoch	list_vlist.c	/^	unsigned long epoch;$/;"	m	struct:vlist_slot	typeref:typename:unsigned long	file:
epoch	qsbr.h	/^	int epoch;$/;"	m	struct:qsbr_pthread_data	typeref:typename:int
epoch	tree_vrbtree.c	/^	unsigned long epoch;$/;"	m	struct:vtree_pthread_data	typeref:typename:unsigned long	file:
epoch	tree_vrbtree.c	/^	unsigned long epoch;$/;"	m	struct:vtree_record	typeref:typename:unsigned long	file:
epoch	tree_vrbtree.c	/^	unsigned long epoch;$/;"	m	struct:vtree_slot	typeref:typename:unsigned long	file:
epoch	tree_vtree.c	/^	unsigned long epoch;$/;"	m	struct:vtree_pthread_data	typeref:typename:unsigned long	file:
epoch	tree_vtree.c	/^	unsigned long epoch;$/;"	m	struct:vtree_record	typeref:typename:unsigned long	file:
epoch	tree_vtree.c	/^	unsigned long epoch;$/;"	m	struct:vtree_slot	typeref:typename:unsigned long	file:
esi	swisstm/src/intel/jmp.h	/^	uint32_t esi;$/;"	m	struct:begin_transaction_jmpbuf	typeref:typename:uint32_t
esp	swisstm/src/intel/jmp.h	/^	uint32_t esp;$/;"	m	struct:begin_transaction_jmpbuf	typeref:typename:uint32_t
estimated_profiling_cost	swisstm/src/common/profiling/adaptive.h	/^            uint64_t estimated_profiling_cost;$/;"	m	class:wlpdstm::AdaptiveProfiling	typeref:typename:uint64_t
estimated_profiling_cost	swisstm/src/common/profiling/non_tx_duration.h	/^            uint64_t estimated_profiling_cost;$/;"	m	class:wlpdstm::NonTxDurationProfiling	typeref:typename:uint64_t
estimated_profiling_cost	swisstm/src/common/profiling/tx_duration.h	/^            uint64_t estimated_profiling_cost;$/;"	m	class:wlpdstm::TxDurationProfiling	typeref:typename:uint64_t
estimated_profiling_cost	swisstm/src/dynamic/profiling/adaptive_dynamic.h	/^            uint64_t estimated_profiling_cost;$/;"	m	class:wlpdstm::AdaptiveDynamicProfiling	typeref:typename:uint64_t
estimated_tx_duration	swisstm/src/common/profiling/adaptive.h	/^            uint64_t estimated_tx_duration;$/;"	m	class:wlpdstm::AdaptiveProfiling	typeref:typename:uint64_t
estimated_tx_duration	swisstm/src/common/profiling/non_tx_duration.h	/^            uint64_t estimated_tx_duration;$/;"	m	class:wlpdstm::NonTxDurationProfiling	typeref:typename:uint64_t
estimated_tx_duration	swisstm/src/common/profiling/tx_duration.h	/^            uint64_t estimated_tx_duration;$/;"	m	class:wlpdstm::TxDurationProfiling	typeref:typename:uint64_t
estimated_tx_duration	swisstm/src/dynamic/profiling/adaptive_dynamic.h	/^            uint64_t estimated_tx_duration;$/;"	m	class:wlpdstm::AdaptiveDynamicProfiling	typeref:typename:uint64_t
event_set	swisstm/src/common/perfcnt/perf_cnt_papi.h	/^		int event_set;$/;"	m	class:wlpdstm::PerfCntPapi	typeref:typename:int
exchangeValue	swisstm/src/common/atomic.h	/^			bool exchangeValue(T oldval, T newval) {$/;"	f	class:wlpdstm::AtomicVariable	typeref:typename:bool
execute	run_tests.py	/^def execute(runs_per_test, $/;"	f
extract_data	run_tests.py	/^def extract_data(output_data, key_str):$/;"	f
extract_keys	run_tests.py	/^def extract_keys(output_data):$/;"	f
f	swisstm/src/stm_api/read_write.h	/^		float f[4];$/;"	m	union:wlpdstm::read_write_conv_u	typeref:typename:float[4]
f_size	list_rcu.c	/^	int f_size;$/;"	m	struct:rcu_pthread_data	typeref:typename:int	file:
f_size	tree_bonsai.c	/^	int f_size;$/;"	m	struct:rcu_pthread_data	typeref:typename:int	file:
f_size	tree_prcu.c	/^	int f_size;$/;"	m	struct:prcu_pthread_data	typeref:typename:int	file:
f_size	tree_rcu.c	/^	int f_size;$/;"	m	struct:rcu_pthread_data	typeref:typename:int	file:
false	zipf/types.h	/^#define false	/;"	d
fetch_and_inc_acquire	swisstm/src/common/atomic.h	/^#define fetch_and_inc_acquire(/;"	d
fetch_and_inc_full	swisstm/src/common/atomic.h	/^#define fetch_and_inc_full(/;"	d
fetch_and_inc_no_barrier	swisstm/src/common/atomic.h	/^#define fetch_and_inc_no_barrier(/;"	d
fetch_and_inc_release	swisstm/src/common/atomic.h	/^#define fetch_and_inc_release(/;"	d
fill_random_buf	zipf/rand.c	/^unsigned long fill_random_buf(struct frand_state *fs, void *buf,$/;"	f	typeref:typename:unsigned long
final_dir	run_bench.py	/^        final_dir = result_dir + test + "\/u" + str(ur) + "\/";$/;"	v
find	swisstm/src/dynamic/lazy/hashtable.h	/^inline VAL *wlpdstm::Hashtable<VAL, SIZE>::find(uintptr_t key) {$/;"	f	class:wlpdstm::Hashtable	typeref:typename:VAL *
firstEntry	swisstm/src/mubench/rbtree.c	/^firstEntry (rbtree_t* s)$/;"	f	typeref:typename:node_t *	file:
fixAfterDeletion	swisstm/src/mubench/rbtree.c	/^fixAfterDeletion (rbtree_t* s, node_t*  x)$/;"	f	typeref:typename:void	file:
fixAfterInsertion	swisstm/src/mubench/rbtree.c	/^fixAfterInsertion (rbtree_t* s, node_t* x)$/;"	f	typeref:typename:void	file:
fix_tanger_restart	swisstm/src/tanger/tanger.cc	/^void fix_tanger_restart() {$/;"	f	typeref:typename:void
flag	swisstm/src/common/lock.h	/^			volatile Word flag;$/;"	m	class:wlpdstm::cas_lock	typeref:typename:volatile Word
flist_add	zipf/flist.h	/^static inline void flist_add(struct flist_head *new_entry,$/;"	f	typeref:typename:void
flist_add_tail	zipf/flist.h	/^static inline void flist_add_tail(struct flist_head *new_entry,$/;"	f	typeref:typename:void
flist_del	zipf/flist.h	/^static inline void flist_del(struct flist_head *entry)$/;"	f	typeref:typename:void
flist_del_init	zipf/flist.h	/^static inline void flist_del_init(struct flist_head *entry)$/;"	f	typeref:typename:void
flist_empty	zipf/flist.h	/^static inline int flist_empty(const struct flist_head *head)$/;"	f	typeref:typename:int
flist_entry	zipf/flist.h	/^#define flist_entry(/;"	d
flist_first_entry	zipf/flist.h	/^#define flist_first_entry(/;"	d
flist_for_each	zipf/flist.h	/^#define flist_for_each(/;"	d
flist_for_each_safe	zipf/flist.h	/^#define flist_for_each_safe(/;"	d
flist_head	zipf/flist.h	/^struct flist_head {$/;"	s
flist_last_entry	zipf/flist.h	/^#define flist_last_entry(/;"	d
flist_splice	zipf/flist.h	/^static inline void flist_splice(const struct flist_head *list,$/;"	f	typeref:typename:void
flist_splice_init	zipf/flist.h	/^static inline void flist_splice_init(struct flist_head *list,$/;"	f	typeref:typename:void
flist_splice_tail	zipf/flist.h	/^static inline void flist_splice_tail(struct flist_head *list,$/;"	f	typeref:typename:void
flist_splice_tail_init	zipf/flist.h	/^static inline void flist_splice_tail_init(struct flist_head *list,$/;"	f	typeref:typename:void
forest	swisstm/src/mubench/rbforest.cc	/^    rbtree_t **forest;$/;"	m	struct:thread_data_t	typeref:typename:rbtree_t **	file:
forest_delete_ratio	swisstm/src/mubench/rbforest.cc	/^    unsigned forest_delete_ratio;$/;"	m	struct:op_ratios_t	typeref:typename:unsigned	file:
forest_insert_ratio	swisstm/src/mubench/rbforest.cc	/^    unsigned forest_insert_ratio;$/;"	m	struct:op_ratios_t	typeref:typename:unsigned	file:
forest_lookup_ratio	swisstm/src/mubench/rbforest.cc	/^    unsigned forest_lookup_ratio;$/;"	m	struct:op_ratios_t	typeref:typename:unsigned	file:
forest_size	swisstm/src/mubench/rbforest.cc	/^    unsigned forest_size;$/;"	m	struct:cmd_line_args_t	typeref:typename:unsigned	file:
forest_size	swisstm/src/mubench/rbforest.cc	/^    unsigned forest_size;$/;"	m	struct:thread_data_t	typeref:typename:unsigned	file:
fprintf	rlu.c	/^# define fprintf(/;"	d	file:
frand_copy	zipf/rand.h	/^static inline void frand_copy(struct frand_state *dst, struct frand_state *src)$/;"	f	typeref:typename:void
frand_state	zipf/rand.h	/^struct frand_state {$/;"	s
free	rlu.c	/^# define free(/;"	d	file:
free	swisstm/src/common/log.h	/^			Node *free;$/;"	m	class:wlpdstm::Log	typeref:typename:Node *
free	swisstm/src/mubench/tm.h	/^#    define free(/;"	d
free_aligned	swisstm/src/common/cache_aligned_alloc.h	/^	void free_aligned(void *ptr) {$/;"	f	namespace:wlpdstm	typeref:typename:void
free_blocks	swisstm/src/epochstm/memory/memory_epoch.h	/^			MemoryBlock *free_blocks;$/;"	m	class:wlpdstm::MemoryManager	typeref:typename:MemoryBlock *
free_nodes	rlu.h	/^	intptr_t *free_nodes[RLU_MAX_FREE_NODES];$/;"	m	struct:rlu_thread_data	typeref:typename:intptr_t * []
free_nodes_size	rlu.h	/^	long free_nodes_size;$/;"	m	struct:rlu_thread_data	typeref:typename:long
free_pthread_data	list_harris.c	/^void free_pthread_data(pthread_data_t *d)$/;"	f	typeref:typename:void
free_pthread_data	list_move_rlu.c	/^void free_pthread_data(pthread_data_t *d)$/;"	f	typeref:typename:void
free_pthread_data	list_move_spinlock.c	/^void free_pthread_data(pthread_data_t *d)$/;"	f	typeref:typename:void
free_pthread_data	list_move_vlist.c	/^void free_pthread_data(pthread_data_t *d)$/;"	f	typeref:typename:void
free_pthread_data	list_rcu.c	/^void free_pthread_data(pthread_data_t *d)$/;"	f	typeref:typename:void
free_pthread_data	list_rlu.c	/^void free_pthread_data(pthread_data_t *d)$/;"	f	typeref:typename:void
free_pthread_data	list_spinlock.c	/^void free_pthread_data(pthread_data_t *d)$/;"	f	typeref:typename:void
free_pthread_data	list_vlist.c	/^void free_pthread_data(pthread_data_t *d)$/;"	f	typeref:typename:void
free_pthread_data	tree_bonsai.c	/^void free_pthread_data(pthread_data_t *d)$/;"	f	typeref:typename:void
free_pthread_data	tree_citrus_rlu.c	/^void free_pthread_data(pthread_data_t *d)$/;"	f	typeref:typename:void
free_pthread_data	tree_prcu.c	/^void free_pthread_data(pthread_data_t *d)$/;"	f	typeref:typename:void
free_pthread_data	tree_rcu.c	/^void free_pthread_data(pthread_data_t *d)$/;"	f	typeref:typename:void
free_pthread_data	tree_rlu.c	/^void free_pthread_data(pthread_data_t *d)$/;"	f	typeref:typename:void
free_pthread_data	tree_vrbtree.c	/^void free_pthread_data(pthread_data_t *d)$/;"	f	typeref:typename:void
free_pthread_data	tree_vtree.c	/^void free_pthread_data(pthread_data_t *d)$/;"	f	typeref:typename:void
free_ptrs	list_rcu.c	/^	void *free_ptrs[URCU_MAX_FREE_PTRS];$/;"	m	struct:rcu_pthread_data	typeref:typename:void * []	file:
free_ptrs	tree_bonsai.c	/^	void *free_ptrs[URCU_FREE_PTRS_SIZE];$/;"	m	struct:rcu_pthread_data	typeref:typename:void * []	file:
free_ptrs	tree_prcu.c	/^	void *free_ptrs[URCU_MAX_FREE_PTRS];$/;"	m	struct:prcu_pthread_data	typeref:typename:void * []	file:
free_ptrs	tree_rcu.c	/^	void *free_ptrs[URCU_MAX_FREE_PTRS];$/;"	m	struct:rcu_pthread_data	typeref:typename:void * []	file:
freed_by_cleanup	swisstm/src/epochstm/memory/memory_epoch.h	/^			volatile MemoryBlock *freed_by_cleanup;$/;"	m	class:wlpdstm::MemoryManager	typeref:typename:volatile MemoryBlock *
freed_in_tx	swisstm/src/dynamic/memory/memory_impl.h	/^			PtrBuffer *freed_in_tx;$/;"	m	class:wlpdstm::MemoryManager	typeref:typename:PtrBuffer *
freed_in_tx	swisstm/src/dynamic/memory/memory_impl_priv.h	/^	PtrBuffer *freed_in_tx;$/;"	m	class:wlpdstm::MemoryManager	typeref:typename:PtrBuffer *
freed_in_tx	swisstm/src/epochstm/memory/memory_epoch.h	/^			MemoryBlock *freed_in_tx;$/;"	m	class:wlpdstm::MemoryManager	typeref:typename:MemoryBlock *
freed_in_tx	swisstm/src/epochstm/memory/memory_txend.h	/^	PtrBuffer *freed_in_tx;$/;"	m	class:wlpdstm::MemoryManager	typeref:typename:PtrBuffer *
freed_in_tx	swisstm/src/p-tlrw/memory/memory_txend.h	/^	PtrBuffer *freed_in_tx;$/;"	m	class:wlpdstm::MemoryManager	typeref:typename:PtrBuffer *
freed_in_tx	swisstm/src/rw/memory/memory_txend.h	/^	PtrBuffer *freed_in_tx;$/;"	m	class:wlpdstm::MemoryManager	typeref:typename:PtrBuffer *
freed_in_tx	swisstm/src/stm/memory/memory_impl.h	/^			PtrBuffer *freed_in_tx;$/;"	m	class:wlpdstm::MemoryManager	typeref:typename:PtrBuffer *
freed_in_tx	swisstm/src/stm/memory/memory_impl_priv.h	/^	PtrBuffer *freed_in_tx;$/;"	m	class:wlpdstm::MemoryManager	typeref:typename:PtrBuffer *
freed_in_tx	swisstm/src/tlrw/memory/memory_txend.h	/^	PtrBuffer *freed_in_tx;$/;"	m	class:wlpdstm::MemoryManager	typeref:typename:PtrBuffer *
freed_in_tx_old	swisstm/src/dynamic/memory/memory_impl.h	/^			PtrBuffer *freed_in_tx_old;$/;"	m	class:wlpdstm::MemoryManager	typeref:typename:PtrBuffer *
freed_in_tx_old	swisstm/src/dynamic/memory/memory_impl_priv.h	/^	PtrBuffer *freed_in_tx_old;$/;"	m	class:wlpdstm::MemoryManager	typeref:typename:PtrBuffer *
freed_in_tx_old	swisstm/src/epochstm/memory/memory_txend.h	/^	PtrBuffer *freed_in_tx_old;$/;"	m	class:wlpdstm::MemoryManager	typeref:typename:PtrBuffer *
freed_in_tx_old	swisstm/src/p-tlrw/memory/memory_txend.h	/^	PtrBuffer *freed_in_tx_old;$/;"	m	class:wlpdstm::MemoryManager	typeref:typename:PtrBuffer *
freed_in_tx_old	swisstm/src/rw/memory/memory_txend.h	/^	PtrBuffer *freed_in_tx_old;$/;"	m	class:wlpdstm::MemoryManager	typeref:typename:PtrBuffer *
freed_in_tx_old	swisstm/src/stm/memory/memory_impl.h	/^			PtrBuffer *freed_in_tx_old;$/;"	m	class:wlpdstm::MemoryManager	typeref:typename:PtrBuffer *
freed_in_tx_old	swisstm/src/stm/memory/memory_impl_priv.h	/^	PtrBuffer *freed_in_tx_old;$/;"	m	class:wlpdstm::MemoryManager	typeref:typename:PtrBuffer *
freed_in_tx_old	swisstm/src/tlrw/memory/memory_txend.h	/^	PtrBuffer *freed_in_tx_old;$/;"	m	class:wlpdstm::MemoryManager	typeref:typename:PtrBuffer *
freed_logically	swisstm/src/dynamic/memory/memory_impl.h	/^			PtrBuffer *freed_logically;$/;"	m	class:wlpdstm::MemoryManager	typeref:typename:PtrBuffer *
freed_logically	swisstm/src/stm/memory/memory_impl.h	/^			PtrBuffer *freed_logically;$/;"	m	class:wlpdstm::MemoryManager	typeref:typename:PtrBuffer *
freelist	qsbr.h	/^	void *freelist[QSBR_N_EPOCHS][QSBR_FREELIST_SIZE];$/;"	m	struct:qsbr_pthread_data	typeref:typename:void * [][]
freelist_count	qsbr.h	/^	size_t freelist_count[QSBR_N_EPOCHS];$/;"	m	struct:qsbr_pthread_data	typeref:typename:size_t[]
fun	swisstm/src/mubench/rbforest.cc	/^    operation_fun_t fun;$/;"	m	struct:operation_t	typeref:typename:operation_fun_t	file:
g_committed_rec	list_move_vlist.c	/^static volatile vlist_record_t *g_committed_rec = NULL;$/;"	v	typeref:typename:volatile vlist_record_t *	file:
g_committed_rec	list_vlist.c	/^static volatile vlist_record_t *g_committed_rec = NULL;$/;"	v	typeref:typename:volatile vlist_record_t *	file:
g_committed_rec	tree_vrbtree.c	/^static volatile vtree_record_t *g_committed_rec = NULL;$/;"	v	typeref:typename:volatile vtree_record_t *	file:
g_committed_rec	tree_vtree.c	/^static volatile vtree_record_t *g_committed_rec = NULL;$/;"	v	typeref:typename:volatile vtree_record_t *	file:
g_epoch	qsbr.c	/^static volatile int g_epoch __attribute__ ((__aligned__ (CACHE_ALIGN)));$/;"	v	typeref:typename:volatile int	file:
g_n_threads	tree_rlu.c	/^unsigned int g_n_threads;$/;"	v	typeref:typename:unsigned int
g_nr_threads	qsbr.c	/^static long g_nr_threads = 0;$/;"	v	typeref:typename:long	file:
g_rlu_array	rlu.c	/^static volatile unsigned long g_rlu_array[RLU_CACHE_LINE_SIZE * 64] = {0,};$/;"	v	typeref:typename:volatile unsigned long[]	file:
g_rlu_commit_version	rlu.c	/^#define g_rlu_commit_version /;"	d	file:
g_rlu_cur_threads	rlu.c	/^static volatile long g_rlu_cur_threads = 0;$/;"	v	typeref:typename:volatile long	file:
g_rlu_data	rlu.c	/^static volatile rlu_data_t g_rlu_data = {0,};$/;"	v	typeref:typename:volatile rlu_data_t	file:
g_rlu_max_write_sets	rlu.c	/^static volatile int g_rlu_max_write_sets = 0;$/;"	v	typeref:typename:volatile int	file:
g_rlu_threads	rlu.c	/^static volatile rlu_thread_data_t *g_rlu_threads[RLU_MAX_THREADS] = {0,};$/;"	v	typeref:typename:volatile rlu_thread_data_t * []	file:
g_rlu_type	rlu.c	/^static volatile int g_rlu_type = 0;$/;"	v	typeref:typename:volatile int	file:
g_rlu_writer_locks	rlu.c	/^static volatile long g_rlu_writer_locks[RLU_MAX_WRITER_LOCKS] = {0,};$/;"	v	typeref:typename:volatile long[]	file:
g_rlu_writer_version	rlu.c	/^#define g_rlu_writer_version /;"	d	file:
g_threads	qsbr.c	/^static qsbr_pthread_data_t *g_threads[QSBR_MAX_THREADS] = {0,};$/;"	v	typeref:typename:qsbr_pthread_data_t * []	file:
g_update_lock	qsbr.c	/^static volatile pthread_spinlock_t g_update_lock __attribute__ ((__aligned__ (CACHE_ALIGN)));$/;"	v	typeref:typename:volatile pthread_spinlock_t	file:
getCPUid	benchmark_list.c	/^int getCPUid(int index, int reset)$/;"	f	typeref:typename:int
getMax	swisstm/src/common/atomic.h	/^			Word getMax() {$/;"	f	class:wlpdstm::CounterOF	typeref:typename:Word
getNext	swisstm/src/common/atomic.h	/^			Word getNext() {$/;"	f	class:wlpdstm::CounterOF	typeref:typename:Word
getNextTs	swisstm/src/dynamic/timestamp.h	/^			Word getNextTs() {$/;"	f	class:wlpdstm::GlobalTimestamp	typeref:typename:Word
getNextTs	swisstm/src/stm/timestamp.h	/^			Word getNextTs() {$/;"	f	class:wlpdstm::GlobalTimestamp	typeref:typename:Word
getNextTsAcquire	swisstm/src/dynamic/timestamp.h	/^			Word getNextTsAcquire() {$/;"	f	class:wlpdstm::GlobalTimestamp	typeref:typename:Word
getNextTsAcquire	swisstm/src/stm/timestamp.h	/^			Word getNextTsAcquire() {$/;"	f	class:wlpdstm::GlobalTimestamp	typeref:typename:Word
getNextTsFull	swisstm/src/dynamic/timestamp.h	/^			Word getNextTsFull() {$/;"	f	class:wlpdstm::GlobalTimestamp	typeref:typename:Word
getNextTsFull	swisstm/src/stm/timestamp.h	/^			Word getNextTsFull() {$/;"	f	class:wlpdstm::GlobalTimestamp	typeref:typename:Word
getNextTsRelease	swisstm/src/dynamic/timestamp.h	/^			Word getNextTsRelease() {$/;"	f	class:wlpdstm::GlobalTimestamp	typeref:typename:Word
getNextTsRelease	swisstm/src/stm/timestamp.h	/^			Word getNextTsRelease() {$/;"	f	class:wlpdstm::GlobalTimestamp	typeref:typename:Word
getNode	swisstm/src/mubench/rbtree.c	/^getNode ()$/;"	f	typeref:typename:node_t *	file:
getOperationName	swisstm/src/dynamic/constants.h	/^	inline const char *getOperationName(OperationType optype) {$/;"	f	namespace:wlpdstm	typeref:typename:const char *
getOperationName	swisstm/src/stm/constants.h	/^	inline const char *getOperationName(OperationType optype) {$/;"	f	namespace:wlpdstm	typeref:typename:const char *
getValue	swisstm/src/common/atomic.h	/^			T getValue() {$/;"	f	class:wlpdstm::AtomicVariable	typeref:typename:T
get_byte_in_word_index	swisstm/src/common/constants.h	/^	inline unsigned get_byte_in_word_index(void *address) {$/;"	f	namespace:wlpdstm	typeref:typename:unsigned
get_clock_count	swisstm/src/common/timing.h	/^inline uint64_t get_clock_count() {$/;"	f	typeref:typename:uint64_t
get_consumed_energy	swisstm/src/common/energy.h	/^inline uint64_t wlpdstm::Energy::get_consumed_energy() {$/;"	f	class:wlpdstm::Energy	typeref:typename:uint64_t
get_locked	swisstm/src/dynamic/version_lock.h	/^	inline VersionLock get_locked(Word thread) {$/;"	f	namespace:wlpdstm	typeref:typename:VersionLock
get_locked	swisstm/src/stm/version_lock.h	/^	inline VersionLock get_locked(Word thread) {$/;"	f	namespace:wlpdstm	typeref:typename:VersionLock
get_next	swisstm/src/common/log.h	/^	inline T *Log<T, CHUNK_LENGTH, INIT>::get_next() {$/;"	f	class:wlpdstm::Log	typeref:typename:T *
get_next	swisstm/src/common/log.h	/^	inline T *Log<T, INITIAL_SIZE, GROWTH_FACTOR>::get_next() {$/;"	f	class:wlpdstm::Log	typeref:typename:T *
get_next	swisstm/src/common/log.h	/^	inline T *Log<T, INITIAL_SIZE>::get_next() {$/;"	f	class:wlpdstm::Log	typeref:typename:T *
get_node_color	tree_vrbtree.c	/^#define get_node_color(/;"	d	file:
get_node_parent	tree_vrbtree.c	/^#define get_node_parent(/;"	d	file:
get_parent_node_idx	swisstm/src/stm/privatization_tree.h	/^inline unsigned wlpdstm::PrivatizationTree::get_parent_node_idx(unsigned node_idx) {$/;"	f	class:wlpdstm::PrivatizationTree	typeref:typename:unsigned
get_proxy_node_idx	swisstm/src/stm/privatization_tree.h	/^inline unsigned wlpdstm::PrivatizationTree::get_proxy_node_idx(unsigned node_idx) {$/;"	f	class:wlpdstm::PrivatizationTree	typeref:typename:unsigned
get_ptr	swisstm/src/dynamic/version_lock.h	/^	inline Word get_ptr(VersionLock lock) {$/;"	f	namespace:wlpdstm	typeref:typename:Word
get_ptr	swisstm/src/stm/version_lock.h	/^	inline Word get_ptr(VersionLock lock) {$/;"	f	namespace:wlpdstm	typeref:typename:Word
get_root_node_idx	swisstm/src/stm/privatization_tree.h	/^inline unsigned wlpdstm::PrivatizationTree::get_root_node_idx(unsigned count) {$/;"	f	class:wlpdstm::PrivatizationTree	typeref:typename:unsigned
get_sibling_node_idx	swisstm/src/stm/privatization_tree.h	/^inline unsigned wlpdstm::PrivatizationTree::get_sibling_node_idx(unsigned node_idx) {$/;"	f	class:wlpdstm::PrivatizationTree	typeref:typename:unsigned
get_size	swisstm/src/common/log.h	/^	inline unsigned Log<T, CHUNK_LENGTH, INIT>::get_size() const {$/;"	f	class:wlpdstm::Log	typeref:typename:unsigned
get_slot_from_rec_new	tree_vrbtree.c	/^get_slot_from_rec_new(node_t *node, vtree_pthread_data_t *vtree_data)$/;"	f	typeref:struct:vtree_slot *	file:
get_time_ms	swisstm/src/mubench/time.h	/^inline uint64_t get_time_ms() {$/;"	f	typeref:typename:uint64_t
get_time_ns	swisstm/src/mubench/time.h	/^inline uint64_t get_time_ns() {$/;"	f	typeref:typename:uint64_t
get_total_op_ratio	swisstm/src/mubench/rbforest.cc	/^static unsigned get_total_op_ratio(op_ratios_t &op) {$/;"	f	typeref:typename:unsigned	file:
get_value	swisstm/src/dynamic/version_lock.h	/^	inline Word get_value(VersionLock lock) {$/;"	f	namespace:wlpdstm	typeref:typename:Word
get_value	swisstm/src/stm/version_lock.h	/^	inline Word get_value(VersionLock lock) {$/;"	f	namespace:wlpdstm	typeref:typename:Word
get_version_lock	swisstm/src/dynamic/version_lock.h	/^	inline VersionLock get_version_lock(Word ts) {$/;"	f	namespace:wlpdstm	typeref:typename:VersionLock
get_version_lock	swisstm/src/stm/version_lock.h	/^	inline VersionLock get_version_lock(Word ts) {$/;"	f	namespace:wlpdstm	typeref:typename:VersionLock
get_word_address	swisstm/src/common/constants.h	/^	inline Word *get_word_address(void *address) {$/;"	f	namespace:wlpdstm	typeref:typename:Word *
gib_size	zipf/test.c	/^static unsigned long gib_size = 1;$/;"	v	typeref:typename:unsigned long	file:
global_argPtr	swisstm/src/mubench/thread.c	/^static void*             global_argPtr          = NULL;$/;"	v	typeref:typename:void *	file:
global_barrierPtr	swisstm/src/mubench/thread.c	/^static THREAD_BARRIER_T* global_barrierPtr      = NULL;$/;"	v	typeref:typename:THREAD_BARRIER_T *	file:
global_doShutdown	swisstm/src/mubench/thread.c	/^static volatile bool_t   global_doShutdown      = FALSE;$/;"	v	typeref:typename:volatile bool_t	file:
global_finish	tree_rlu.c	/^void global_finish()$/;"	f	typeref:typename:void
global_funcPtr	swisstm/src/mubench/thread.c	/^static void            (*global_funcPtr)(void*) = NULL;$/;"	v	typeref:typename:void (*)(void *)	file:
global_numThread	swisstm/src/mubench/thread.c	/^static long              global_numThread       = 1;$/;"	v	typeref:typename:long	file:
global_threadAttr	swisstm/src/mubench/thread.c	/^static THREAD_ATTR_T     global_threadAttr;$/;"	v	typeref:typename:THREAD_ATTR_T	file:
global_threadId	swisstm/src/mubench/thread.c	/^static THREAD_LOCAL_T    global_threadId;$/;"	v	typeref:typename:THREAD_LOCAL_T	file:
global_threadIds	swisstm/src/mubench/thread.c	/^static long*             global_threadIds       = NULL;$/;"	v	typeref:typename:long *	file:
global_threads	swisstm/src/mubench/thread.c	/^static THREAD_T*         global_threads         = NULL;$/;"	v	typeref:typename:THREAD_T *	file:
greedy_ts	swisstm/src/dynamic/transaction.h	/^				volatile Word greedy_ts;$/;"	m	union:wlpdstm::TransactionDynamic::__anonc8737335020a	typeref:typename:volatile Word
greedy_ts	swisstm/src/stm/transaction_mixinv.h	/^			volatile Word greedy_ts;$/;"	m	union:wlpdstm::TxMixinv::__anon87a360de020a	typeref:typename:volatile Word
green_cm_item	swisstm/src/dynamic/transaction.h	/^				volatile GreenCMQueueItem green_cm_item;$/;"	m	union:wlpdstm::TransactionDynamic::__anonc8737335060a	typeref:typename:volatile GreenCMQueueItem
harris_free_node	list_harris.c	/^static inline void harris_free_node(node_t *node, qsbr_pthread_data_t *qsbr_data)$/;"	f	typeref:typename:void	file:
harris_list	list_harris.c	/^typedef struct harris_list {$/;"	s	file:
harris_list_t	list_harris.c	/^} harris_list_t;$/;"	t	typeref:struct:harris_list	file:
harris_maybe_quiescent	list_harris.c	/^static inline void harris_maybe_quiescent(harris_pthread_data_t *harris_data)$/;"	f	typeref:typename:void	file:
harris_pthread_data	list_harris.c	/^typedef struct harris_pthread_data {$/;"	s	file:
harris_pthread_data_t	list_harris.c	/^} harris_pthread_data_t;$/;"	t	typeref:struct:harris_pthread_data	file:
hasNext	swisstm/src/common/log.h	/^	inline bool Log<T, CHUNK_LENGTH, INIT>::iterator::hasNext() {$/;"	f	class:wlpdstm::Log::iterator	typeref:typename:bool
hasNext	swisstm/src/common/log.h	/^	inline bool Log<T, INITIAL_SIZE, GROWTH_FACTOR>::iterator::hasNext() const {$/;"	f	class:wlpdstm::Log::iterator	typeref:typename:bool
hasNext	swisstm/src/common/log.h	/^	inline bool Log<T, INITIAL_SIZE>::iterator::hasNext() {$/;"	f	class:wlpdstm::Log::iterator	typeref:typename:bool
hasPrev	swisstm/src/common/log.h	/^	inline bool Log<T, CHUNK_LENGTH, INIT>::rev_iterator::hasPrev() {$/;"	f	class:wlpdstm::Log::rev_iterator	typeref:typename:bool
hash	zipf/test.c	/^static struct flist_head *hash;$/;"	v	typeref:struct:flist_head *	file:
hash_bits	zipf/test.c	/^static unsigned long hash_bits = 24;$/;"	v	typeref:typename:unsigned long	file:
hash_insert	zipf/test.c	/^static void hash_insert(struct node *n, unsigned long long val)$/;"	f	typeref:typename:void	file:
hash_key	swisstm/src/dynamic/lazy/hashtable.h	/^inline uintptr_t wlpdstm::Hashtable<VAL, SIZE>::hash_key(uintptr_t key) {$/;"	f	class:wlpdstm::Hashtable	typeref:typename:uintptr_t
hash_long	zipf/hash.h	/^static inline unsigned long hash_long(unsigned long val, unsigned int bits)$/;"	f	typeref:typename:unsigned long
hash_lookup	zipf/test.c	/^static struct node *hash_lookup(unsigned long long val)$/;"	f	typeref:struct:node *	file:
hash_ptr	zipf/hash.h	/^static inline unsigned long hash_ptr(void *ptr, unsigned int bits)$/;"	f	typeref:typename:unsigned long
hash_size	zipf/test.c	/^static unsigned long hash_size = 1 << 24;$/;"	v	typeref:typename:unsigned long	file:
hash_write_set	swisstm/src/stm/transaction_mixinv.h	/^		WriteLogEntry *hash_write_set[HASH_WRITE_SET_SIZE];$/;"	m	class:wlpdstm::TxMixinv	typeref:typename:WriteLogEntry * []
hash_write_set_markers	swisstm/src/stm/transaction_mixinv.h	/^		uint8_t hash_write_set_markers[HASH_WRITE_SET_SIZE];$/;"	m	class:wlpdstm::TxMixinv	typeref:typename:uint8_t[]
hashv	zipf/test.c	/^static unsigned int hashv(unsigned long long val)$/;"	f	typeref:typename:unsigned int	file:
head	list_harris.c	/^	node_t *head;$/;"	m	struct:harris_list	typeref:typename:node_t *	file:
head	list_move_rlu.c	/^	node_t *head[2];$/;"	m	struct:rlu_list	typeref:typename:node_t * [2]	file:
head	list_move_spinlock.c	/^	node_t *head[2];$/;"	m	struct:spinlock_list	typeref:typename:node_t * [2]	file:
head	list_move_vlist.c	/^	node_t *head[2];$/;"	m	struct:vlist_list	typeref:typename:node_t * [2]	file:
head	list_rcu.c	/^	node_t *head;$/;"	m	struct:rcu_list	typeref:typename:node_t *	file:
head	list_rlu.c	/^	node_t *head;$/;"	m	struct:rlu_list	typeref:typename:node_t *	file:
head	list_spinlock.c	/^	node_t *head;$/;"	m	struct:spinlock_list	typeref:typename:node_t *	file:
head	list_vlist.c	/^	node_t *head;$/;"	m	struct:vlist_list	typeref:typename:node_t *	file:
head	swisstm/src/common/log.h	/^			LogChunk *head;$/;"	m	class:wlpdstm::Log	typeref:typename:LogChunk *
head	swisstm/src/common/log.h	/^			Node *head;$/;"	m	class:wlpdstm::Log	typeref:typename:Node *
head	swisstm/src/common/stats_base.h	/^			ThreadStatistics *head;$/;"	m	class:wlpdstm::ThreadStatsCollectionBase	typeref:typename:ThreadStatistics *
head	swisstm/src/dynamic/log.h	/^		WriteWordLogEntry *head;$/;"	m	struct:wlpdstm::WriteLogEntry	typeref:typename:WriteWordLogEntry *
head	swisstm/src/dynamic/transaction.h	/^		volatile GreenCMQueueItem *head;$/;"	m	struct:wlpdstm::GreenCMQueueItem	typeref:typename:volatile GreenCMQueueItem *
head	swisstm/src/mubench/intset-list-mv.c	/^  node_t *head[2];$/;"	m	struct:intset	typeref:typename:node_t * [2]	file:
head	swisstm/src/mubench/intset.c	/^  node_t *head;$/;"	m	struct:intset	typeref:typename:node_t *	file:
head	swisstm/src/stm/transaction_mixinv.h	/^			WriteWordLogEntry *head;$/;"	m	struct:wlpdstm::TxMixinv::WriteLogEntry	typeref:typename:WriteWordLogEntry *
headChunk	swisstm/src/common/log.h	/^				LogChunk *headChunk;$/;"	m	class:wlpdstm::Log::rev_iterator	typeref:typename:LogChunk *
high	swisstm/src/tanger/tanger_stack_area.h	/^		uintptr_t high;$/;"	m	class:wlpdstm::StackArea	typeref:typename:uintptr_t
hits	zipf/test.c	/^	unsigned long hits;$/;"	m	struct:node	typeref:typename:unsigned long	file:
id	benchmark_list.h	/^	long id;$/;"	m	struct:pthread_data	typeref:typename:long
id	benchmark_list_move.h	/^	long id;$/;"	m	struct:pthread_data	typeref:typename:long
ids	rlu.h	/^	long ids[RLU_MAX_NESTED_WRITER_LOCKS];$/;"	m	struct:writer_locks	typeref:typename:long[]
in_critical	qsbr.h	/^	int in_critical;$/;"	m	struct:qsbr_pthread_data	typeref:typename:int
init	swisstm/src/common/lock.h	/^			void init() volatile {$/;"	f	class:wlpdstm::cas_lock	typeref:typename:void
init	swisstm/src/common/tls.h	/^			static __thread bool init;$/;"	m	class:wlpdstm::Tls	typeref:typename:__thread bool
init	swisstm/src/common/tls.h	/^template<class T, bool GLOBAL_INIT, bool THREAD_INIT> __thread bool wlpdstm::Tls<T, GLOBAL_INIT,/;"	m	class:wlpdstm::Tls<T, GLOBAL_INIT, THREAD_INIT>	typeref:typename:__thread bool
init	swisstm/src/common/tls.h	/^template<class T, bool GLOBAL_INIT, bool THREAD_INIT> bool wlpdstm::Tls<T, GLOBAL_INIT, THREAD_I/;"	m	class:wlpdstm::Tls<T, GLOBAL_INIT, THREAD_INIT>	typeref:typename:bool
init_barrier	swisstm/src/mubench/barrier.h	/^inline void init_barrier(barrier_t *b, uintptr_t v) {$/;"	f	typeref:typename:void
init_operations	swisstm/src/mubench/rbforest.cc	/^static operation_t *init_operations(cmd_line_args_t &args) {$/;"	f	typeref:typename:operation_t *	file:
init_rand	zipf/rand.c	/^void init_rand(struct frand_state *state, int use64)$/;"	f	typeref:typename:void
init_rand_seed	zipf/rand.c	/^void init_rand_seed(struct frand_state *state, unsigned int seed, int use64)$/;"	f	typeref:typename:void
init_rbtree	swisstm/src/mubench/rbforest.cc	/^static rbtree_t *init_rbtree(unsigned max_val) {$/;"	f	typeref:typename:rbtree_t *	file:
init_ts	swisstm/src/dynamic/memory/memory_impl.h	/^		bool init_ts;$/;"	m	struct:wlpdstm::PtrBufferT	typeref:typename:bool
init_ts	swisstm/src/stm/memory/memory_impl.h	/^		bool init_ts;$/;"	m	struct:wlpdstm::PtrBufferT	typeref:typename:bool
initial_size	config-list.json	/^                        "initial_size" : 1000,$/;"	n	object:list1k.0
initial_size	config-list.json	/^                        "initial_size" : 10000,$/;"	n	object:list10k.0
initial_size	config-list.json	/^                        "initial_size" : 50000,$/;"	n	object:list50k.0
initial_size	config-tree.json	/^                        "initial_size" : 10000,$/;"	n	object:tree10k.0
initial_size	config.json	/^                        "initial_size" : 10000,$/;"	n	object:tree10k-aug10.0
initial_size	list.json	/^                        "initial_size" : 1000,$/;"	n	object:list1k.0
initial_size	list.json	/^                        "initial_size" : 10000,$/;"	n	object:list10k.0
initial_size	list.json	/^                        "initial_size" : 100000,$/;"	n	object:list100k.0
insert	swisstm/src/common/log.h	/^	inline void Log<T, CHUNK_LENGTH, INIT>::insert(const T& el) {$/;"	f	class:wlpdstm::Log	typeref:typename:void
insert	swisstm/src/common/log.h	/^	inline void Log<T, INITIAL_SIZE, GROWTH_FACTOR>::insert(const T& element) {$/;"	f	class:wlpdstm::Log	typeref:typename:void
insert	swisstm/src/common/log.h	/^	inline void Log<T, INITIAL_SIZE>::insert(const T& el) {$/;"	f	class:wlpdstm::Log	typeref:typename:void
insert	swisstm/src/dynamic/lazy/hashtable.h	/^inline void wlpdstm::Hashtable<VAL, SIZE>::insert(uintptr_t key, VAL *val) {$/;"	f	class:wlpdstm::Hashtable	typeref:typename:void
insert	swisstm/src/mubench/rbtree.c	/^insert (rbtree_t* s, int k, int v, node_t* n)$/;"	f	typeref:typename:node_t *	file:
int_to_str	swisstm/src/common/configuration.h	/^inline std::string wlpdstm::Config::int_to_str(int val) {$/;"	f	class:wlpdstm::Config	typeref:typename:std::string
intptr_t	rlu.h	/^typedef long intptr_t; \/\/ Hack for kernel that does not have intptr_t$/;"	t	typeref:typename:long
intset	swisstm/src/mubench/intset-list-mv.c	/^typedef struct intset {$/;"	s	file:
intset	swisstm/src/mubench/intset.c	/^typedef struct intset {$/;"	s	file:
intset_t	swisstm/src/mubench/intset-list-mv.c	/^} intset_t;$/;"	t	typeref:struct:intset	file:
intset_t	swisstm/src/mubench/intset.c	/^typedef rbtree_t intset_t;$/;"	t	typeref:typename:rbtree_t	file:
intset_t	swisstm/src/mubench/intset.c	/^} intset_t;$/;"	t	typeref:struct:intset	file:
is_check_locks	rlu.h	/^	char is_check_locks;$/;"	m	struct:rlu_thread_data	typeref:typename:char
is_locked	swisstm/src/dynamic/version_lock.h	/^	inline bool is_locked(VersionLock lock) {$/;"	f	namespace:wlpdstm	typeref:typename:bool
is_locked	swisstm/src/stm/version_lock.h	/^	inline bool is_locked(VersionLock lock) {$/;"	f	namespace:wlpdstm	typeref:typename:bool
is_no_quiescence	rlu.h	/^	volatile long is_no_quiescence;$/;"	m	struct:rlu_thread_data	typeref:typename:volatile long
is_read_locked	swisstm/src/dynamic/version_lock.h	/^	inline bool is_read_locked(VersionLock lock) {$/;"	f	namespace:wlpdstm	typeref:typename:bool
is_read_locked	swisstm/src/stm/version_lock.h	/^	inline bool is_read_locked(VersionLock lock) {$/;"	f	namespace:wlpdstm	typeref:typename:bool
is_root_node_idx	swisstm/src/stm/privatization_tree.h	/^inline unsigned wlpdstm::PrivatizationTree::is_root_node_idx(unsigned node_idx) {$/;"	f	class:wlpdstm::PrivatizationTree	typeref:typename:unsigned
is_steal	rlu.h	/^	char is_steal;$/;"	m	struct:rlu_thread_data	typeref:typename:char
is_sync	rlu.h	/^	volatile long is_sync;$/;"	m	struct:rlu_thread_data	typeref:typename:volatile long
is_wait	rlu.h	/^	volatile unsigned char is_wait;$/;"	m	struct:wait_entry	typeref:typename:volatile unsigned char
is_write_detected	rlu.h	/^	char is_write_detected;$/;"	m	struct:rlu_thread_data	typeref:typename:char
is_write_locked	swisstm/src/dynamic/version_lock.h	/^	inline bool is_write_locked(VersionLock lock) {$/;"	f	namespace:wlpdstm	typeref:typename:bool
is_write_locked	swisstm/src/stm/version_lock.h	/^	inline bool is_write_locked(VersionLock lock) {$/;"	f	namespace:wlpdstm	typeref:typename:bool
iterator	swisstm/src/common/log.h	/^					iterator(LogChunk *c = NULL, unsigned el = 0,$/;"	f	class:wlpdstm::Log::iterator
iterator	swisstm/src/common/log.h	/^					iterator(Node *n = NULL) : current(n)  {  }$/;"	f	class:wlpdstm::Log::iterator
iterator	swisstm/src/common/log.h	/^					iterator(T *ar = NULL, unsigned s = 0,$/;"	f	class:wlpdstm::Log::iterator
iterator	swisstm/src/common/log.h	/^			class iterator : public WlpdstmAlloced {$/;"	c	class:wlpdstm::Log
jhash	zipf/hash.h	/^static inline uint32_t jhash(const void *key, uint32_t length, uint32_t initval)$/;"	f	typeref:typename:uint32_t
k	swisstm/src/mubench/rbtree.h	/^    intptr_t k;$/;"	m	struct:node	typeref:typename:intptr_t
key	tree_prcu.c	/^	volatile long key;$/;"	m	struct:prcu_pthread_data	typeref:typename:volatile long	file:
l	swisstm/src/mubench/rbtree.h	/^    struct node* l;$/;"	m	struct:node	typeref:struct:node *
last	swisstm/src/common/stats_base.h	/^			ThreadStatistics *last;$/;"	m	class:wlpdstm::ThreadStatsCollectionBase	typeref:typename:ThreadStatistics *
lastChunk	swisstm/src/common/log.h	/^					LogChunk *lastChunk;$/;"	m	class:wlpdstm::Log::iterator	typeref:typename:LogChunk *
lastChunk	swisstm/src/common/log.h	/^			LogChunk *lastChunk;$/;"	m	class:wlpdstm::Log	typeref:typename:LogChunk *
lastElement	swisstm/src/common/log.h	/^					unsigned lastElement;$/;"	m	class:wlpdstm::Log::iterator	typeref:typename:unsigned
last_committed	swisstm/src/common/profiling/non_tx_duration.h	/^			bool last_committed;$/;"	m	class:wlpdstm::NonTxDurationProfiling	typeref:typename:bool
last_committed	swisstm/src/common/profiling/tx_duration.h	/^			bool last_committed;$/;"	m	class:wlpdstm::TxDurationProfiling	typeref:typename:bool
last_event_cycles	swisstm/src/common/profiling/adaptive.h	/^			uint64_t last_event_cycles;$/;"	m	class:wlpdstm::AdaptiveProfiling	typeref:typename:uint64_t
last_event_cycles	swisstm/src/common/profiling/simple.h	/^			uint64_t last_event_cycles;$/;"	m	class:wlpdstm::SimpleProfiling	typeref:typename:uint64_t
last_event_cycles	swisstm/src/dynamic/profiling/adaptive_dynamic.h	/^			uint64_t last_event_cycles;$/;"	m	class:wlpdstm::AdaptiveDynamicProfiling	typeref:typename:uint64_t
last_minimum_ts	swisstm/src/dynamic/memory/memory_impl.h	/^			Word last_minimum_ts;$/;"	m	class:wlpdstm::MemoryManager	typeref:typename:Word
last_minimum_ts	swisstm/src/stm/memory/memory_impl.h	/^			Word last_minimum_ts;$/;"	m	class:wlpdstm::MemoryManager	typeref:typename:Word
last_my_ts	swisstm/src/stm/privatization_tree.cc	/^Word wlpdstm::PrivatizationTree::last_my_ts[MAX_THREADS];$/;"	m	class:wlpdstm::PrivatizationTree	typeref:typename:Word[]
last_my_ts	swisstm/src/stm/privatization_tree.h	/^			static Word last_my_ts[MAX_THREADS];$/;"	m	class:wlpdstm::PrivatizationTree	typeref:typename:Word[]
last_observed_ts	swisstm/src/dynamic/transaction.h	/^				volatile Word last_observed_ts;$/;"	m	union:wlpdstm::TransactionDynamic::__anonc8737335040a	typeref:typename:volatile Word
last_observed_ts	swisstm/src/stm/transaction_mixinv.h	/^			volatile Word last_observed_ts;$/;"	m	union:wlpdstm::TxMixinv::__anon87a360de040a	typeref:typename:volatile Word
last_parent_ts	swisstm/src/stm/privatization_tree.cc	/^Word wlpdstm::PrivatizationTree::last_parent_ts[MAX_THREADS];$/;"	m	class:wlpdstm::PrivatizationTree	typeref:typename:Word[]
last_parent_ts	swisstm/src/stm/privatization_tree.h	/^			static Word last_parent_ts[MAX_THREADS];$/;"	m	class:wlpdstm::PrivatizationTree	typeref:typename:Word[]
last_sibling_ts	swisstm/src/stm/privatization_tree.cc	/^Word wlpdstm::PrivatizationTree::last_sibling_ts[MAX_THREADS];$/;"	m	class:wlpdstm::PrivatizationTree	typeref:typename:Word[]
last_sibling_ts	swisstm/src/stm/privatization_tree.h	/^			static Word last_sibling_ts[MAX_THREADS];$/;"	m	class:wlpdstm::PrivatizationTree	typeref:typename:Word[]
last_tx_state	swisstm/src/common/profiling/non_tx_duration_pcnt_simple.h	/^			LastTransactionState last_tx_state;$/;"	m	class:wlpdstm::NonTxDurationPcntProfilingSimple	typeref:typename:LastTransactionState
last_tx_state	swisstm/src/common/profiling/non_tx_duration_simple.h	/^			LastTransactionState last_tx_state;$/;"	m	class:wlpdstm::NonTxDurationProfilingSimple	typeref:typename:LastTransactionState
left	tree_bonsai.c	/^	struct node *left;$/;"	m	struct:node	typeref:struct:node *	file:
leftOf	swisstm/src/mubench/rbtree.c	/^leftOf (node_t* n)$/;"	f	typeref:typename:node_t *	file:
lexical_tx_id	swisstm/src/common/stats_base.h	/^		int lexical_tx_id;$/;"	m	struct:wlpdstm::ThreadStatsBase	typeref:typename:int
lexical_tx_stat_used	swisstm/src/common/stats_base.h	/^		bool lexical_tx_stat_used[MAX_LEXICAL_TX];$/;"	m	struct:wlpdstm::ThreadStatsBase	typeref:typename:bool[]
lexical_tx_stats	swisstm/src/common/stats_base.h	/^		Statistics *lexical_tx_stats[TX_TYPES][MAX_LEXICAL_TX];$/;"	m	struct:wlpdstm::ThreadStatsBase	typeref:typename:Statistics * [][]
likely	rlu.c	/^# define likely(/;"	d	file:
list	benchmark_list.h	/^	void *list;$/;"	m	struct:pthread_data	typeref:typename:void *
list	benchmark_list_move.h	/^	void *list;$/;"	m	struct:pthread_data	typeref:typename:void *
list	zipf/test.c	/^	struct flist_head list;$/;"	m	struct:node	typeref:struct:flist_head	file:
list100k	list.json	/^        "list100k": [$/;"	a
list10k	config-list.json	/^        "list10k": [$/;"	a
list10k	list.json	/^        "list10k": [$/;"	a
list1k	config-list.json	/^        "list1k": [$/;"	a
list1k	list.json	/^        "list1k": [$/;"	a
list50k	config-list.json	/^        "list50k": [$/;"	a
list_del	list_harris.c	/^int list_del(int key, pthread_data_t *data)$/;"	f	typeref:typename:int
list_del	list_rcu.c	/^int list_del(int key, pthread_data_t *data)$/;"	f	typeref:typename:int
list_del	list_rlu.c	/^int list_del(int key, pthread_data_t *data)$/;"	f	typeref:typename:int
list_del	list_spinlock.c	/^int list_del(int key, pthread_data_t *data)$/;"	f	typeref:typename:int
list_del	list_vlist.c	/^int list_del(int key, pthread_data_t *data)$/;"	f	typeref:typename:int
list_del	tree_bonsai.c	/^int list_del(int key, pthread_data_t *data)$/;"	f	typeref:typename:int
list_del	tree_citrus_rlu.c	/^int list_del(int key, pthread_data_t *data)$/;"	f	typeref:typename:int
list_del	tree_prcu.c	/^int list_del(int key, pthread_data_t *data)$/;"	f	typeref:typename:int
list_del	tree_rcu.c	/^int list_del(int key, pthread_data_t *data)$/;"	f	typeref:typename:int
list_del	tree_rlu.c	/^int list_del(int key, pthread_data_t *data)$/;"	f	typeref:typename:int
list_del	tree_vrbtree.c	/^int list_del(int key, pthread_data_t *data)$/;"	f	typeref:typename:int
list_del	tree_vtree.c	/^int list_del(int key, pthread_data_t *data)$/;"	f	typeref:typename:int
list_find	list_harris.c	/^int list_find(int key, pthread_data_t *data)$/;"	f	typeref:typename:int
list_find	list_rcu.c	/^int list_find(int key, pthread_data_t *data)$/;"	f	typeref:typename:int
list_find	list_rlu.c	/^int list_find(int key, pthread_data_t *data)$/;"	f	typeref:typename:int
list_find	list_spinlock.c	/^int list_find(int key, pthread_data_t *data)$/;"	f	typeref:typename:int
list_find	list_vlist.c	/^int list_find(int key, pthread_data_t *data)$/;"	f	typeref:typename:int
list_find	tree_bonsai.c	/^int list_find(int key, pthread_data_t *data)$/;"	f	typeref:typename:int
list_find	tree_citrus_rlu.c	/^int list_find(int key, pthread_data_t *data)$/;"	f	typeref:typename:int
list_find	tree_prcu.c	/^int list_find(int key, pthread_data_t *data)$/;"	f	typeref:typename:int
list_find	tree_rcu.c	/^int list_find(int key, pthread_data_t *data)$/;"	f	typeref:typename:int
list_find	tree_rlu.c	/^int list_find(int key, pthread_data_t *data)$/;"	f	typeref:typename:int
list_find	tree_vrbtree.c	/^int list_find(int key, pthread_data_t *data)$/;"	f	typeref:typename:int
list_find	tree_vtree.c	/^int list_find(int key, pthread_data_t *data)$/;"	f	typeref:typename:int
list_global_exit	list_harris.c	/^void list_global_exit(void *list)$/;"	f	typeref:typename:void
list_global_exit	list_move_rlu.c	/^void list_global_exit(void *list)$/;"	f	typeref:typename:void
list_global_exit	list_move_spinlock.c	/^void list_global_exit(void *list)$/;"	f	typeref:typename:void
list_global_exit	list_move_vlist.c	/^void list_global_exit(void *list)$/;"	f	typeref:typename:void
list_global_exit	list_rcu.c	/^void list_global_exit(void *list)$/;"	f	typeref:typename:void
list_global_exit	list_rlu.c	/^void list_global_exit(void *list)$/;"	f	typeref:typename:void
list_global_exit	list_spinlock.c	/^void list_global_exit(void *list)$/;"	f	typeref:typename:void
list_global_exit	list_vlist.c	/^void list_global_exit(void *list)$/;"	f	typeref:typename:void
list_global_exit	tree_bonsai.c	/^void list_global_exit(void *list)$/;"	f	typeref:typename:void
list_global_exit	tree_citrus_rlu.c	/^void list_global_exit(void *list)$/;"	f	typeref:typename:void
list_global_exit	tree_prcu.c	/^void list_global_exit(void *tree)$/;"	f	typeref:typename:void
list_global_exit	tree_rcu.c	/^void list_global_exit(void *tree)$/;"	f	typeref:typename:void
list_global_exit	tree_rlu.c	/^void list_global_exit(void *list)$/;"	f	typeref:typename:void
list_global_exit	tree_vrbtree.c	/^void list_global_exit(void *list)$/;"	f	typeref:typename:void
list_global_exit	tree_vtree.c	/^void list_global_exit(void *list)$/;"	f	typeref:typename:void
list_global_init	list_harris.c	/^void *list_global_init(int init_size, int value_range)$/;"	f	typeref:typename:void *
list_global_init	list_move_rlu.c	/^void *list_global_init(int init_size, int value_range)$/;"	f	typeref:typename:void *
list_global_init	list_move_spinlock.c	/^void *list_global_init(int init_size, int value_range)$/;"	f	typeref:typename:void *
list_global_init	list_move_vlist.c	/^void *list_global_init(int init_size, int value_range)$/;"	f	typeref:typename:void *
list_global_init	list_rcu.c	/^void *list_global_init(int init_size, int value_range)$/;"	f	typeref:typename:void *
list_global_init	list_rlu.c	/^void *list_global_init(int init_size, int value_range)$/;"	f	typeref:typename:void *
list_global_init	list_spinlock.c	/^void *list_global_init(int init_size, int value_range)$/;"	f	typeref:typename:void *
list_global_init	list_vlist.c	/^void *list_global_init(int init_size, int value_range)$/;"	f	typeref:typename:void *
list_global_init	tree_bonsai.c	/^void *list_global_init(int init_size, int value_range)$/;"	f	typeref:typename:void *
list_global_init	tree_citrus_rlu.c	/^void *list_global_init(int init_size, int value_range)$/;"	f	typeref:typename:void *
list_global_init	tree_prcu.c	/^void *list_global_init(int init_size, int value_range)$/;"	f	typeref:typename:void *
list_global_init	tree_rcu.c	/^void *list_global_init(int init_size, int value_range)$/;"	f	typeref:typename:void *
list_global_init	tree_rlu.c	/^void *list_global_init(int init_size, int value_range)$/;"	f	typeref:typename:void *
list_global_init	tree_vrbtree.c	/^void *list_global_init(int init_size, int value_range)$/;"	f	typeref:typename:void *
list_global_init	tree_vtree.c	/^void *list_global_init(int init_size, int value_range)$/;"	f	typeref:typename:void *
list_harris.o	Makefile	/^list_harris.o: list_harris.c benchmark_list.h util.h$/;"	t
list_ins	list_harris.c	/^int list_ins(int key, pthread_data_t *data)$/;"	f	typeref:typename:int
list_ins	list_rcu.c	/^int list_ins(int key, pthread_data_t *data)$/;"	f	typeref:typename:int
list_ins	list_rlu.c	/^int list_ins(int key, pthread_data_t *data)$/;"	f	typeref:typename:int
list_ins	list_spinlock.c	/^int list_ins(int key, pthread_data_t *data)$/;"	f	typeref:typename:int
list_ins	list_vlist.c	/^int list_ins(int key, pthread_data_t *data)$/;"	f	typeref:typename:int
list_ins	tree_bonsai.c	/^int list_ins(int key, pthread_data_t *data)$/;"	f	typeref:typename:int
list_ins	tree_citrus_rlu.c	/^int list_ins(int key, pthread_data_t *data)$/;"	f	typeref:typename:int
list_ins	tree_prcu.c	/^int list_ins(int key, pthread_data_t *data)$/;"	f	typeref:typename:int
list_ins	tree_rcu.c	/^int list_ins(int key, pthread_data_t *data)$/;"	f	typeref:typename:int
list_ins	tree_rlu.c	/^int list_ins(int key, pthread_data_t *data)$/;"	f	typeref:typename:int
list_ins	tree_vrbtree.c	/^int list_ins(int key, pthread_data_t *data)$/;"	f	typeref:typename:int
list_ins	tree_vtree.c	/^int list_ins(int key, pthread_data_t *data)$/;"	f	typeref:typename:int
list_move	list_move_rlu.c	/^int list_move(int key, pthread_data_t *data, int from)$/;"	f	typeref:typename:int
list_move	list_move_spinlock.c	/^int list_move(int key, pthread_data_t *data, int from)$/;"	f	typeref:typename:int
list_move	list_move_vlist.c	/^int list_move(int key, pthread_data_t *data, int from)$/;"	f	typeref:typename:int
list_move_rlu.o	Makefile	/^list_move_rlu.o: list_move_rlu.c benchmark_list_move.h$/;"	t
list_move_spinlock.o	Makefile	/^list_move_spinlock.o: list_move_spinlock.c benchmark_list_move.h$/;"	t
list_move_vlist.o	Makefile	/^list_move_vlist.o: list_move_vlist.c benchmark_list_move.h$/;"	t
list_mvrlu.o	Makefile	/^list_mvrlu.o: list_rlu.c benchmark_list.h rlu.h$/;"	t
list_rcu.o	Makefile	/^list_rcu.o: list_rcu.c benchmark_list.h$/;"	t
list_rlu.o	Makefile	/^list_rlu.o: list_rlu.c benchmark_list.h rlu.h$/;"	t
list_spinlock.o	Makefile	/^list_spinlock.o: list_spinlock.c benchmark_list.h$/;"	t
list_thread_init	list_harris.c	/^int list_thread_init(pthread_data_t *data, pthread_data_t **sync_data, int nr_threads)$/;"	f	typeref:typename:int
list_thread_init	list_move_rlu.c	/^int list_thread_init(pthread_data_t *data, pthread_data_t **sync_data, int nr_threads)$/;"	f	typeref:typename:int
list_thread_init	list_move_spinlock.c	/^int list_thread_init(pthread_data_t *data, pthread_data_t **sync_data, int nr_threads)$/;"	f	typeref:typename:int
list_thread_init	list_move_vlist.c	/^int list_thread_init(pthread_data_t *data, pthread_data_t **sync_data, int nr_threads)$/;"	f	typeref:typename:int
list_thread_init	list_rcu.c	/^int list_thread_init(pthread_data_t *data, pthread_data_t **sync_data, int nr_threads)$/;"	f	typeref:typename:int
list_thread_init	list_rlu.c	/^int list_thread_init(pthread_data_t *data, pthread_data_t **sync_data, int nr_threads)$/;"	f	typeref:typename:int
list_thread_init	list_spinlock.c	/^int list_thread_init(pthread_data_t *data, pthread_data_t **sync_data, int nr_threads)$/;"	f	typeref:typename:int
list_thread_init	list_vlist.c	/^int list_thread_init(pthread_data_t *data, pthread_data_t **sync_data, int nr_threads)$/;"	f	typeref:typename:int
list_thread_init	tree_bonsai.c	/^int list_thread_init(pthread_data_t *data, pthread_data_t **sync_data, int nr_threads)$/;"	f	typeref:typename:int
list_thread_init	tree_citrus_rlu.c	/^int list_thread_init(pthread_data_t *data, pthread_data_t **sync_data, int nr_threads)$/;"	f	typeref:typename:int
list_thread_init	tree_prcu.c	/^int list_thread_init(pthread_data_t *data, pthread_data_t **sync_data, int nr_threads)$/;"	f	typeref:typename:int
list_thread_init	tree_rcu.c	/^int list_thread_init(pthread_data_t *data, pthread_data_t **sync_data, int nr_threads)$/;"	f	typeref:typename:int
list_thread_init	tree_rlu.c	/^int list_thread_init(pthread_data_t *data, pthread_data_t **sync_data, int nr_threads)$/;"	f	typeref:typename:int
list_thread_init	tree_vrbtree.c	/^int list_thread_init(pthread_data_t *data, pthread_data_t **sync_data, int nr_threads)$/;"	f	typeref:typename:int
list_thread_init	tree_vtree.c	/^int list_thread_init(pthread_data_t *data, pthread_data_t **sync_data, int nr_threads)$/;"	f	typeref:typename:int
list_vlist.o	Makefile	/^list_vlist.o: list_vlist.c benchmark_list.h util.h$/;"	t
llist	run_tests.py	/^        llist = True$/;"	v
llist	run_tests.py	/^    llist = False$/;"	v
local_commit_version	rlu.h	/^	volatile long local_commit_version;$/;"	m	struct:rlu_thread_data	typeref:typename:volatile long
local_version	rlu.h	/^	volatile long local_version;$/;"	m	struct:rlu_thread_data	typeref:typename:volatile long
locations_accessed	swisstm/src/dynamic/transaction.h	/^			unsigned locations_accessed;$/;"	m	class:wlpdstm::TransactionDynamic	typeref:typename:unsigned
locations_accessed	swisstm/src/stm/transaction_mixinv.h	/^		unsigned locations_accessed;$/;"	m	class:wlpdstm::TxMixinv	typeref:typename:unsigned
lock	swisstm/src/common/lock.h	/^			void lock() volatile {$/;"	f	class:wlpdstm::cas_lock	typeref:typename:void
lock	swisstm/src/dynamic/transaction.h	/^		cas_lock lock;$/;"	m	struct:wlpdstm::GreenCMQueueItem	typeref:typename:cas_lock
lock	swisstm/src/epochstm/transaction.h	/^				volatile WriteLock lock;$/;"	m	struct:wlpdstm::TransactionEpoch::OwnershipRecord	typeref:typename:volatile WriteLock
lock	tree_prcu.c	/^	pthread_mutex_t lock;$/;"	m	struct:node	typeref:typename:pthread_mutex_t	file:
lock	tree_prcu.c	/^	pthread_mutex_t lock;$/;"	m	struct:prcu_table	typeref:typename:pthread_mutex_t	file:
lock	tree_rcu.c	/^	pthread_mutex_t lock;$/;"	m	struct:node	typeref:typename:pthread_mutex_t	file:
lock_memory_stripe_fun	swisstm/src/dynamic/transaction.h	/^			LockMemoryStripeFunPtr lock_memory_stripe_fun;$/;"	m	class:wlpdstm::TransactionDynamic	typeref:typename:LockMemoryStripeFunPtr
log_address	swisstm/src/epochstm/transaction.h	/^				Word *log_address;$/;"	m	struct:wlpdstm::TransactionEpoch::WriteLogEntry	typeref:typename:Word *
log_address	swisstm/src/p-tlrw/transaction.h	/^			Word *log_address;$/;"	m	struct:wlpdstm::TransactionTlrw::WriteLogEntry	typeref:typename:Word *
log_address	swisstm/src/rw/transaction.h	/^			Word *log_address;$/;"	m	struct:wlpdstm::TransactionRw::WriteLogEntry	typeref:typename:Word *
log_address	swisstm/src/tlrw/transaction.h	/^			Word *log_address;$/;"	m	struct:wlpdstm::TransactionTlrw::WriteLogEntry	typeref:typename:Word *
log_value	swisstm/src/epochstm/transaction.h	/^				Word log_value;$/;"	m	struct:wlpdstm::TransactionEpoch::WriteLogEntry	typeref:typename:Word
log_value	swisstm/src/p-tlrw/transaction.h	/^			Word log_value;$/;"	m	struct:wlpdstm::TransactionTlrw::WriteLogEntry	typeref:typename:Word
log_value	swisstm/src/rw/transaction.h	/^			Word log_value;$/;"	m	struct:wlpdstm::TransactionRw::WriteLogEntry	typeref:typename:Word
log_value	swisstm/src/tlrw/transaction.h	/^			Word log_value;$/;"	m	struct:wlpdstm::TransactionTlrw::WriteLogEntry	typeref:typename:Word
lookup	swisstm/src/mubench/rbtree.c	/^lookup (rbtree_t* s, int k)$/;"	f	typeref:typename:node_t *	file:
low	swisstm/src/tanger/tanger_stack_area.h	/^		uintptr_t low;$/;"	m	class:wlpdstm::StackArea	typeref:typename:uintptr_t
m128	swisstm/src/stm_api/read_write.h	/^		__m128 m128[1];$/;"	m	union:wlpdstm::read_write_conv_u	typeref:typename:__m128[1]
main	benchmark_list.c	/^int main(int argc, char *argv[]) {$/;"	f	typeref:typename:int
main	benchmark_list_move.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	swisstm/src/mubench/intset-list-mv.c	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	swisstm/src/mubench/intset.c	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	swisstm/src/mubench/rbforest.cc	/^int main(int argc, char **argv) {$/;"	f	typeref:typename:int
main	swisstm/src/mubench/thread.c	/^main ()$/;"	f	typeref:typename:int
main	zipf/test.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
malloc	rlu.c	/^# define malloc(/;"	d	file:
malloc	swisstm/src/mubench/tm.h	/^#    define malloc(/;"	d
malloc_aligned	swisstm/src/common/cache_aligned_alloc.h	/^	void *malloc_aligned(size_t size) {$/;"	f	namespace:wlpdstm	typeref:typename:void *
malloc_mem_size	swisstm/src/intel/itm.cc	/^	inline size_t malloc_mem_size(void *ptr) {$/;"	f	typeref:typename:size_t
malloc_mem_size	swisstm/src/intel/memory.cc	/^	inline size_t malloc_mem_size(void *ptr) {$/;"	f	typeref:typename:size_t
malloc_mem_size	swisstm/src/tanger/tanger.cc	/^inline size_t malloc_mem_size(void *ptr) {$/;"	f	typeref:typename:size_t
map_address_to_hash_set_idx	swisstm/src/stm/transaction_mixinv.h	/^inline unsigned wlpdstm::TxMixinv::map_address_to_hash_set_idx(Word *address) {$/;"	f	class:wlpdstm::TxMixinv	typeref:typename:unsigned
map_address_to_index	swisstm/src/dynamic/transaction.h	/^inline unsigned wlpdstm::TransactionDynamic::map_address_to_index(Word *address) {$/;"	f	class:wlpdstm::TransactionDynamic	typeref:typename:unsigned
map_address_to_index	swisstm/src/dynamic/transaction.h	/^inline unsigned wlpdstm::TransactionDynamic::map_address_to_index(Word *address, unsigned le) {$/;"	f	class:wlpdstm::TransactionDynamic	typeref:typename:unsigned
map_address_to_index	swisstm/src/epochstm/transaction.h	/^inline unsigned wlpdstm::TransactionEpoch::map_address_to_index(Word *address) {$/;"	f	class:wlpdstm::TransactionEpoch	typeref:typename:unsigned
map_address_to_index	swisstm/src/p-tlrw/transaction.h	/^inline unsigned wlpdstm::TransactionTlrw::map_address_to_index(Word *address) {$/;"	f	class:wlpdstm::TransactionTlrw	typeref:typename:unsigned
map_address_to_index	swisstm/src/rw/transaction.h	/^inline unsigned wlpdstm::TransactionRw::map_address_to_index(Word *address) {$/;"	f	class:wlpdstm::TransactionRw	typeref:typename:unsigned
map_address_to_index	swisstm/src/stm/transaction_mixinv.h	/^inline unsigned wlpdstm::TxMixinv::map_address_to_index(Word *address) {$/;"	f	class:wlpdstm::TxMixinv	typeref:typename:unsigned
map_address_to_index	swisstm/src/stm/transaction_mixinv.h	/^inline unsigned wlpdstm::TxMixinv::map_address_to_index(Word *address, unsigned le) {$/;"	f	class:wlpdstm::TxMixinv	typeref:typename:unsigned
map_address_to_index	swisstm/src/tlrw/transaction.h	/^inline unsigned wlpdstm::TransactionTlrw::map_address_to_index(Word *address) {$/;"	f	class:wlpdstm::TransactionTlrw	typeref:typename:unsigned
map_address_to_read_lock	swisstm/src/dynamic/transaction.h	/^inline wlpdstm::VersionLock *wlpdstm::TransactionDynamic::map_address_to_read_lock(Word *address/;"	f	class:wlpdstm::TransactionDynamic	typeref:typename:wlpdstm::VersionLock *
map_address_to_read_lock	swisstm/src/stm/transaction_mixinv.h	/^inline wlpdstm::VersionLock *wlpdstm::TxMixinv::map_address_to_read_lock(Word *address) {$/;"	f	class:wlpdstm::TxMixinv	typeref:typename:wlpdstm::VersionLock *
map_address_to_write_lock	swisstm/src/dynamic/transaction.h	/^inline wlpdstm::WriteLock *wlpdstm::TransactionDynamic::map_address_to_write_lock(Word *address)/;"	f	class:wlpdstm::TransactionDynamic	typeref:typename:wlpdstm::WriteLock *
map_address_to_write_lock	swisstm/src/stm/transaction_mixinv.h	/^inline wlpdstm::WriteLock *wlpdstm::TxMixinv::map_address_to_write_lock(Word *address) {$/;"	f	class:wlpdstm::TxMixinv	typeref:typename:wlpdstm::WriteLock *
map_count_to_root_idx	swisstm/src/stm/privatization_tree.cc	/^CACHE_LINE_ALIGNED unsigned wlpdstm::PrivatizationTree::map_count_to_root_idx[MAX_THREADS];$/;"	m	class:wlpdstm::PrivatizationTree	typeref:typename:CACHE_LINE_ALIGNED unsigned[]
map_count_to_root_idx	swisstm/src/stm/privatization_tree.h	/^			static unsigned map_count_to_root_idx[MAX_THREADS];$/;"	m	class:wlpdstm::PrivatizationTree	typeref:typename:unsigned[]
map_orec_idx_to_touched_orec_idx	swisstm/src/epochstm/transaction.h	/^inline unsigned wlpdstm::TransactionEpoch::map_orec_idx_to_touched_orec_idx(unsigned orec_idx) {$/;"	f	class:wlpdstm::TransactionEpoch	typeref:typename:unsigned
map_read_lock_to_write_lock	swisstm/src/dynamic/transaction.h	/^inline wlpdstm::WriteLock *wlpdstm::TransactionDynamic::map_read_lock_to_write_lock(VersionLock /;"	f	class:wlpdstm::TransactionDynamic	typeref:typename:wlpdstm::WriteLock *
map_read_lock_to_write_lock	swisstm/src/stm/transaction_mixinv.h	/^inline wlpdstm::WriteLock *wlpdstm::TxMixinv::map_read_lock_to_write_lock(VersionLock *lock_addr/;"	f	class:wlpdstm::TxMixinv	typeref:typename:wlpdstm::WriteLock *
map_write_lock_to_read_lock	swisstm/src/dynamic/transaction.h	/^inline wlpdstm::VersionLock *wlpdstm::TransactionDynamic::map_write_lock_to_read_lock(WriteLock /;"	f	class:wlpdstm::TransactionDynamic	typeref:typename:wlpdstm::VersionLock *
map_write_lock_to_read_lock	swisstm/src/stm/transaction_mixinv.h	/^inline wlpdstm::VersionLock *wlpdstm::TxMixinv::map_write_lock_to_read_lock(WriteLock *lock_addr/;"	f	class:wlpdstm::TxMixinv	typeref:typename:wlpdstm::VersionLock *
marked	tree_prcu.c	/^	int marked;$/;"	m	struct:node	typeref:typename:int	file:
marked	tree_rcu.c	/^	int marked;$/;"	m	struct:node	typeref:typename:int	file:
markers	swisstm/src/dynamic/lazy/hashtable.h	/^			uint8_t markers[SIZE];$/;"	m	class:wlpdstm::Hashtable	typeref:typename:uint8_t[]
mask	swisstm/src/dynamic/log.h	/^		Word mask;$/;"	m	struct:wlpdstm::WriteWordLogEntry	typeref:typename:Word
mask	swisstm/src/stm/transaction_mixinv.h	/^			Word mask;$/;"	m	struct:wlpdstm::TxMixinv::WriteWordLogEntry	typeref:typename:Word
mask_16	swisstm/src/stm_api/read_write.h	/^		} mask_16;$/;"	m	union:wlpdstm::read_write_conv_u	typeref:struct:wlpdstm::read_write_conv_u::__anoned8f9a5d0108
mask_32_1	swisstm/src/stm_api/read_write.h	/^		} mask_32_1;$/;"	m	union:wlpdstm::read_write_conv_u	typeref:struct:wlpdstm::read_write_conv_u::__anoned8f9a5d0208
mask_32_2	swisstm/src/stm_api/read_write.h	/^		} mask_32_2;$/;"	m	union:wlpdstm::read_write_conv_u	typeref:struct:wlpdstm::read_write_conv_u::__anoned8f9a5d0308
mask_32_3	swisstm/src/stm_api/read_write.h	/^		} mask_32_3;$/;"	m	union:wlpdstm::read_write_conv_u	typeref:struct:wlpdstm::read_write_conv_u::__anoned8f9a5d0408
mask_64_1	swisstm/src/stm_api/read_write.h	/^		} mask_64_1;$/;"	m	union:wlpdstm::read_write_conv_u	typeref:struct:wlpdstm::read_write_conv_u::__anoned8f9a5d0508
mask_64_2	swisstm/src/stm_api/read_write.h	/^		} mask_64_2;$/;"	m	union:wlpdstm::read_write_conv_u	typeref:struct:wlpdstm::read_write_conv_u::__anoned8f9a5d0608
mask_64_3	swisstm/src/stm_api/read_write.h	/^		} mask_64_3;$/;"	m	union:wlpdstm::read_write_conv_u	typeref:struct:wlpdstm::read_write_conv_u::__anoned8f9a5d0708
mask_64_4	swisstm/src/stm_api/read_write.h	/^		} mask_64_4;$/;"	m	union:wlpdstm::read_write_conv_u	typeref:struct:wlpdstm::read_write_conv_u::__anoned8f9a5d0808
mask_64_5	swisstm/src/stm_api/read_write.h	/^		} mask_64_5;$/;"	m	union:wlpdstm::read_write_conv_u	typeref:struct:wlpdstm::read_write_conv_u::__anoned8f9a5d0908
mask_64_6	swisstm/src/stm_api/read_write.h	/^		} mask_64_6;$/;"	m	union:wlpdstm::read_write_conv_u	typeref:struct:wlpdstm::read_write_conv_u::__anoned8f9a5d0a08
mask_64_7	swisstm/src/stm_api/read_write.h	/^		} mask_64_7;$/;"	m	union:wlpdstm::read_write_conv_u	typeref:struct:wlpdstm::read_write_conv_u::__anoned8f9a5d0b08
max	tree_prcu.c	/^	int max;$/;"	m	struct:predicate_info	typeref:typename:int	file:
max	zipf/minmax.h	/^#define max(/;"	d
max_key	tree_prcu.c	/^	int max_key;$/;"	m	struct:predicate_info	typeref:typename:int	file:
max_key_in_range	tree_prcu.c	/^static int max_key_in_range;$/;"	v	typeref:typename:int	file:
max_key_value	swisstm/src/mubench/rbforest.cc	/^    unsigned max_key_value;$/;"	m	struct:cmd_line_args_t	typeref:typename:unsigned	file:
max_key_value	swisstm/src/mubench/rbforest.cc	/^    unsigned max_key_value;$/;"	m	struct:thread_data_t	typeref:typename:unsigned	file:
max_orec_rver	swisstm/src/epochstm/transaction.h	/^				volatile TxCounter max_orec_rver;$/;"	m	struct:wlpdstm::TransactionEpoch::OwnershipRecord	typeref:typename:volatile TxCounter
max_write_sets	rlu.h	/^	int max_write_sets;$/;"	m	struct:rlu_thread_data	typeref:typename:int
membar_full	swisstm/src/common/membar.h	/^inline void membar_full() {$/;"	f	typeref:typename:void
membar_load_store_membar_store_store	swisstm/src/common/membar.h	/^inline void membar_load_store_membar_store_store() {$/;"	f	typeref:typename:void
membar_store_load	swisstm/src/common/membar.h	/^inline void membar_store_load() {$/;"	f	typeref:typename:void
membar_store_load_membar_store_store	swisstm/src/common/membar.h	/^inline void membar_store_load_membar_store_store() {$/;"	f	typeref:typename:void
membar_store_store	swisstm/src/common/membar.h	/^inline void membar_store_store() {$/;"	f	typeref:typename:void
memcpy_tx	swisstm/src/stm_api/read_write.h	/^inline void *wlpdstm::memcpy_tx(Transaction *tx, void *dest, const void *src, size_t n) {$/;"	f	class:wlpdstm	typeref:typename:void *
memmove_tx	swisstm/src/stm_api/read_write.h	/^inline void *wlpdstm::memmove_tx(Transaction *tx, void *dest, const void *src, size_t n) {$/;"	f	class:wlpdstm	typeref:typename:void *
memory	swisstm/src/epochstm/memory/memory_epoch.h	/^		void *memory;$/;"	m	struct:wlpdstm::MemoryBlockS	typeref:typename:void *
memory_blocks	swisstm/src/epochstm/memory/memory_epoch.h	/^		MemoryBlock memory_blocks[MEMORY_BLOCK_BUFFER_SIZE];$/;"	m	struct:wlpdstm::MemoryBlockBufS	typeref:typename:MemoryBlock[]
memset_tx	swisstm/src/stm_api/read_write.h	/^inline void *wlpdstm::memset_tx(Transaction *tx, void *dest, int c, size_t n) {$/;"	f	class:wlpdstm	typeref:typename:void *
min	zipf/minmax.h	/^#define min(/;"	d
min_counter	swisstm/src/epochstm/transaction.cc	/^CACHE_LINE_ALIGNED wlpdstm::TransactionEpoch::PaddedTxCounter wlpdstm::TransactionEpoch::min_cou/;"	m	class:wlpdstm::TransactionEpoch	typeref:typename:CACHE_LINE_ALIGNED wlpdstm::TransactionEpoch::PaddedTxCounter
min_counter	swisstm/src/epochstm/transaction.h	/^		CACHE_LINE_ALIGNED static PaddedTxCounter min_counter;$/;"	m	class:wlpdstm::TransactionEpoch	typeref:typename:CACHE_LINE_ALIGNED PaddedTxCounter
min_key	tree_prcu.c	/^	int min_key;$/;"	m	struct:predicate_info	typeref:typename:int	file:
min_not_zero	zipf/minmax.h	/^#define min_not_zero(/;"	d
minimum_observed_ts	swisstm/src/dynamic/transaction.cc	/^CACHE_LINE_ALIGNED wlpdstm::PaddedWord wlpdstm::TransactionDynamic::minimum_observed_ts;$/;"	m	class:wlpdstm::TransactionDynamic	typeref:typename:CACHE_LINE_ALIGNED wlpdstm::PaddedWord
minimum_observed_ts	swisstm/src/dynamic/transaction.h	/^			static PaddedWord minimum_observed_ts;$/;"	m	class:wlpdstm::TransactionDynamic	typeref:typename:PaddedWord
minimum_observed_ts	swisstm/src/stm/transaction_mixinv.cc	/^CACHE_LINE_ALIGNED wlpdstm::PaddedWord wlpdstm::TxMixinv::minimum_observed_ts;$/;"	m	class:wlpdstm::TxMixinv	typeref:typename:CACHE_LINE_ALIGNED wlpdstm::PaddedWord
minimum_observed_ts	swisstm/src/stm/transaction_mixinv.h	/^		static PaddedWord minimum_observed_ts;$/;"	m	class:wlpdstm::TxMixinv	typeref:typename:PaddedWord
minimum_observed_ts_lock	swisstm/src/dynamic/transaction.cc	/^CACHE_LINE_ALIGNED wlpdstm::PaddedSpinTryLock wlpdstm::TransactionDynamic::minimum_observed_ts_l/;"	m	class:wlpdstm::TransactionDynamic	typeref:typename:CACHE_LINE_ALIGNED wlpdstm::PaddedSpinTryLock
minimum_observed_ts_lock	swisstm/src/dynamic/transaction.h	/^			static PaddedSpinTryLock minimum_observed_ts_lock;$/;"	m	class:wlpdstm::TransactionDynamic	typeref:typename:PaddedSpinTryLock
minimum_observed_ts_lock	swisstm/src/stm/transaction_mixinv.cc	/^CACHE_LINE_ALIGNED wlpdstm::PaddedSpinTryLock wlpdstm::TxMixinv::minimum_observed_ts_lock;$/;"	m	class:wlpdstm::TxMixinv	typeref:typename:CACHE_LINE_ALIGNED wlpdstm::PaddedSpinTryLock
minimum_observed_ts_lock	swisstm/src/stm/transaction_mixinv.h	/^		static PaddedSpinTryLock minimum_observed_ts_lock;$/;"	m	class:wlpdstm::TxMixinv	typeref:typename:PaddedSpinTryLock
mm	swisstm/src/dynamic/transaction.h	/^			MemoryManager mm;$/;"	m	class:wlpdstm::TransactionDynamic	typeref:typename:MemoryManager
mm	swisstm/src/epochstm/transaction.h	/^			MemoryManager mm;$/;"	m	class:wlpdstm::TransactionEpoch	typeref:typename:MemoryManager
mm	swisstm/src/p-tlrw/transaction.h	/^			MemoryManager mm;$/;"	m	class:wlpdstm::TransactionTlrw	typeref:typename:MemoryManager
mm	swisstm/src/rw/transaction.h	/^			MemoryManager mm;$/;"	m	class:wlpdstm::TransactionRw	typeref:typename:MemoryManager
mm	swisstm/src/stm/transaction_mixinv.h	/^		MemoryManager mm;$/;"	m	class:wlpdstm::TxMixinv	typeref:typename:MemoryManager
mm	swisstm/src/tlrw/transaction.h	/^			MemoryManager mm;$/;"	m	class:wlpdstm::TransactionTlrw	typeref:typename:MemoryManager
mpl	run_bench.py	/^import matplotlib as mpl$/;"	I	nameref:module:matplotlib
mutex	benchmark_list.h	/^	pthread_mutex_t mutex;$/;"	m	struct:barrier	typeref:typename:pthread_mutex_t
mutex	benchmark_list_move.h	/^	pthread_mutex_t mutex;$/;"	m	struct:barrier	typeref:typename:pthread_mutex_t
mutex	swisstm/src/mubench/intset-list-mv.c	/^  pthread_mutex_t mutex;$/;"	m	struct:barrier	typeref:typename:pthread_mutex_t	file:
mutex	swisstm/src/mubench/intset.c	/^  pthread_mutex_t mutex;$/;"	m	struct:barrier	typeref:typename:pthread_mutex_t	file:
my_jmpbuf	swisstm/src/intel/jmp.h	/^} my_jmpbuf;$/;"	t	typeref:struct:begin_transaction_jmpbuf
my_tree_node_idx	swisstm/src/stm/privatization_tree.h	/^			unsigned my_tree_node_idx;$/;"	m	class:wlpdstm::PrivatizationTree	typeref:typename:unsigned
n_aborts	rlu.c	/^	volatile long n_aborts;$/;"	m	struct:rlu_data	typeref:typename:volatile long	file:
n_aborts	rlu.h	/^	long n_aborts;$/;"	m	struct:rlu_thread_data	typeref:typename:long
n_finish	rlu.c	/^	volatile long n_finish;$/;"	m	struct:rlu_data	typeref:typename:volatile long	file:
n_finish	rlu.h	/^	long n_finish;$/;"	m	struct:rlu_thread_data	typeref:typename:long
n_pure_readers	rlu.c	/^	volatile long n_pure_readers;$/;"	m	struct:rlu_data	typeref:typename:volatile long	file:
n_pure_readers	rlu.h	/^	long n_pure_readers;$/;"	m	struct:rlu_thread_data	typeref:typename:long
n_starts	rlu.c	/^	volatile long n_starts;$/;"	m	struct:rlu_data	typeref:typename:volatile long	file:
n_starts	rlu.h	/^	long n_starts;$/;"	m	struct:rlu_thread_data	typeref:typename:long
n_steals	rlu.c	/^	volatile long n_steals;$/;"	m	struct:rlu_data	typeref:typename:volatile long	file:
n_steals	rlu.h	/^	long n_steals;$/;"	m	struct:rlu_thread_data	typeref:typename:long
n_sync_and_writeback	rlu.c	/^	volatile long n_sync_and_writeback;$/;"	m	struct:rlu_data	typeref:typename:volatile long	file:
n_sync_and_writeback	rlu.h	/^	long n_sync_and_writeback;$/;"	m	struct:rlu_thread_data	typeref:typename:long
n_sync_requests	rlu.c	/^	volatile long n_sync_requests;$/;"	m	struct:rlu_data	typeref:typename:volatile long	file:
n_sync_requests	rlu.h	/^	long n_sync_requests;$/;"	m	struct:rlu_thread_data	typeref:typename:long
n_writeback_q_iters	rlu.c	/^	volatile long n_writeback_q_iters;$/;"	m	struct:rlu_data	typeref:typename:volatile long	file:
n_writeback_q_iters	rlu.h	/^	long n_writeback_q_iters;$/;"	m	struct:rlu_thread_data	typeref:typename:long
n_writer_sync_waits	rlu.h	/^	long n_writer_sync_waits;$/;"	m	struct:rlu_thread_data	typeref:typename:long
n_writer_writeback	rlu.c	/^	volatile long n_writer_writeback;$/;"	m	struct:rlu_data	typeref:typename:volatile long	file:
n_writer_writeback	rlu.h	/^	long n_writer_writeback;$/;"	m	struct:rlu_thread_data	typeref:typename:long
n_writers	rlu.c	/^	volatile long n_writers;$/;"	m	struct:rlu_data	typeref:typename:volatile long	file:
n_writers	rlu.h	/^	long n_writers;$/;"	m	struct:rlu_thread_data	typeref:typename:long
name	swisstm/src/common/configuration.h	/^		const std::string name;$/;"	m	struct:wlpdstm::ConfigItem	typeref:typename:const std::string
name	swisstm/src/common/stats_base.h	/^		const char *name;$/;"	m	struct:wlpdstm::AverageStat	typeref:typename:const char *
nb_aborts	swisstm/src/mubench/intset-list-mv.c	/^  unsigned long nb_aborts;$/;"	m	struct:thread_data	typeref:typename:unsigned long	file:
nb_aborts	swisstm/src/mubench/intset.c	/^  unsigned long nb_aborts;$/;"	m	struct:thread_data	typeref:typename:unsigned long	file:
nb_add	swisstm/src/mubench/intset.c	/^  unsigned long nb_add;$/;"	m	struct:thread_data	typeref:typename:unsigned long	file:
nb_contains	swisstm/src/mubench/intset.c	/^  unsigned long nb_contains;$/;"	m	struct:thread_data	typeref:typename:unsigned long	file:
nb_found	swisstm/src/mubench/intset.c	/^  unsigned long nb_found;$/;"	m	struct:thread_data	typeref:typename:unsigned long	file:
nb_move	swisstm/src/mubench/intset-list-mv.c	/^  unsigned long nb_move;$/;"	m	struct:thread_data	typeref:typename:unsigned long	file:
nb_remove	swisstm/src/mubench/intset.c	/^  unsigned long nb_remove;$/;"	m	struct:thread_data	typeref:typename:unsigned long	file:
new_node	swisstm/src/mubench/intset-list-mv.c	/^node_t *new_node(int val, node_t *next, tx_desc *tx)$/;"	f	typeref:typename:node_t *
new_node	swisstm/src/mubench/intset.c	/^node_t *new_node(int val, node_t *next)$/;"	f	typeref:typename:node_t *
new_node	swisstm/src/mubench/intset.c	/^node_t *new_node(int val, node_t *next, tx_desc *tx)$/;"	f	typeref:typename:node_t *
new_rec	list_move_vlist.c	/^	vlist_record_t *new_rec;$/;"	m	struct:vlist_pthread_data	typeref:typename:vlist_record_t *	file:
new_rec	list_vlist.c	/^	vlist_record_t *new_rec;$/;"	m	struct:vlist_pthread_data	typeref:typename:vlist_record_t *	file:
new_rec	tree_vrbtree.c	/^	vtree_record_t *new_rec;$/;"	m	struct:vtree_pthread_data	typeref:typename:vtree_record_t *	file:
new_rec	tree_vtree.c	/^	vtree_record_t *new_rec;$/;"	m	struct:vtree_pthread_data	typeref:typename:vtree_record_t *	file:
new_tm	swisstm/src/dynamic/transaction.h	/^			unsigned new_tm;$/;"	m	class:wlpdstm::TransactionDynamic	typeref:typename:unsigned
next	list_harris.c	/^	struct node *next;$/;"	m	struct:node	typeref:struct:node *	file:
next	list_move_rlu.c	/^	struct node *next;$/;"	m	struct:node	typeref:struct:node *	file:
next	list_move_spinlock.c	/^	struct node *next;$/;"	m	struct:node	typeref:struct:node *	file:
next	list_move_vlist.c	/^	struct node *next;$/;"	m	struct:vlist_slot	typeref:struct:node *	file:
next	list_rcu.c	/^	struct node *next;$/;"	m	struct:node	typeref:struct:node *	file:
next	list_rlu.c	/^	struct node *next;$/;"	m	struct:node	typeref:struct:node *	file:
next	list_spinlock.c	/^	struct node *next;$/;"	m	struct:node	typeref:struct:node *	file:
next	list_vlist.c	/^	struct node *next;$/;"	m	struct:vlist_slot	typeref:struct:node *	file:
next	swisstm/src/common/log.h	/^				LogChunk *next;$/;"	m	struct:wlpdstm::Log::LogChunk	typeref:typename:LogChunk *
next	swisstm/src/common/log.h	/^				Node *next;$/;"	m	struct:wlpdstm::Log::Node	typeref:typename:Node *
next	swisstm/src/common/log.h	/^			unsigned next;$/;"	m	class:wlpdstm::Log	typeref:typename:unsigned
next	swisstm/src/common/log.h	/^	inline void Log<T, CHUNK_LENGTH, INIT>::iterator::next() {$/;"	f	class:wlpdstm::Log::iterator	typeref:typename:void
next	swisstm/src/common/log.h	/^	inline void Log<T, INITIAL_SIZE, GROWTH_FACTOR>::iterator::next() {$/;"	f	class:wlpdstm::Log::iterator	typeref:typename:void
next	swisstm/src/common/log.h	/^	inline void Log<T, INITIAL_SIZE>::iterator::next() {$/;"	f	class:wlpdstm::Log::iterator	typeref:typename:void
next	swisstm/src/common/stats_base.h	/^		ThreadStatsBase<STATS_TYPES, ALLOCATOR, COUNT> *next;$/;"	m	struct:wlpdstm::ThreadStatsBase	typeref:typename:ThreadStatsBase<STATS_TYPES,ALLOCATOR,COUNT> *
next	swisstm/src/dynamic/log.h	/^		WriteLogEntry *next;$/;"	m	struct:wlpdstm::WriteLogEntry	typeref:typename:WriteLogEntry *
next	swisstm/src/dynamic/log.h	/^		WriteWordLogEntry *next;$/;"	m	struct:wlpdstm::WriteWordLogEntry	typeref:typename:WriteWordLogEntry *
next	swisstm/src/dynamic/memory/memory_impl.h	/^		PtrBufferT<SIZE> *next;$/;"	m	struct:wlpdstm::PtrBufferT	typeref:typename:PtrBufferT<SIZE> *
next	swisstm/src/dynamic/memory/memory_impl_priv.h	/^	PtrBufferT<SIZE> *next;$/;"	m	struct:wlpdstm::PtrBufferT	typeref:typename:PtrBufferT<SIZE> *
next	swisstm/src/dynamic/transaction.h	/^		GreenCMQueueItem *next;$/;"	m	struct:wlpdstm::GreenCMQueueItem	typeref:typename:GreenCMQueueItem *
next	swisstm/src/epochstm/memory/memory_epoch.h	/^		MemoryBlockBufS *next;$/;"	m	struct:wlpdstm::MemoryBlockBufS	typeref:typename:MemoryBlockBufS *
next	swisstm/src/epochstm/memory/memory_epoch.h	/^		MemoryBlockS *next;$/;"	m	struct:wlpdstm::MemoryBlockS	typeref:typename:MemoryBlockS *
next	swisstm/src/epochstm/memory/memory_txend.h	/^	PtrBufferT<SIZE> *next;$/;"	m	struct:wlpdstm::PtrBufferT	typeref:typename:PtrBufferT<SIZE> *
next	swisstm/src/mubench/intset-list-mv.c	/^  struct node *next;$/;"	m	struct:node	typeref:struct:node *	file:
next	swisstm/src/mubench/intset.c	/^  struct node *next;$/;"	m	struct:node	typeref:struct:node *	file:
next	swisstm/src/p-tlrw/memory/memory_txend.h	/^	PtrBufferT<SIZE> *next;$/;"	m	struct:wlpdstm::PtrBufferT	typeref:typename:PtrBufferT<SIZE> *
next	swisstm/src/rw/memory/memory_txend.h	/^	PtrBufferT<SIZE> *next;$/;"	m	struct:wlpdstm::PtrBufferT	typeref:typename:PtrBufferT<SIZE> *
next	swisstm/src/stm/memory/memory_impl.h	/^		PtrBufferT<SIZE> *next;$/;"	m	struct:wlpdstm::PtrBufferT	typeref:typename:PtrBufferT<SIZE> *
next	swisstm/src/stm/memory/memory_impl_priv.h	/^	PtrBufferT<SIZE> *next;$/;"	m	struct:wlpdstm::PtrBufferT	typeref:typename:PtrBufferT<SIZE> *
next	swisstm/src/stm/transaction_mixinv.h	/^			WriteLogEntry *next;$/;"	m	struct:wlpdstm::TxMixinv::WriteLogEntry	typeref:typename:WriteLogEntry *
next	swisstm/src/stm/transaction_mixinv.h	/^			WriteWordLogEntry *next;$/;"	m	struct:wlpdstm::TxMixinv::WriteWordLogEntry	typeref:typename:WriteWordLogEntry *
next	swisstm/src/tlrw/memory/memory_txend.h	/^	PtrBufferT<SIZE> *next;$/;"	m	struct:wlpdstm::PtrBufferT	typeref:typename:PtrBufferT<SIZE> *
next	zipf/flist.h	/^	struct flist_head *next, *prev;$/;"	m	struct:flist_head	typeref:struct:flist_head *
nextElement	swisstm/src/common/log.h	/^			unsigned nextElement;$/;"	m	class:wlpdstm::Log	typeref:typename:unsigned
next_ptr	swisstm/src/dynamic/memory/memory_impl.h	/^		unsigned next_ptr;$/;"	m	struct:wlpdstm::PtrBufferT	typeref:typename:unsigned
next_ptr	swisstm/src/dynamic/memory/memory_impl_priv.h	/^	unsigned next_ptr;$/;"	m	struct:wlpdstm::PtrBufferT	typeref:typename:unsigned
next_ptr	swisstm/src/epochstm/memory/memory_txend.h	/^	unsigned next_ptr;$/;"	m	struct:wlpdstm::PtrBufferT	typeref:typename:unsigned
next_ptr	swisstm/src/p-tlrw/memory/memory_txend.h	/^	unsigned next_ptr;$/;"	m	struct:wlpdstm::PtrBufferT	typeref:typename:unsigned
next_ptr	swisstm/src/rw/memory/memory_txend.h	/^	unsigned next_ptr;$/;"	m	struct:wlpdstm::PtrBufferT	typeref:typename:unsigned
next_ptr	swisstm/src/stm/memory/memory_impl.h	/^		unsigned next_ptr;$/;"	m	struct:wlpdstm::PtrBufferT	typeref:typename:unsigned
next_ptr	swisstm/src/stm/memory/memory_impl_priv.h	/^	unsigned next_ptr;$/;"	m	struct:wlpdstm::PtrBufferT	typeref:typename:unsigned
next_ptr	swisstm/src/tlrw/memory/memory_txend.h	/^	unsigned next_ptr;$/;"	m	struct:wlpdstm::PtrBufferT	typeref:typename:unsigned
node	list_harris.c	/^typedef struct node {$/;"	s	file:
node	list_move_rlu.c	/^typedef struct node{$/;"	s	file:
node	list_move_spinlock.c	/^typedef struct node {$/;"	s	file:
node	list_move_vlist.c	/^typedef struct node {$/;"	s	file:
node	list_rcu.c	/^typedef struct node {$/;"	s	file:
node	list_rlu.c	/^typedef struct node {$/;"	s	file:
node	list_spinlock.c	/^typedef struct node {$/;"	s	file:
node	list_vlist.c	/^typedef struct node {$/;"	s	file:
node	swisstm/src/mubench/intset-list-mv.c	/^typedef struct node {$/;"	s	file:
node	swisstm/src/mubench/intset.c	/^typedef struct node {$/;"	s	file:
node	swisstm/src/mubench/rbtree.h	/^typedef struct node {$/;"	s
node	tree_bonsai.c	/^typedef struct node {$/;"	s	file:
node	tree_citrus_rlu.c	/^typedef struct node {$/;"	s	file:
node	tree_prcu.c	/^typedef struct node {$/;"	s	file:
node	tree_rcu.c	/^typedef struct node {$/;"	s	file:
node	tree_rlu.c	/^typedef struct node {$/;"	s	file:
node	tree_vrbtree.c	/^typedef struct node {$/;"	s	file:
node	tree_vtree.c	/^typedef struct node {$/;"	s	file:
node	zipf/test.c	/^struct node {$/;"	s	file:
node_cmp	zipf/test.c	/^static int node_cmp(const void *p1, const void *p2)$/;"	f	typeref:typename:int	file:
node_t	list_harris.c	/^} node_t;$/;"	t	typeref:struct:node	file:
node_t	list_move_rlu.c	/^} node_t;$/;"	t	typeref:struct:node	file:
node_t	list_move_spinlock.c	/^} node_t;$/;"	t	typeref:struct:node	file:
node_t	list_move_vlist.c	/^} node_t;$/;"	t	typeref:struct:node	file:
node_t	list_rcu.c	/^} node_t;$/;"	t	typeref:struct:node	file:
node_t	list_rlu.c	/^} node_t;$/;"	t	typeref:struct:node	file:
node_t	list_spinlock.c	/^} node_t;$/;"	t	typeref:struct:node	file:
node_t	list_vlist.c	/^} node_t;$/;"	t	typeref:struct:node	file:
node_t	swisstm/src/mubench/intset-list-mv.c	/^} node_t;$/;"	t	typeref:struct:node	file:
node_t	swisstm/src/mubench/intset.c	/^} node_t;$/;"	t	typeref:struct:node	file:
node_t	swisstm/src/mubench/rbtree.h	/^} node_t;$/;"	t	typeref:struct:node
node_t	tree_bonsai.c	/^} node_t;$/;"	t	typeref:struct:node	file:
node_t	tree_citrus_rlu.c	/^} node_t;$/;"	t	typeref:struct:node	file:
node_t	tree_prcu.c	/^} node_t;$/;"	t	typeref:struct:node	file:
node_t	tree_rcu.c	/^} node_t;$/;"	t	typeref:struct:node	file:
node_t	tree_rlu.c	/^} node_t;$/;"	t	typeref:struct:node	file:
node_t	tree_vrbtree.c	/^} node_t;$/;"	t	typeref:struct:node	file:
node_t	tree_vtree.c	/^} node_t;$/;"	t	typeref:struct:node	file:
nodes	list_move_vlist.c	/^	struct node *nodes[VLIST_ENTRIES_PER_TASK];$/;"	m	struct:vlist_record	typeref:struct:node * []	file:
nodes	list_vlist.c	/^	struct node *nodes[VLIST_ENTRIES_PER_TASK];$/;"	m	struct:vlist_record	typeref:struct:node * []	file:
nodes	tree_vrbtree.c	/^	struct node *nodes[VTREE_ENTRIES_PER_TASK];$/;"	m	struct:vtree_record	typeref:struct:node * []	file:
nodes	tree_vtree.c	/^	struct node *nodes[VTREE_ENTRIES_PER_TASK];$/;"	m	struct:vtree_record	typeref:struct:node * []	file:
nr_abort	benchmark_list.h	/^	unsigned long nr_abort;$/;"	m	struct:pthread_data	typeref:typename:unsigned long
nr_del	benchmark_list.h	/^	unsigned long nr_del;$/;"	m	struct:pthread_data	typeref:typename:unsigned long
nr_find	benchmark_list.h	/^	unsigned long nr_find;$/;"	m	struct:pthread_data	typeref:typename:unsigned long
nr_ins	benchmark_list.h	/^	unsigned long nr_ins;$/;"	m	struct:pthread_data	typeref:typename:unsigned long
nr_move	benchmark_list_move.h	/^	unsigned long nr_move;$/;"	m	struct:pthread_data	typeref:typename:unsigned long
nr_threads	list_rcu.c	/^	int nr_threads;$/;"	m	struct:rcu_pthread_data	typeref:typename:int	file:
nr_threads	tree_bonsai.c	/^	int nr_threads;$/;"	m	struct:rcu_pthread_data	typeref:typename:int	file:
nr_threads	tree_prcu.c	/^	int nr_threads;$/;"	m	struct:prcu_pthread_data	typeref:typename:int	file:
nr_threads	tree_rcu.c	/^	int nr_threads;$/;"	m	struct:rcu_pthread_data	typeref:typename:int	file:
nr_txn	benchmark_list.h	/^	unsigned long nr_txn;$/;"	m	struct:pthread_data	typeref:typename:unsigned long
nr_txn	benchmark_list_move.h	/^	unsigned long nr_txn;$/;"	m	struct:pthread_data	typeref:typename:unsigned long
nranges	zipf/test.c	/^	unsigned int nranges;$/;"	m	struct:output_sum	typeref:typename:unsigned int	file:
nranges	zipf/zipf.h	/^	uint64_t nranges;$/;"	m	struct:zipf_state	typeref:typename:uint64_t
numThread	swisstm/src/mubench/thread.h	/^    long numThread;$/;"	m	struct:thread_barrier	typeref:typename:long
num_of_objs	rlu.h	/^	unsigned int num_of_objs;$/;"	m	struct:obj_list	typeref:typename:unsigned int
numa-config.h	Makefile	/^numa-config.h:$/;"	t
obj_list	rlu.h	/^typedef struct obj_list {$/;"	s
obj_list_t	rlu.h	/^} obj_list_t;$/;"	t	typeref:struct:obj_list
obj_size	rlu.h	/^	volatile obj_size_t obj_size;$/;"	m	struct:rlu_ws_obj_header	typeref:typename:volatile obj_size_t
obj_size_t	rlu.h	/^typedef size_t obj_size_t;$/;"	t	typeref:typename:size_t
obj_write_set	rlu.h	/^	volatile obj_list_t obj_write_set[RLU_MAX_WRITE_SETS];$/;"	m	struct:rlu_thread_data	typeref:typename:volatile obj_list_t[]
observed_counters	swisstm/src/epochstm/transaction.h	/^			TxCounter observed_counters[MAX_THREADS];$/;"	m	class:wlpdstm::TransactionEpoch	typeref:typename:TxCounter[]
old_version	swisstm/src/dynamic/log.h	/^		VersionLock old_version;$/;"	m	struct:wlpdstm::WriteLogEntry	typeref:typename:VersionLock
old_version	swisstm/src/stm/transaction_mixinv.h	/^			VersionLock old_version;$/;"	m	struct:wlpdstm::TxMixinv::WriteLogEntry	typeref:typename:VersionLock
op_exec	swisstm/src/mubench/rbforest.cc	/^    unsigned op_exec[OP_TOTAL];$/;"	m	struct:thread_data_t	typeref:typename:unsigned[]	file:
op_forest_delete	swisstm/src/mubench/rbforest.cc	/^static unsigned op_forest_delete(TM_ARGDECL thread_data_t *thread_data) {$/;"	f	typeref:typename:unsigned	file:
op_forest_insert	swisstm/src/mubench/rbforest.cc	/^static unsigned op_forest_insert(TM_ARGDECL thread_data_t *thread_data) {$/;"	f	typeref:typename:unsigned	file:
op_forest_lookup	swisstm/src/mubench/rbforest.cc	/^static unsigned op_forest_lookup(TM_ARGDECL thread_data_t *thread_data) {$/;"	f	typeref:typename:unsigned	file:
op_ratios	swisstm/src/mubench/rbforest.cc	/^    op_ratios_t op_ratios;$/;"	m	struct:cmd_line_args_t	typeref:typename:op_ratios_t	file:
op_ratios_t	swisstm/src/mubench/rbforest.cc	/^struct op_ratios_t {$/;"	s	file:
op_tree_delete	swisstm/src/mubench/rbforest.cc	/^static unsigned op_tree_delete(TM_ARGDECL thread_data_t *thread_data) {$/;"	f	typeref:typename:unsigned	file:
op_tree_insert	swisstm/src/mubench/rbforest.cc	/^static unsigned op_tree_insert(TM_ARGDECL thread_data_t *thread_data) {$/;"	f	typeref:typename:unsigned	file:
op_tree_lookup	swisstm/src/mubench/rbforest.cc	/^static unsigned op_tree_lookup(TM_ARGDECL thread_data_t *thread_data) {$/;"	f	typeref:typename:unsigned	file:
op_tree_move	swisstm/src/mubench/rbforest.cc	/^static unsigned op_tree_move(TM_ARGDECL thread_data_t *thread_data) {$/;"	f	typeref:typename:unsigned	file:
operation_count	swisstm/src/mubench/rbforest.cc	/^    unsigned operation_count;$/;"	m	struct:cmd_line_args_t	typeref:typename:unsigned	file:
operation_count	swisstm/src/mubench/rbforest.cc	/^    unsigned operation_count;$/;"	m	struct:thread_data_t	typeref:typename:unsigned	file:
operation_fun_t	swisstm/src/mubench/rbforest.cc	/^typedef unsigned (*operation_fun_t)(TM_ARGDECL thread_data_t *thread_data);$/;"	t	typeref:typename:unsigned (*)(TM_ARGDECL thread_data_t * thread_data)	file:
operation_t	swisstm/src/mubench/rbforest.cc	/^struct operation_t {$/;"	s	file:
operations	swisstm/src/mubench/rbforest.cc	/^    operation_t *operations;$/;"	m	struct:thread_data_t	typeref:typename:operation_t *	file:
operator !=	swisstm/src/common/log.h	/^	inline bool Log<T, CHUNK_LENGTH, INIT>::iterator::operator!=($/;"	f	class:wlpdstm::Log::iterator	typeref:typename:bool
operator !=	swisstm/src/common/log.h	/^	inline bool Log<T, INITIAL_SIZE, GROWTH_FACTOR>::iterator::operator!=(const iterator& rhs) {$/;"	f	class:wlpdstm::Log::iterator	typeref:typename:bool
operator !=	swisstm/src/common/log.h	/^	inline bool Log<T, INITIAL_SIZE>::iterator::operator!=($/;"	f	class:wlpdstm::Log::iterator	typeref:typename:bool
operator *	swisstm/src/common/log.h	/^	inline T& Log<T, CHUNK_LENGTH, INIT>::iterator::operator*() const {$/;"	f	class:wlpdstm::Log::iterator	typeref:typename:T &
operator *	swisstm/src/common/log.h	/^	inline T& Log<T, CHUNK_LENGTH, INIT>::rev_iterator::operator*() const {$/;"	f	class:wlpdstm::Log::rev_iterator	typeref:typename:T &
operator *	swisstm/src/common/log.h	/^	inline T& Log<T, INITIAL_SIZE, GROWTH_FACTOR>::iterator::operator*() const {$/;"	f	class:wlpdstm::Log::iterator	typeref:typename:T &
operator *	swisstm/src/common/log.h	/^	inline T& Log<T, INITIAL_SIZE>::iterator::operator*() const {$/;"	f	class:wlpdstm::Log::iterator	typeref:typename:T &
operator ++	swisstm/src/common/log.h	/^	inline typename Log<T, CHUNK_LENGTH, INIT>::iterator Log<T, CHUNK_LENGTH, INIT>::iterator::oper/;"	f	class:wlpdstm::Log::iterator	typeref:typename:Log<T,CHUNK_LENGTH,INIT>::iterator
operator ++	swisstm/src/common/log.h	/^	inline typename Log<T, CHUNK_LENGTH, INIT>::iterator& Log<T, CHUNK_LENGTH, INIT>::iterator::ope/;"	f	class:wlpdstm::Log::iterator	typeref:typename:Log<T,CHUNK_LENGTH,INIT>::iterator &
operator ++	swisstm/src/common/log.h	/^	inline typename Log<T, INITIAL_SIZE, GROWTH_FACTOR>::iterator Log<T, INITIAL_SIZE, GROWTH_FACTO/;"	f	class:wlpdstm::Log::iterator	typeref:typename:Log<T,INITIAL_SIZE,GROWTH_FACTOR>::iterator
operator ++	swisstm/src/common/log.h	/^	inline typename Log<T, INITIAL_SIZE, GROWTH_FACTOR>::iterator& Log<T, INITIAL_SIZE, GROWTH_FACT/;"	f	class:wlpdstm::Log::iterator	typeref:typename:Log<T,INITIAL_SIZE,GROWTH_FACTOR>::iterator &
operator ++	swisstm/src/common/log.h	/^	inline typename Log<T, INITIAL_SIZE>::iterator Log<T, INITIAL_SIZE>::iterator::operator++(int d/;"	f	class:wlpdstm::Log::iterator	typeref:typename:Log<T,INITIAL_SIZE>::iterator
operator ++	swisstm/src/common/log.h	/^	inline typename Log<T, INITIAL_SIZE>::iterator& Log<T, INITIAL_SIZE>::iterator::operator++() {$/;"	f	class:wlpdstm::Log::iterator	typeref:typename:Log<T,INITIAL_SIZE>::iterator &
operator ==	swisstm/src/common/log.h	/^	inline bool Log<T, CHUNK_LENGTH, INIT>::iterator::operator==($/;"	f	class:wlpdstm::Log::iterator	typeref:typename:bool
operator ==	swisstm/src/common/log.h	/^	inline bool Log<T, INITIAL_SIZE, GROWTH_FACTOR>::iterator::operator==(const iterator& rhs) {$/;"	f	class:wlpdstm::Log::iterator	typeref:typename:bool
operator ==	swisstm/src/common/log.h	/^	inline bool Log<T, INITIAL_SIZE>::iterator::operator==($/;"	f	class:wlpdstm::Log::iterator	typeref:typename:bool
operator delete	swisstm/src/common/alloc.h	/^		void operator delete(void* ptr) {$/;"	f	class:wlpdstm::WlpdstmAlloced	typeref:typename:void
operator delete	swisstm/src/common/cache_aligned_alloc.h	/^			void operator delete(void *ptr) {$/;"	f	class:wlpdstm::AlignedAlloc	typeref:typename:void
operator delete[]	swisstm/src/common/alloc.h	/^		void operator delete[](void *ptr) {$/;"	f	class:wlpdstm::WlpdstmAlloced	typeref:typename:void
operator new	swisstm/src/common/alloc.h	/^		void* operator new(size_t size) {$/;"	f	class:wlpdstm::WlpdstmAlloced	typeref:typename:void *
operator new	swisstm/src/common/cache_aligned_alloc.h	/^			void *operator new(size_t size) {$/;"	f	class:wlpdstm::AlignedAlloc	typeref:typename:void *
operator new[]	swisstm/src/common/alloc.h	/^		void* operator new[](size_t size) {$/;"	f	class:wlpdstm::WlpdstmAlloced	typeref:typename:void *
ops_file	run_bench.py	/^        ops_file = open(final_dir + "ops.dat", "w+")$/;"	v
optype_t	swisstm/src/mubench/rbforest.cc	/^enum optype_t {$/;"	g	file:
orec_table	swisstm/src/epochstm/transaction.cc	/^CACHE_LINE_ALIGNED wlpdstm::TransactionEpoch::OwnershipRecord wlpdstm::TransactionEpoch::orec_ta/;"	m	class:wlpdstm::TransactionEpoch	typeref:typename:CACHE_LINE_ALIGNED wlpdstm::TransactionEpoch::OwnershipRecord[]
orec_table	swisstm/src/epochstm/transaction.h	/^		CACHE_LINE_ALIGNED static OwnershipRecord orec_table[OWNERSHIP_TABLE_SIZE];$/;"	m	class:wlpdstm::TransactionEpoch	typeref:typename:CACHE_LINE_ALIGNED OwnershipRecord[]
orec_table	swisstm/src/p-tlrw/transaction.cc	/^CACHE_LINE_ALIGNED wlpdstm::TransactionTlrw::OwnershipRecord wlpdstm::TransactionTlrw::orec_tabl/;"	m	class:wlpdstm::TransactionTlrw	typeref:typename:CACHE_LINE_ALIGNED wlpdstm::TransactionTlrw::OwnershipRecord[]
orec_table	swisstm/src/p-tlrw/transaction.h	/^		CACHE_LINE_ALIGNED static OwnershipRecord orec_table[OWNERSHIP_TABLE_SIZE];$/;"	m	class:wlpdstm::TransactionTlrw	typeref:typename:CACHE_LINE_ALIGNED OwnershipRecord[]
orec_table	swisstm/src/rw/transaction.cc	/^CACHE_LINE_ALIGNED wlpdstm::TransactionRw::OwnershipRecord wlpdstm::TransactionRw::orec_table[OW/;"	m	class:wlpdstm::TransactionRw	typeref:typename:CACHE_LINE_ALIGNED wlpdstm::TransactionRw::OwnershipRecord[]
orec_table	swisstm/src/rw/transaction.h	/^		CACHE_LINE_ALIGNED static OwnershipRecord orec_table[OWNERSHIP_TABLE_SIZE];$/;"	m	class:wlpdstm::TransactionRw	typeref:typename:CACHE_LINE_ALIGNED OwnershipRecord[]
orec_table	swisstm/src/tlrw/transaction.cc	/^CACHE_LINE_ALIGNED wlpdstm::TransactionTlrw::OwnershipRecord wlpdstm::TransactionTlrw::orec_tabl/;"	m	class:wlpdstm::TransactionTlrw	typeref:typename:CACHE_LINE_ALIGNED wlpdstm::TransactionTlrw::OwnershipRecord[]
orec_table	swisstm/src/tlrw/transaction.h	/^		CACHE_LINE_ALIGNED static OwnershipRecord orec_table[OWNERSHIP_TABLE_SIZE];$/;"	m	class:wlpdstm::TransactionTlrw	typeref:typename:CACHE_LINE_ALIGNED OwnershipRecord[]
out_file	run_bench.py	/^            out_file = (final_dir + "__" + t + "_" +$/;"	v
output	zipf/test.c	/^	double output;$/;"	m	struct:output_sum	typeref:typename:double	file:
output_csv	zipf/test.c	/^static void output_csv(struct node *nodes, unsigned long nnodes)$/;"	f	typeref:typename:void	file:
output_filename	run_tests.py	/^    output_filename = result_dir + opts.output_filename$/;"	v
output_normal	zipf/test.c	/^static void output_normal(struct node *nodes, unsigned long nnodes,$/;"	f	typeref:typename:void	file:
output_nranges	zipf/test.c	/^static unsigned long output_nranges = DEF_NR_OUTPUT;$/;"	v	typeref:typename:unsigned long	file:
output_sum	zipf/test.c	/^struct output_sum {$/;"	s	file:
output_type	zipf/test.c	/^static int output_type = OUTPUT_NORMAL;$/;"	v	typeref:typename:int	file:
owner	swisstm/src/dynamic/log.h	/^		TransactionDynamic *owner;$/;"	m	struct:wlpdstm::WriteLogEntry	typeref:typename:TransactionDynamic *
owner	swisstm/src/stm/transaction_mixinv.h	/^			TxMixinv *owner;$/;"	m	struct:wlpdstm::TxMixinv::WriteLogEntry	typeref:typename:TxMixinv *
p	swisstm/src/mubench/rbtree.h	/^    struct node* p;$/;"	m	struct:node	typeref:struct:node *
p	tree_prcu.c	/^	char p[184];$/;"	m	struct:prcu_table	typeref:typename:char[184]	file:
p_cur	rlu.h	/^	volatile intptr_t *p_cur;$/;"	m	struct:obj_list	typeref:typename:volatile intptr_t *
p_obj_actual	rlu.h	/^	volatile intptr_t *p_obj_actual;$/;"	m	struct:rlu_ws_obj_header	typeref:typename:volatile intptr_t *
p_obj_copy	rlu.h	/^	volatile intptr_t *p_obj_copy;$/;"	m	struct:rlu_obj_header	typeref:typename:volatile intptr_t *
pad8_1	swisstm/src/stm_api/read_write.h	/^			uint8_t  pad8_1;$/;"	m	struct:wlpdstm::read_write_conv_u::__anoned8f9a5d0508	typeref:typename:uint8_t
pad8_1	swisstm/src/stm_api/read_write.h	/^			uint8_t  pad8_1[2];$/;"	m	struct:wlpdstm::read_write_conv_u::__anoned8f9a5d0608	typeref:typename:uint8_t[2]
pad8_1	swisstm/src/stm_api/read_write.h	/^			uint8_t  pad8_1[3];$/;"	m	struct:wlpdstm::read_write_conv_u::__anoned8f9a5d0708	typeref:typename:uint8_t[3]
pad8_1	swisstm/src/stm_api/read_write.h	/^			uint8_t  pad8_1[4];$/;"	m	struct:wlpdstm::read_write_conv_u::__anoned8f9a5d0808	typeref:typename:uint8_t[4]
pad8_1	swisstm/src/stm_api/read_write.h	/^			uint8_t  pad8_1[5];$/;"	m	struct:wlpdstm::read_write_conv_u::__anoned8f9a5d0908	typeref:typename:uint8_t[5]
pad8_1	swisstm/src/stm_api/read_write.h	/^			uint8_t  pad8_1[6];$/;"	m	struct:wlpdstm::read_write_conv_u::__anoned8f9a5d0a08	typeref:typename:uint8_t[6]
pad8_1	swisstm/src/stm_api/read_write.h	/^			uint8_t  pad8_1[7];$/;"	m	struct:wlpdstm::read_write_conv_u::__anoned8f9a5d0b08	typeref:typename:uint8_t[7]
pad8_1	swisstm/src/stm_api/read_write.h	/^			uint8_t pad8_1;$/;"	m	struct:wlpdstm::read_write_conv_u::__anoned8f9a5d0108	typeref:typename:uint8_t
pad8_1	swisstm/src/stm_api/read_write.h	/^			uint8_t pad8_1;$/;"	m	struct:wlpdstm::read_write_conv_u::__anoned8f9a5d0208	typeref:typename:uint8_t
pad8_1	swisstm/src/stm_api/read_write.h	/^			uint8_t pad8_1[2];$/;"	m	struct:wlpdstm::read_write_conv_u::__anoned8f9a5d0308	typeref:typename:uint8_t[2]
pad8_1	swisstm/src/stm_api/read_write.h	/^			uint8_t pad8_1[3];$/;"	m	struct:wlpdstm::read_write_conv_u::__anoned8f9a5d0408	typeref:typename:uint8_t[3]
pad8_2	swisstm/src/stm_api/read_write.h	/^			uint8_t  pad8_2;$/;"	m	struct:wlpdstm::read_write_conv_u::__anoned8f9a5d0b08	typeref:typename:uint8_t
pad8_2	swisstm/src/stm_api/read_write.h	/^			uint8_t  pad8_2[2];$/;"	m	struct:wlpdstm::read_write_conv_u::__anoned8f9a5d0a08	typeref:typename:uint8_t[2]
pad8_2	swisstm/src/stm_api/read_write.h	/^			uint8_t  pad8_2[3];$/;"	m	struct:wlpdstm::read_write_conv_u::__anoned8f9a5d0908	typeref:typename:uint8_t[3]
pad8_2	swisstm/src/stm_api/read_write.h	/^			uint8_t  pad8_2[4];$/;"	m	struct:wlpdstm::read_write_conv_u::__anoned8f9a5d0808	typeref:typename:uint8_t[4]
pad8_2	swisstm/src/stm_api/read_write.h	/^			uint8_t  pad8_2[5];$/;"	m	struct:wlpdstm::read_write_conv_u::__anoned8f9a5d0708	typeref:typename:uint8_t[5]
pad8_2	swisstm/src/stm_api/read_write.h	/^			uint8_t  pad8_2[6];$/;"	m	struct:wlpdstm::read_write_conv_u::__anoned8f9a5d0608	typeref:typename:uint8_t[6]
pad8_2	swisstm/src/stm_api/read_write.h	/^			uint8_t  pad8_2[7];$/;"	m	struct:wlpdstm::read_write_conv_u::__anoned8f9a5d0508	typeref:typename:uint8_t[7]
pad8_2	swisstm/src/stm_api/read_write.h	/^			uint8_t pad8_2[5];$/;"	m	struct:wlpdstm::read_write_conv_u::__anoned8f9a5d0408	typeref:typename:uint8_t[5]
pad8_2	swisstm/src/stm_api/read_write.h	/^			uint8_t pad8_2[6];$/;"	m	struct:wlpdstm::read_write_conv_u::__anoned8f9a5d0308	typeref:typename:uint8_t[6]
pad8_2	swisstm/src/stm_api/read_write.h	/^			uint8_t pad8_2[7];$/;"	m	struct:wlpdstm::read_write_conv_u::__anoned8f9a5d0108	typeref:typename:uint8_t[7]
pad8_2	swisstm/src/stm_api/read_write.h	/^			uint8_t pad8_2[7];$/;"	m	struct:wlpdstm::read_write_conv_u::__anoned8f9a5d0208	typeref:typename:uint8_t[7]
padded_state	swisstm/src/common/atomic.h	/^			} padded_state;$/;"	m	class:wlpdstm::PaddedSpinTryLock	typeref:union:wlpdstm::PaddedSpinTryLock::__anonca9151d0010a
padding	swisstm/src/common/atomic.h	/^				char padding[CACHE_LINE_SIZE_BYTES];$/;"	m	union:wlpdstm::PaddedSpinTryLock::__anonca9151d0010a	typeref:typename:char[]
padding	swisstm/src/common/padded.h	/^		char padding[CACHE_LINE_SIZE_BYTES];$/;"	m	union:wlpdstm::PaddedBool	typeref:typename:char[]
padding	swisstm/src/common/padded.h	/^		char padding[CACHE_LINE_SIZE_BYTES];$/;"	m	union:wlpdstm::PaddedUnsigned	typeref:typename:char[]
padding	swisstm/src/common/padded.h	/^		char padding[CACHE_LINE_SIZE_BYTES];$/;"	m	union:wlpdstm::PaddedWord	typeref:typename:char[]
padding	swisstm/src/dynamic/timestamp.h	/^			char padding[CACHE_LINE_SIZE_BYTES - sizeof(Word)];$/;"	m	class:wlpdstm::GlobalTimestamp	typeref:typename:char[]
padding	swisstm/src/epochstm/cm.h	/^			char padding[CACHE_LINE_SIZE_BYTES];$/;"	m	union:wlpdstm::Greedy::__anonb360769d010a	typeref:typename:char[]
padding	swisstm/src/epochstm/transaction.h	/^				char padding[CACHE_LINE_SIZE_BYTES];$/;"	m	union:wlpdstm::TransactionEpoch::PaddedTxCounter	typeref:typename:char[]
padding	swisstm/src/mubench/barrier.h	/^    char padding[CACHE_LINE_SIZE_BYTES];$/;"	m	union:barrier_t	typeref:typename:char[]
padding	swisstm/src/p-tlrw/cm.h	/^			char padding[CACHE_LINE_SIZE_BYTES];$/;"	m	union:wlpdstm::Greedy::__anonc9561e00010a	typeref:typename:char[]
padding	swisstm/src/rw/cm.h	/^			char padding[CACHE_LINE_SIZE_BYTES];$/;"	m	union:wlpdstm::Greedy::__anon85aa60e3010a	typeref:typename:char[]
padding	swisstm/src/stm/timestamp.h	/^			char padding[CACHE_LINE_SIZE_BYTES - sizeof(Word)];$/;"	m	class:wlpdstm::GlobalTimestamp	typeref:typename:char[]
padding	swisstm/src/tlrw/cm.h	/^			char padding[CACHE_LINE_SIZE_BYTES];$/;"	m	union:wlpdstm::Greedy::__anonabcb3183010a	typeref:typename:char[]
padding	tree_prcu.c	/^	char padding[128];$/;"	m	struct:prcu_table	typeref:typename:char[128]	file:
padding	tree_vrbtree.c	/^	char padding[208];$/;"	m	struct:vtree_slot	typeref:typename:char[208]	file:
padding	tree_vrbtree.c	/^	char padding[240];$/;"	m	struct:node	typeref:typename:char[240]	file:
padding	tree_vrbtree.c	/^	char padding[8];$/;"	m	struct:vtree_record	typeref:typename:char[8]	file:
padding	tree_vtree.c	/^	char padding[216];$/;"	m	struct:vtree_slot	typeref:typename:char[216]	file:
padding	tree_vtree.c	/^	char padding[240];$/;"	m	struct:node	typeref:typename:char[240]	file:
padding_	swisstm/src/p-tlrw/transaction.h	/^				char padding_[CACHE_LINE_SIZE_BYTES];$/;"	m	union:wlpdstm::TransactionTlrw::__anon7ebeeeb6030a	typeref:typename:char[]
padding_0	rlu.h	/^	long padding_0[RLU_DEFAULT_PADDING];$/;"	m	struct:rlu_thread_data	typeref:typename:long[]
padding_1	rlu.h	/^	long padding_1[RLU_DEFAULT_PADDING];$/;"	m	struct:rlu_thread_data	typeref:typename:long[]
padding_2	rlu.h	/^	long padding_2[RLU_DEFAULT_PADDING];$/;"	m	struct:rlu_thread_data	typeref:typename:long[]
padding_3	rlu.h	/^	long padding_3[RLU_DEFAULT_PADDING];$/;"	m	struct:rlu_thread_data	typeref:typename:long[]
padding_4	rlu.h	/^	long padding_4[RLU_DEFAULT_PADDING];$/;"	m	struct:rlu_thread_data	typeref:typename:long[]
padding_5	rlu.h	/^	long padding_5[RLU_DEFAULT_PADDING];$/;"	m	struct:rlu_thread_data	typeref:typename:long[]
padding_6	rlu.h	/^	long padding_6[RLU_DEFAULT_PADDING];$/;"	m	struct:rlu_thread_data	typeref:typename:long[]
padding_7	rlu.h	/^	long padding_7[RLU_DEFAULT_PADDING];$/;"	m	struct:rlu_thread_data	typeref:typename:long[]
padding_aborted_extrenally	swisstm/src/dynamic/transaction.h	/^				char padding_aborted_extrenally[CACHE_LINE_SIZE_BYTES];$/;"	m	union:wlpdstm::TransactionDynamic::__anonc8737335030a	typeref:typename:char[]
padding_aborted_extrenally	swisstm/src/stm/transaction_mixinv.h	/^			char padding_aborted_extrenally[CACHE_LINE_SIZE_BYTES];$/;"	m	union:wlpdstm::TxMixinv::__anon87a360de030a	typeref:typename:char[]
padding_greedy_ts	swisstm/src/dynamic/transaction.h	/^				char padding_greedy_ts[CACHE_LINE_SIZE_BYTES];$/;"	m	union:wlpdstm::TransactionDynamic::__anonc8737335020a	typeref:typename:char[]
padding_greedy_ts	swisstm/src/stm/transaction_mixinv.h	/^			char padding_greedy_ts[CACHE_LINE_SIZE_BYTES];$/;"	m	union:wlpdstm::TxMixinv::__anon87a360de020a	typeref:typename:char[]
padding_green_cm_item	swisstm/src/dynamic/transaction.h	/^				char padding_green_cm_item[CACHE_LINE_SIZE_BYTES];$/;"	m	union:wlpdstm::TransactionDynamic::__anonc8737335060a	typeref:typename:char[]
padding_last_observed_ts	swisstm/src/dynamic/transaction.h	/^				char padding_last_observed_ts[CACHE_LINE_SIZE_BYTES];$/;"	m	union:wlpdstm::TransactionDynamic::__anonc8737335040a	typeref:typename:char[]
padding_last_observed_ts	swisstm/src/stm/transaction_mixinv.h	/^			char padding_last_observed_ts[CACHE_LINE_SIZE_BYTES];$/;"	m	union:wlpdstm::TxMixinv::__anon87a360de040a	typeref:typename:char[]
padding_start_buf	swisstm/src/dynamic/transaction.h	/^				char padding_start_buf[CACHE_LINE_SIZE_BYTES * START_BUF_PADDING_SIZE];$/;"	m	union:wlpdstm::TransactionDynamic::__anonc8737335010a	typeref:typename:char[]
padding_start_buf	swisstm/src/epochstm/transaction.h	/^				char padding_start_buf[CACHE_LINE_SIZE_BYTES * START_BUF_PADDING_SIZE];$/;"	m	union:wlpdstm::TransactionEpoch::__anon706747f3050a	typeref:typename:char[]
padding_start_buf	swisstm/src/p-tlrw/transaction.h	/^				char padding_start_buf[CACHE_LINE_SIZE_BYTES * START_BUF_PADDING_SIZE];$/;"	m	union:wlpdstm::TransactionTlrw::__anon7ebeeeb6020a	typeref:typename:char[]
padding_start_buf	swisstm/src/rw/transaction.h	/^				char padding_start_buf[CACHE_LINE_SIZE_BYTES * START_BUF_PADDING_SIZE];$/;"	m	union:wlpdstm::TransactionRw::__anona85c20f9010a	typeref:typename:char[]
padding_start_buf	swisstm/src/stm/transaction_mixinv.h	/^			char padding_start_buf[CACHE_LINE_SIZE_BYTES * START_BUF_PADDING_SIZE];$/;"	m	union:wlpdstm::TxMixinv::__anon87a360de010a	typeref:typename:char[]
padding_start_buf	swisstm/src/tlrw/transaction.h	/^				char padding_start_buf[CACHE_LINE_SIZE_BYTES * START_BUF_PADDING_SIZE];$/;"	m	union:wlpdstm::TransactionTlrw::__anoncf01a599020a	typeref:typename:char[]
padding_tx_status	swisstm/src/dynamic/transaction.h	/^				char padding_tx_status[CACHE_LINE_SIZE_BYTES];$/;"	m	union:wlpdstm::TransactionDynamic::__anonc8737335050a	typeref:typename:char[]
padding_tx_status	swisstm/src/stm/transaction_mixinv.h	/^			char padding_tx_status[CACHE_LINE_SIZE_BYTES];$/;"	m	union:wlpdstm::TxMixinv::__anon87a360de050a	typeref:typename:char[]
parent	tree_vrbtree.c	/^	struct node *parent;$/;"	m	struct:vtree_slot	typeref:struct:node *	file:
parentOf	swisstm/src/mubench/rbtree.c	/^parentOf (node_t* n)$/;"	f	typeref:typename:node_t *	file:
pareto_init	zipf/zipf.c	/^void pareto_init(struct zipf_state *zs, unsigned long nranges, double h,$/;"	f	typeref:typename:void
pareto_next	zipf/zipf.c	/^unsigned long long pareto_next(struct zipf_state *zs)$/;"	f	typeref:typename:unsigned long long
pareto_pow	zipf/zipf.h	/^	double pareto_pow;$/;"	m	struct:zipf_state	typeref:typename:double
parse_cmd_line_args	swisstm/src/mubench/rbforest.cc	/^static void parse_cmd_line_args(cmd_line_args_t &args, int argc, char **argv) {$/;"	f	typeref:typename:void	file:
parser	run_bench.py	/^parser = optparse.OptionParser()$/;"	v
parser	run_tests.py	/^    parser = optparse.OptionParser()$/;"	v
parseresults	run_bench.py	/^def parseresults(log_file, plot_data, t, duration, ops_file, abort_file):$/;"	f
pcnt	swisstm/src/dynamic/perf_cnt.h	/^            PerfCntImpl pcnt;$/;"	m	class:wlpdstm::PerfCnt	typeref:typename:PerfCntImpl
percentage	zipf/test.c	/^static double percentage;$/;"	v	typeref:typename:double	file:
perf_cnt	swisstm/src/common/profiling/non_tx_duration_pcnt_simple.h	/^            PerfCntImpl perf_cnt;$/;"	m	class:wlpdstm::NonTxDurationPcntProfilingSimple	typeref:typename:PerfCntImpl
perf_cnt	swisstm/src/dynamic/transaction.h	/^			PerfCnt perf_cnt;		$/;"	m	class:wlpdstm::TransactionDynamic	typeref:typename:PerfCnt
perf_cnt	swisstm/src/stm/transaction_mixinv.h	/^		PerfCnt perf_cnt;$/;"	m	class:wlpdstm::TxMixinv	typeref:typename:PerfCnt
perf_cnt_sampling	swisstm/src/dynamic/transaction.h	/^			Sampling perf_cnt_sampling;$/;"	m	class:wlpdstm::TransactionDynamic	typeref:typename:Sampling
perf_cnt_sampling	swisstm/src/stm/transaction_mixinv.h	/^		Sampling perf_cnt_sampling;$/;"	m	class:wlpdstm::TxMixinv	typeref:typename:Sampling
perf_result_keys	run_tests.py	/^perf_result_keys = [$/;"	v
plot_data	run_bench.py	/^        plot_data = {}$/;"	v
plotgraph	run_bench.py	/^def plotgraph(plot_data, threads, update_rate, data_structure, $/;"	f
plt	run_bench.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
prcu_enter	tree_prcu.c	/^void prcu_enter(int key, prcu_pthread_data_t *prcu_data)$/;"	f	typeref:typename:void
prcu_exit	tree_prcu.c	/^void prcu_exit(int key, prcu_pthread_data_t *prcu_data)$/;"	f	typeref:typename:void
prcu_new_node	tree_prcu.c	/^static node_t *prcu_new_node(int key)$/;"	f	typeref:typename:node_t *	file:
prcu_pthread_data	tree_prcu.c	/^typedef struct prcu_pthread_data {$/;"	s	file:
prcu_pthread_data_t	tree_prcu.c	/^} prcu_pthread_data_t;$/;"	t	typeref:struct:prcu_pthread_data	file:
prcu_table	tree_prcu.c	/^static prcu_table_t *prcu_table;$/;"	v	typeref:typename:prcu_table_t *	file:
prcu_table	tree_prcu.c	/^typedef struct prcu_table {$/;"	s	file:
prcu_table_t	tree_prcu.c	/^} prcu_table_t;$/;"	t	typeref:struct:prcu_table	file:
prcu_tree	tree_prcu.c	/^typedef struct prcu_tree {$/;"	s	file:
prcu_tree_t	tree_prcu.c	/^} prcu_tree_t;$/;"	t	typeref:struct:prcu_tree	file:
prcu_wait	tree_prcu.c	/^static inline void prcu_wait(int j, uint64_t now, prcu_pthread_data_t *prcu_data)$/;"	f	typeref:typename:void	file:
prcu_wait	tree_prcu.c	/^static inline void prcu_wait(prcu_table_t *node)$/;"	f	typeref:typename:void	file:
prcu_wait_for_readers	tree_prcu.c	/^void prcu_wait_for_readers(int min, predicate_info_t *pred_info, prcu_pthread_data_t *prcu_data)$/;"	f	typeref:typename:void
pre_yield	swisstm/src/common/preemptive_utils.h	/^	inline void pre_yield() {$/;"	f	namespace:wlpdstm	typeref:typename:void
pred	tree_prcu.c	/^int pred(predicate_info_t *info, int key)$/;"	f	typeref:typename:int
pred_hash	tree_prcu.c	/^int pred_hash(int key)$/;"	f	typeref:typename:int
pred_next	tree_prcu.c	/^int pred_next(predicate_info_t *info, int cur_bucket)$/;"	f	typeref:typename:int
predicate_info	tree_prcu.c	/^typedef struct predicate_info {$/;"	s	file:
predicate_info_t	tree_prcu.c	/^} predicate_info_t;$/;"	t	typeref:struct:predicate_info	file:
prev	swisstm/src/common/log.h	/^				LogChunk *prev;$/;"	m	struct:wlpdstm::Log::LogChunk	typeref:typename:LogChunk *
prev	swisstm/src/common/log.h	/^				Node *prev;$/;"	m	struct:wlpdstm::Log::Node	typeref:typename:Node *
prev	swisstm/src/common/log.h	/^	inline void Log<T, CHUNK_LENGTH, INIT>::rev_iterator::prev() {$/;"	f	class:wlpdstm::Log::rev_iterator	typeref:typename:void
prev	swisstm/src/dynamic/memory/memory_impl.h	/^		PtrBufferT<SIZE> *prev;$/;"	m	struct:wlpdstm::PtrBufferT	typeref:typename:PtrBufferT<SIZE> *
prev	swisstm/src/dynamic/memory/memory_impl_priv.h	/^	PtrBufferT<SIZE> *prev;$/;"	m	struct:wlpdstm::PtrBufferT	typeref:typename:PtrBufferT<SIZE> *
prev	swisstm/src/epochstm/memory/memory_txend.h	/^	PtrBufferT<SIZE> *prev;$/;"	m	struct:wlpdstm::PtrBufferT	typeref:typename:PtrBufferT<SIZE> *
prev	swisstm/src/p-tlrw/memory/memory_txend.h	/^	PtrBufferT<SIZE> *prev;$/;"	m	struct:wlpdstm::PtrBufferT	typeref:typename:PtrBufferT<SIZE> *
prev	swisstm/src/rw/memory/memory_txend.h	/^	PtrBufferT<SIZE> *prev;$/;"	m	struct:wlpdstm::PtrBufferT	typeref:typename:PtrBufferT<SIZE> *
prev	swisstm/src/stm/memory/memory_impl.h	/^		PtrBufferT<SIZE> *prev;$/;"	m	struct:wlpdstm::PtrBufferT	typeref:typename:PtrBufferT<SIZE> *
prev	swisstm/src/stm/memory/memory_impl_priv.h	/^	PtrBufferT<SIZE> *prev;$/;"	m	struct:wlpdstm::PtrBufferT	typeref:typename:PtrBufferT<SIZE> *
prev	swisstm/src/tlrw/memory/memory_txend.h	/^	PtrBufferT<SIZE> *prev;$/;"	m	struct:wlpdstm::PtrBufferT	typeref:typename:PtrBufferT<SIZE> *
prev	zipf/flist.h	/^	struct flist_head *next, *prev;$/;"	m	struct:flist_head	typeref:struct:flist_head *
printId	swisstm/src/mubench/thread.c	/^printId (void* argPtr)$/;"	f	typeref:typename:void
print_args	benchmark_list.c	/^void print_args(void)$/;"	f	typeref:typename:void
print_args	benchmark_list_move.c	/^void print_args(void)$/;"	f	typeref:typename:void
print_indent	swisstm/src/common/print_utils.h	/^inline void wlpdstm::print_indent(FILE *out_file, unsigned indent) {$/;"	f	class:wlpdstm	typeref:typename:void
print_keys	run_tests.py	/^def print_keys(dict_keys):$/;"	f
print_pre_order	tree_citrus_rlu.c	/^void print_pre_order(node_t *node)$/;"	f	typeref:typename:void
print_run_results	run_tests.py	/^def print_run_results(f_out,  update_ratio, th_num, dict_keys):$/;"	f
print_usage	swisstm/src/mubench/rbforest.cc	/^static void print_usage() {$/;"	f	typeref:typename:void	file:
printf	rlu.c	/^# define printf(/;"	d	file:
printf_err	rlu.c	/^# define printf_err(/;"	d	file:
privatization_tree	swisstm/src/stm/transaction_mixinv.h	/^		PrivatizationTree privatization_tree;$/;"	m	class:wlpdstm::TxMixinv	typeref:typename:PrivatizationTree
proceedAllCond	swisstm/src/mubench/thread.h	/^    THREAD_COND_T proceedAllCond;$/;"	m	struct:thread_barrier	typeref:typename:THREAD_COND_T
proceedCond	swisstm/src/mubench/thread.h	/^    THREAD_COND_T proceedCond;$/;"	m	struct:thread_barrier	typeref:typename:THREAD_COND_T
profiling	swisstm/src/dynamic/transaction.h	/^			Profiling profiling;$/;"	m	class:wlpdstm::TransactionDynamic	typeref:typename:Profiling
profiling	swisstm/src/epochstm/transaction.h	/^			TxProfiling profiling;$/;"	m	class:wlpdstm::TransactionEpoch	typeref:typename:TxProfiling
profiling	swisstm/src/p-tlrw/transaction.h	/^			TxProfiling profiling;$/;"	m	class:wlpdstm::TransactionTlrw	typeref:typename:TxProfiling
profiling	swisstm/src/rw/transaction.h	/^			TxProfiling profiling;$/;"	m	class:wlpdstm::TransactionRw	typeref:typename:TxProfiling
profiling	swisstm/src/stm/transaction_mixinv.h	/^		Profiling profiling;$/;"	m	class:wlpdstm::TxMixinv	typeref:typename:Profiling
profiling	swisstm/src/tlrw/transaction.h	/^			TxProfiling profiling;$/;"	m	class:wlpdstm::TransactionTlrw	typeref:typename:TxProfiling
profiling_this_tx	swisstm/src/common/profiling/adaptive.h	/^            bool profiling_this_tx;$/;"	m	class:wlpdstm::AdaptiveProfiling	typeref:typename:bool
profiling_this_tx	swisstm/src/common/profiling/non_tx_duration.h	/^            bool profiling_this_tx;$/;"	m	class:wlpdstm::NonTxDurationProfiling	typeref:typename:bool
profiling_this_tx	swisstm/src/common/profiling/tx_duration.h	/^            bool profiling_this_tx;$/;"	m	class:wlpdstm::TxDurationProfiling	typeref:typename:bool
profiling_this_tx	swisstm/src/dynamic/profiling/adaptive_dynamic.h	/^            bool profiling_this_tx;$/;"	m	class:wlpdstm::AdaptiveDynamicProfiling	typeref:typename:bool
proxy_node_locks	swisstm/src/stm/privatization_tree.cc	/^CACHE_LINE_ALIGNED wlpdstm::PaddedSpinTryLock wlpdstm::PrivatizationTree::proxy_node_locks[PRIVA/;"	m	class:wlpdstm::PrivatizationTree	typeref:typename:CACHE_LINE_ALIGNED wlpdstm::PaddedSpinTryLock[]
proxy_node_locks	swisstm/src/stm/privatization_tree.h	/^			static PaddedSpinTryLock proxy_node_locks[PRIVATIZATION_TREE_PROXY_COUNT];$/;"	m	class:wlpdstm::PrivatizationTree	typeref:typename:PaddedSpinTryLock[]
proxy_nodes	swisstm/src/stm/privatization_tree.cc	/^CACHE_LINE_ALIGNED wlpdstm::PaddedWord wlpdstm::PrivatizationTree::proxy_nodes[PRIVATIZATION_TRE/;"	m	class:wlpdstm::PrivatizationTree	typeref:typename:CACHE_LINE_ALIGNED wlpdstm::PaddedWord[]
proxy_nodes	swisstm/src/stm/privatization_tree.h	/^			static PaddedWord proxy_nodes[PRIVATIZATION_TREE_PROXY_COUNT];$/;"	m	class:wlpdstm::PrivatizationTree	typeref:typename:PaddedWord[]
pthread_data	benchmark_list.h	/^typedef struct pthread_data {$/;"	s
pthread_data	benchmark_list_move.h	/^typedef struct pthread_data {$/;"	s
pthread_data_t	benchmark_list.h	/^} pthread_data_t;$/;"	t	typeref:struct:pthread_data
pthread_data_t	benchmark_list_move.h	/^} pthread_data_t;$/;"	t	typeref:struct:pthread_data
pthread_padding	benchmark_list.h	/^	long pthread_padding[PTHREAD_PADDING];$/;"	m	struct:pthread_data	typeref:typename:long[]
pthread_padding	benchmark_list_move.h	/^	long pthread_padding[PTHREAD_PADDING];$/;"	m	struct:pthread_data	typeref:typename:long[]
ptrs	swisstm/src/dynamic/memory/memory_impl.h	/^		void *ptrs[SIZE];$/;"	m	struct:wlpdstm::PtrBufferT	typeref:typename:void * []
ptrs	swisstm/src/dynamic/memory/memory_impl_priv.h	/^	void *ptrs[SIZE];$/;"	m	struct:wlpdstm::PtrBufferT	typeref:typename:void * []
ptrs	swisstm/src/epochstm/memory/memory_txend.h	/^	void *ptrs[SIZE];$/;"	m	struct:wlpdstm::PtrBufferT	typeref:typename:void * []
ptrs	swisstm/src/p-tlrw/memory/memory_txend.h	/^	void *ptrs[SIZE];$/;"	m	struct:wlpdstm::PtrBufferT	typeref:typename:void * []
ptrs	swisstm/src/rw/memory/memory_txend.h	/^	void *ptrs[SIZE];$/;"	m	struct:wlpdstm::PtrBufferT	typeref:typename:void * []
ptrs	swisstm/src/stm/memory/memory_impl.h	/^		void *ptrs[SIZE];$/;"	m	struct:wlpdstm::PtrBufferT	typeref:typename:void * []
ptrs	swisstm/src/stm/memory/memory_impl_priv.h	/^	void *ptrs[SIZE];$/;"	m	struct:wlpdstm::PtrBufferT	typeref:typename:void * []
ptrs	swisstm/src/tlrw/memory/memory_txend.h	/^	void *ptrs[SIZE];$/;"	m	struct:wlpdstm::PtrBufferT	typeref:typename:void * []
q_threads	rlu.h	/^	wait_entry_t q_threads[RLU_MAX_THREADS];$/;"	m	struct:rlu_thread_data	typeref:typename:wait_entry_t[]
qsbr.o	Makefile	/^qsbr.o: qsbr.c qsbr.h util.h$/;"	t
qsbr_data	list_harris.c	/^	qsbr_pthread_data_t *qsbr_data;$/;"	m	struct:harris_pthread_data	typeref:typename:qsbr_pthread_data_t *	file:
qsbr_data	list_move_vlist.c	/^	qsbr_pthread_data_t *qsbr_data;$/;"	m	struct:vlist_pthread_data	typeref:typename:qsbr_pthread_data_t *	file:
qsbr_data	list_vlist.c	/^	qsbr_pthread_data_t *qsbr_data;$/;"	m	struct:vlist_pthread_data	typeref:typename:qsbr_pthread_data_t *	file:
qsbr_data	tree_vrbtree.c	/^	qsbr_pthread_data_t *qsbr_data;$/;"	m	struct:vtree_pthread_data	typeref:typename:qsbr_pthread_data_t *	file:
qsbr_data	tree_vtree.c	/^	qsbr_pthread_data_t *qsbr_data;$/;"	m	struct:vtree_pthread_data	typeref:typename:qsbr_pthread_data_t *	file:
qsbr_free	qsbr.c	/^static inline void qsbr_free(qsbr_pthread_data_t *qsbr_data, int epoch)$/;"	f	typeref:typename:void	file:
qsbr_free_ptr	qsbr.c	/^void qsbr_free_ptr(void *ptr, qsbr_pthread_data_t *qsbr_data)$/;"	f	typeref:typename:void
qsbr_init	qsbr.c	/^void qsbr_init(void)$/;"	f	typeref:typename:void
qsbr_padding	qsbr.h	/^	long qsbr_padding[QSBR_PADDING];$/;"	m	struct:qsbr_pthread_data	typeref:typename:long[]
qsbr_pthread_data	qsbr.h	/^typedef struct qsbr_pthread_data {$/;"	s
qsbr_pthread_data_t	qsbr.h	/^} qsbr_pthread_data_t;$/;"	t	typeref:struct:qsbr_pthread_data
qsbr_pthread_init	qsbr.c	/^void qsbr_pthread_init(qsbr_pthread_data_t *qsbr_data)$/;"	f	typeref:typename:void
qsbr_quiescent_state	qsbr.c	/^void qsbr_quiescent_state(qsbr_pthread_data_t *qsbr_data)$/;"	f	typeref:typename:void
qsbr_update_epoch	qsbr.c	/^static int qsbr_update_epoch()$/;"	f	typeref:typename:int	file:
qsort_tx	swisstm/src/stm_api/read_write.h	/^inline void wlpdstm::qsort_tx(Transaction *tx, void *base, size_t nel, size_t width,$/;"	f	class:wlpdstm	typeref:typename:void
quiescence_timestamp_array	swisstm/src/dynamic/transaction.cc	/^CACHE_LINE_ALIGNED volatile Word wlpdstm::TransactionDynamic::quiescence_timestamp_array[MAX_THR/;"	m	class:wlpdstm::TransactionDynamic	typeref:typename:CACHE_LINE_ALIGNED volatile Word[]
quiescence_timestamp_array	swisstm/src/dynamic/transaction.h	/^			static volatile Word quiescence_timestamp_array[MAX_THREADS];$/;"	m	class:wlpdstm::TransactionDynamic	typeref:typename:volatile Word[]
quiescence_timestamp_array	swisstm/src/stm/transaction_mixinv.cc	/^CACHE_LINE_ALIGNED volatile Word wlpdstm::TxMixinv::quiescence_timestamp_array[MAX_THREADS];$/;"	m	class:wlpdstm::TxMixinv	typeref:typename:CACHE_LINE_ALIGNED volatile Word[]
quiescence_timestamp_array	swisstm/src/stm/transaction_mixinv.h	/^		static volatile Word quiescence_timestamp_array[MAX_THREADS];$/;"	m	class:wlpdstm::TxMixinv	typeref:typename:volatile Word[]
quiescence_ts	swisstm/src/dynamic/transaction.h	/^			Word *quiescence_ts;$/;"	m	class:wlpdstm::TransactionDynamic	typeref:typename:Word *
quiescence_ts	swisstm/src/stm/transaction_mixinv.h	/^		Word *quiescence_ts;$/;"	m	class:wlpdstm::TxMixinv	typeref:typename:Word *
r	swisstm/src/mubench/rbtree.h	/^    struct node* r;$/;"	m	struct:node	typeref:struct:node *
rand	swisstm/src/common/profiling/adaptive.h	/^			Random rand;$/;"	m	class:wlpdstm::AdaptiveProfiling	typeref:typename:Random
rand	swisstm/src/common/profiling/non_tx_duration.h	/^			Random rand;$/;"	m	class:wlpdstm::NonTxDurationProfiling	typeref:typename:Random
rand	swisstm/src/common/profiling/simple.h	/^			Random rand;$/;"	m	class:wlpdstm::SimpleProfiling	typeref:typename:Random
rand	swisstm/src/common/profiling/tx_duration.h	/^			Random rand;$/;"	m	class:wlpdstm::TxDurationProfiling	typeref:typename:Random
rand	swisstm/src/dynamic/profiling/adaptive_dynamic.h	/^			Random rand;$/;"	m	class:wlpdstm::AdaptiveDynamicProfiling	typeref:typename:Random
rand	zipf/zipf.h	/^	struct frand_state rand;$/;"	m	struct:zipf_state	typeref:struct:frand_state
rand.o	Makefile	/^rand.o: zipf\/rand.c$/;"	t
rand32_upto	zipf/rand.h	/^static inline uint32_t rand32_upto(struct frand_state *state, uint32_t end)$/;"	f	typeref:typename:uint32_t
rand64_upto	zipf/rand.h	/^static inline uint64_t rand64_upto(struct frand_state *state, uint64_t end)$/;"	f	typeref:typename:uint64_t
rand_between	zipf/rand.h	/^static inline uint64_t rand_between(struct frand_state *state, uint64_t start,$/;"	f	typeref:typename:uint64_t
rand_max	zipf/rand.h	/^static inline uint64_t rand_max(struct frand_state *state)$/;"	f	typeref:typename:uint64_t
rand_off	zipf/zipf.h	/^	uint64_t rand_off;$/;"	m	struct:zipf_state	typeref:typename:uint64_t
rand_seed	swisstm/src/mubench/rbforest.cc	/^    unsigned rand_seed;$/;"	m	struct:thread_data_t	typeref:typename:unsigned	file:
random	swisstm/src/common/energy.h	/^			Random random;$/;"	m	class:wlpdstm::Energy	typeref:typename:Random
random	swisstm/src/common/sampling.h	/^			Random *random;$/;"	m	class:wlpdstm::RandomTxSampling	typeref:typename:Random *
random	swisstm/src/dynamic/transaction.h	/^			Random random;$/;"	m	class:wlpdstm::TransactionDynamic	typeref:typename:Random
random	swisstm/src/epochstm/transaction.h	/^			Random random;$/;"	m	class:wlpdstm::TransactionEpoch	typeref:typename:Random
random	swisstm/src/p-tlrw/transaction.h	/^			Random random;$/;"	m	class:wlpdstm::TransactionTlrw	typeref:typename:Random
random	swisstm/src/rw/transaction.h	/^			Random random;$/;"	m	class:wlpdstm::TransactionRw	typeref:typename:Random
random	swisstm/src/stm/transaction_mixinv.h	/^		Random random;$/;"	m	class:wlpdstm::TxMixinv	typeref:typename:Random
random	swisstm/src/tlrw/transaction.h	/^			Random random;$/;"	m	class:wlpdstm::TransactionTlrw	typeref:typename:Random
range	benchmark_list.h	/^	int range;$/;"	m	struct:pthread_data	typeref:typename:int
range	benchmark_list_move.h	/^	int range;$/;"	m	struct:pthread_data	typeref:typename:int
range	swisstm/src/mubench/intset-list-mv.c	/^  int range;$/;"	m	struct:thread_data	typeref:typename:int	file:
range	swisstm/src/mubench/intset.c	/^  int range;$/;"	m	struct:thread_data	typeref:typename:int	file:
range_size	config-list.json	/^                        "range_size" : 100000,$/;"	n	object:list50k.0
range_size	config-list.json	/^                        "range_size" : 2000,$/;"	n	object:list1k.0
range_size	config-list.json	/^                        "range_size" : 20000,$/;"	n	object:list10k.0
range_size	config-tree.json	/^                        "range_size" : 20000,$/;"	n	object:tree10k.0
range_size	config.json	/^                        "range_size" : 20000,$/;"	n	object:tree10k-aug10.0
range_size	list.json	/^                        "range_size" : 2000,$/;"	n	object:list1k.0
range_size	list.json	/^                        "range_size" : 20000,$/;"	n	object:list10k.0
range_size	list.json	/^                        "range_size" : 200000,$/;"	n	object:list100k.0
rbegin	swisstm/src/common/log.h	/^	inline typename Log<T, CHUNK_LENGTH, INIT>::rev_iterator Log<T, CHUNK_LENGTH, INIT>::rbegin() c/;"	f	class:wlpdstm::Log	typeref:typename:Log<T,CHUNK_LENGTH,INIT>::rev_iterator
rbtree	swisstm/src/mubench/rbtree.h	/^typedef struct rbtree {$/;"	s
rbtree_alloc	swisstm/src/mubench/rbtree.c	/^rbtree_alloc ()$/;"	f	typeref:typename:rbtree_t *
rbtree_check	tree_vrbtree.c	/^#define rbtree_check(/;"	d	file:
rbtree_check	tree_vrbtree.c	/^rbtree_check(node_t *node, node_t *parent, int parent_color,$/;"	f	typeref:typename:int	file:
rbtree_contains	swisstm/src/mubench/rbtree.c	/^rbtree_contains (rbtree_t* r, int key)$/;"	f	typeref:typename:int
rbtree_delete	swisstm/src/mubench/rbtree.c	/^rbtree_delete (rbtree_t* r, int key)$/;"	f	typeref:typename:int
rbtree_free	swisstm/src/mubench/rbtree.c	/^rbtree_free (rbtree_t* r)$/;"	f	typeref:typename:void
rbtree_get	swisstm/src/mubench/rbtree.c	/^rbtree_get (rbtree_t* r, int key) {$/;"	f	typeref:typename:int
rbtree_insert	swisstm/src/mubench/rbtree.c	/^rbtree_insert (rbtree_t* r, int key, int val)$/;"	f	typeref:typename:int
rbtree_t	swisstm/src/mubench/rbtree.h	/^} rbtree_t;$/;"	t	typeref:struct:rbtree
rbtree_update	swisstm/src/mubench/rbtree.c	/^rbtree_update (rbtree_t* r, int key, int val)$/;"	f	typeref:typename:int
rbtree_verify	swisstm/src/mubench/rbtree.c	/^rbtree_verify (rbtree_t* s, int verbose)$/;"	f	typeref:typename:int
rcu_assign_pointer	tree_bonsai.c	/^#define rcu_assign_pointer(/;"	d	file:
rcu_free	list_rcu.c	/^inline void rcu_free(void *ptr, rcu_pthread_data_t *rcu_data)$/;"	f	typeref:typename:void
rcu_free	tree_bonsai.c	/^void rcu_free(void *ptr, rcu_pthread_data_t *rcu_data)$/;"	f	typeref:typename:void
rcu_free	tree_prcu.c	/^inline void rcu_free(void *ptr, prcu_pthread_data_t *prcu_data)$/;"	f	typeref:typename:void
rcu_free	tree_rcu.c	/^inline void rcu_free(void *ptr, rcu_pthread_data_t *rcu_data)$/;"	f	typeref:typename:void
rcu_list	list_rcu.c	/^typedef struct rcu_list {$/;"	s	file:
rcu_list_t	list_rcu.c	/^} rcu_list_t;$/;"	t	typeref:struct:rcu_list	file:
rcu_maybe_free_ptrs	tree_bonsai.c	/^inline void rcu_maybe_free_ptrs(rcu_pthread_data_t *rcu_data)$/;"	f	typeref:typename:void
rcu_new_node	tree_rcu.c	/^static node_t *rcu_new_node(int key)$/;"	f	typeref:typename:node_t *	file:
rcu_pthread_data	list_rcu.c	/^typedef struct rcu_pthread_data {$/;"	s	file:
rcu_pthread_data	tree_bonsai.c	/^typedef struct rcu_pthread_data {$/;"	s	file:
rcu_pthread_data	tree_rcu.c	/^typedef struct rcu_pthread_data {$/;"	s	file:
rcu_pthread_data_t	list_rcu.c	/^} rcu_pthread_data_t;$/;"	t	typeref:struct:rcu_pthread_data	file:
rcu_pthread_data_t	tree_bonsai.c	/^} rcu_pthread_data_t;$/;"	t	typeref:struct:rcu_pthread_data	file:
rcu_pthread_data_t	tree_rcu.c	/^} rcu_pthread_data_t;$/;"	t	typeref:struct:rcu_pthread_data	file:
rcu_reader_lock	list_rcu.c	/^inline void rcu_reader_lock(rcu_pthread_data_t *rcu_data)$/;"	f	typeref:typename:void
rcu_reader_lock	tree_bonsai.c	/^inline void rcu_reader_lock(rcu_pthread_data_t *rcu_data)$/;"	f	typeref:typename:void
rcu_reader_lock	tree_rcu.c	/^inline void rcu_reader_lock(rcu_pthread_data_t *rcu_data)$/;"	f	typeref:typename:void
rcu_reader_unlock	list_rcu.c	/^inline void rcu_reader_unlock(rcu_pthread_data_t *rcu_data)$/;"	f	typeref:typename:void
rcu_reader_unlock	tree_bonsai.c	/^inline void rcu_reader_unlock(rcu_pthread_data_t *rcu_data)$/;"	f	typeref:typename:void
rcu_reader_unlock	tree_rcu.c	/^inline void rcu_reader_unlock(rcu_pthread_data_t *rcu_data)$/;"	f	typeref:typename:void
rcu_tree	tree_rcu.c	/^typedef struct rcu_tree {$/;"	s	file:
rcu_tree_t	tree_rcu.c	/^} rcu_tree_t;$/;"	t	typeref:struct:rcu_tree	file:
rcu_writer_lock	list_rcu.c	/^inline void rcu_writer_lock(rcu_list_t *list)$/;"	f	typeref:typename:void
rcu_writer_lock	tree_bonsai.c	/^inline void rcu_writer_lock(bonsai_tree_t *tree)$/;"	f	typeref:typename:void
rcu_writer_unlock	list_rcu.c	/^inline void rcu_writer_unlock(rcu_list_t *list)$/;"	f	typeref:typename:void
rcu_writer_unlock	tree_bonsai.c	/^inline void rcu_writer_unlock(bonsai_tree_t *tree)$/;"	f	typeref:typename:void
read16	swisstm/src/stm_api/read_write.h	/^inline uint16_t wlpdstm::read16(Transaction *tx, uint16_t *addr) {$/;"	f	class:wlpdstm	typeref:typename:uint16_t
read16aligned	swisstm/src/stm_api/read_write.h	/^inline uint16_t wlpdstm::read16aligned(Transaction *tx, uint16_t *addr) {$/;"	f	class:wlpdstm	typeref:typename:uint16_t
read32	swisstm/src/stm_api/read_write.h	/^inline uint32_t wlpdstm::read32(Transaction *tx, uint32_t *addr) {$/;"	f	class:wlpdstm	typeref:typename:uint32_t
read32aligned	swisstm/src/stm_api/read_write.h	/^inline uint32_t wlpdstm::read32aligned(Transaction *tx, uint32_t *addr) {$/;"	f	class:wlpdstm	typeref:typename:uint32_t
read64	swisstm/src/stm_api/read_write.h	/^inline uint64_t wlpdstm::read64(Transaction *tx, uint64_t *addr) {$/;"	f	class:wlpdstm	typeref:typename:uint64_t
read64aligned	swisstm/src/stm_api/read_write.h	/^inline uint64_t wlpdstm::read64aligned(Transaction *tx, uint64_t *addr) {$/;"	f	class:wlpdstm	typeref:typename:uint64_t
read8	swisstm/src/stm_api/read_write.h	/^inline uint8_t wlpdstm::read8(Transaction *tx, uint8_t *addr) {$/;"	f	class:wlpdstm	typeref:typename:uint8_t
read8aligned	swisstm/src/stm_api/read_write.h	/^inline uint8_t wlpdstm::read8aligned(Transaction *tx, uint8_t *addr) {$/;"	f	class:wlpdstm	typeref:typename:uint8_t
readCurrentTs	swisstm/src/dynamic/timestamp.h	/^			Word readCurrentTs() const {$/;"	f	class:wlpdstm::GlobalTimestamp	typeref:typename:Word
readCurrentTs	swisstm/src/stm/timestamp.h	/^			Word readCurrentTs() const {$/;"	f	class:wlpdstm::GlobalTimestamp	typeref:typename:Word
readCurrentTsAcquire	swisstm/src/dynamic/timestamp.h	/^			Word readCurrentTsAcquire() const {$/;"	f	class:wlpdstm::GlobalTimestamp	typeref:typename:Word
readCurrentTsAcquire	swisstm/src/stm/timestamp.h	/^			Word readCurrentTsAcquire() const {$/;"	f	class:wlpdstm::GlobalTimestamp	typeref:typename:Word
read_bp	swisstm/src/common/arch.h	/^inline uintptr_t wlpdstm::read_bp() {$/;"	f	class:wlpdstm	typeref:typename:uintptr_t
read_double	swisstm/src/stm_api/read_write.h	/^inline double wlpdstm::read_double(Transaction *tx, double *addr) {$/;"	f	class:wlpdstm	typeref:typename:double
read_double_aligned	swisstm/src/stm_api/read_write.h	/^inline double wlpdstm::read_double_aligned(Transaction *tx, double *addr) {$/;"	f	class:wlpdstm	typeref:typename:double
read_float	swisstm/src/stm_api/read_write.h	/^inline float wlpdstm::read_float(Transaction *tx, float *addr) {$/;"	f	class:wlpdstm	typeref:typename:float
read_float_aligned	swisstm/src/stm_api/read_write.h	/^inline float wlpdstm::read_float_aligned(Transaction *tx, float *addr) {$/;"	f	class:wlpdstm	typeref:typename:float
read_lock	swisstm/src/dynamic/log.h	/^		VersionLock *read_lock;$/;"	m	struct:wlpdstm::ReadLogEntry	typeref:typename:VersionLock *
read_lock	swisstm/src/dynamic/log.h	/^		VersionLock *read_lock;$/;"	m	struct:wlpdstm::WriteLogEntry	typeref:typename:VersionLock *
read_lock	swisstm/src/rw/transaction.h	/^			volatile ReadLock read_lock;$/;"	m	struct:wlpdstm::TransactionRw::OwnershipRecord	typeref:typename:volatile ReadLock
read_lock	swisstm/src/stm/transaction_mixinv.h	/^			VersionLock *read_lock;$/;"	m	struct:wlpdstm::TxMixinv::ReadLogEntry	typeref:typename:VersionLock *
read_lock	swisstm/src/stm/transaction_mixinv.h	/^			VersionLock *read_lock;$/;"	m	struct:wlpdstm::TxMixinv::WriteLogEntry	typeref:typename:VersionLock *
read_locks	swisstm/src/p-tlrw/transaction.h	/^			ReadLock read_locks[READ_LOCKS_IN_WORD];$/;"	m	union:wlpdstm::TransactionTlrw::__anon7ebeeeb6010a	typeref:typename:ReadLock[]
read_locks	swisstm/src/p-tlrw/transaction.h	/^			volatile ReadLock read_locks[READ_LOCKS_IN_OREC];$/;"	m	struct:wlpdstm::TransactionTlrw::OwnershipRecord	typeref:typename:volatile ReadLock[]
read_locks	swisstm/src/tlrw/transaction.h	/^			ReadLock read_locks[READ_LOCKS_IN_WORD];$/;"	m	union:wlpdstm::TransactionTlrw::__anoncf01a599010a	typeref:typename:ReadLock[]
read_locks	swisstm/src/tlrw/transaction.h	/^			volatile ReadLock read_locks[READ_LOCKS_IN_OREC];$/;"	m	struct:wlpdstm::TransactionTlrw::OwnershipRecord	typeref:typename:volatile ReadLock[]
read_log	swisstm/src/dynamic/transaction.h	/^			ReadLog read_log;$/;"	m	class:wlpdstm::TransactionDynamic	typeref:typename:ReadLog
read_log	swisstm/src/stm/transaction_mixinv.h	/^		ReadLog read_log;$/;"	m	class:wlpdstm::TxMixinv	typeref:typename:ReadLog
read_m128	swisstm/src/stm_api/read_write.h	/^inline __m128 wlpdstm::read_m128(Transaction *tx, __m128 *addr) {$/;"	f	class:wlpdstm	typeref:typename:__m128
read_region	swisstm/src/stm_api/read_write.h	/^inline void wlpdstm::read_region(Transaction *tx, uint8_t *src, uintptr_t bytes, uint8_t *dest) /;"	f	class:wlpdstm	typeref:typename:void
read_set	swisstm/src/p-tlrw/transaction.h	/^			ReadSet *read_set;$/;"	m	class:wlpdstm::TransactionTlrw	typeref:typename:ReadSet *
read_set	swisstm/src/rw/transaction.h	/^			ReadSet read_set;$/;"	m	class:wlpdstm::TransactionRw	typeref:typename:ReadSet
read_set	swisstm/src/tlrw/transaction.h	/^			ReadSet read_set;$/;"	m	class:wlpdstm::TransactionTlrw	typeref:typename:ReadSet
read_set_array	swisstm/src/p-tlrw/transaction.h	/^			ReadSet read_set_array[MAX_TRANSACTION_COUNT + 1];$/;"	m	class:wlpdstm::TransactionTlrw	typeref:typename:ReadSet[]
read_slot	list_move_vlist.c	/^static inline vlist_slot_t *read_slot(node_t *node, vlist_pthread_data_t *vlist_data)$/;"	f	typeref:typename:vlist_slot_t *	file:
read_slot	list_vlist.c	/^static inline vlist_slot_t *read_slot(node_t *node, vlist_pthread_data_t *vlist_data)$/;"	f	typeref:typename:vlist_slot_t *	file:
read_slot	tree_vrbtree.c	/^static inline vtree_slot_t *read_slot(node_t *node, vtree_pthread_data_t *vtree_data)$/;"	f	typeref:typename:vtree_slot_t *	file:
read_slot	tree_vtree.c	/^static inline vtree_slot_t *read_slot(node_t *node, vtree_pthread_data_t *vtree_data)$/;"	f	typeref:typename:vtree_slot_t *	file:
read_slot_epoch	list_move_vlist.c	/^static inline unsigned long read_slot_epoch(vlist_slot_t *slot)$/;"	f	typeref:typename:unsigned long	file:
read_slot_epoch	list_vlist.c	/^static inline unsigned long read_slot_epoch(vlist_slot_t *slot)$/;"	f	typeref:typename:unsigned long	file:
read_slot_epoch	tree_vrbtree.c	/^static inline unsigned long read_slot_epoch(vtree_slot_t *slot)$/;"	f	typeref:typename:unsigned long	file:
read_slot_epoch	tree_vtree.c	/^static inline unsigned long read_slot_epoch(vtree_slot_t *slot)$/;"	f	typeref:typename:unsigned long	file:
read_sp	swisstm/src/common/arch.h	/^inline uintptr_t wlpdstm::read_sp() {$/;"	f	class:wlpdstm	typeref:typename:uintptr_t
read_tsc	tree_prcu.c	/^static inline uint64_t read_tsc(void)$/;"	f	typeref:typename:uint64_t	file:
read_word_fun	swisstm/src/dynamic/transaction.h	/^			ReadWordFunPtr read_word_fun;$/;"	m	class:wlpdstm::TransactionDynamic	typeref:typename:ReadWordFunPtr
read_write_conv_t	swisstm/src/stm_api/read_write.h	/^	} read_write_conv_t;$/;"	t	namespace:wlpdstm	typeref:union:wlpdstm::read_write_conv_u
read_write_conv_u	swisstm/src/stm_api/read_write.h	/^	typedef union read_write_conv_u {$/;"	u	namespace:wlpdstm
reader_count	swisstm/src/epochstm/transaction.h	/^				volatile Word reader_count;$/;"	m	struct:wlpdstm::TransactionEpoch::OwnershipRecord	typeref:typename:volatile Word
reader_epochs_word	swisstm/src/epochstm/transaction.h	/^					Word reader_epochs_word[READERS_IN_OREC \/ READERS_IN_WORD];$/;"	m	union:wlpdstm::TransactionEpoch::OwnershipRecord::__anon706747f3010a	typeref:typename:Word[]
reader_mapping	swisstm/src/epochstm/transaction.h	/^			Reader *reader_mapping[OWNERSHIP_TABLE_SIZE];$/;"	m	class:wlpdstm::TransactionEpoch	typeref:typename:Reader * []
reader_mask	swisstm/src/rw/transaction.h	/^			Word reader_mask;$/;"	m	class:wlpdstm::TransactionRw	typeref:typename:Word
readers	swisstm/src/epochstm/transaction.h	/^					Reader readers[READERS_IN_EXTRA_ARRAY];$/;"	m	union:wlpdstm::TransactionEpoch::ReaderExtraArray::__anon706747f3020a	typeref:typename:Reader[]
readers	swisstm/src/epochstm/transaction.h	/^					Reader readers[READERS_IN_OREC];$/;"	m	union:wlpdstm::TransactionEpoch::OwnershipRecord::__anon706747f3010a	typeref:typename:Reader[]
readers	swisstm/src/epochstm/transaction.h	/^				Reader readers[READERS_IN_WORD];$/;"	m	union:wlpdstm::TransactionEpoch::__anon706747f3030a	typeref:typename:Reader[]
readers_extra_arrays	swisstm/src/epochstm/transaction.h	/^				Reader *readers_extra_arrays[READERS_EXTRA_ARRAYS];$/;"	m	struct:wlpdstm::TransactionEpoch::OwnershipRecord	typeref:typename:Reader * []
readers_word	swisstm/src/epochstm/transaction.h	/^					Word readers_word[READERS_IN_EXTRA_ARRAY \/ READERS_IN_WORD];$/;"	m	union:wlpdstm::TransactionEpoch::ReaderExtraArray::__anon706747f3020a	typeref:typename:Word[]
realloc	swisstm/src/mubench/tm.h	/^#    define realloc(/;"	d
rec	list_move_vlist.c	/^	struct vlist_record *rec;$/;"	m	struct:vlist_slot	typeref:struct:vlist_record *	file:
rec	list_move_vlist.c	/^	vlist_record_t *rec;$/;"	m	struct:vlist_pthread_data	typeref:typename:vlist_record_t *	file:
rec	list_vlist.c	/^	struct vlist_record *rec;$/;"	m	struct:vlist_slot	typeref:struct:vlist_record *	file:
rec	list_vlist.c	/^	vlist_record_t *rec;$/;"	m	struct:vlist_pthread_data	typeref:typename:vlist_record_t *	file:
rec	tree_vrbtree.c	/^	struct vtree_record *rec;$/;"	m	struct:vtree_slot	typeref:struct:vtree_record *	file:
rec	tree_vrbtree.c	/^	vtree_record_t *rec;$/;"	m	struct:vtree_pthread_data	typeref:typename:vtree_record_t *	file:
rec	tree_vtree.c	/^	struct vtree_record *rec;$/;"	m	struct:vtree_slot	typeref:struct:vtree_record *	file:
rec	tree_vtree.c	/^	vtree_record_t *rec;$/;"	m	struct:vtree_pthread_data	typeref:typename:vtree_record_t *	file:
rec_next	list_move_vlist.c	/^	struct vlist_record *rec_next;$/;"	m	struct:vlist_record	typeref:struct:vlist_record *	file:
rec_next	list_vlist.c	/^	struct vlist_record *rec_next;$/;"	m	struct:vlist_record	typeref:struct:vlist_record *	file:
rec_next	tree_vrbtree.c	/^	struct vtree_record *rec_next;$/;"	m	struct:vtree_record	typeref:struct:vtree_record *	file:
rec_next	tree_vtree.c	/^	struct vtree_record *rec_next;$/;"	m	struct:vtree_record	typeref:struct:vtree_record *	file:
release	swisstm/src/common/atomic.h	/^			void release() {$/;"	f	class:wlpdstm::PaddedSpinTryLock	typeref:typename:void
release	swisstm/src/common/lock.h	/^			void release() volatile {$/;"	f	class:wlpdstm::cas_lock	typeref:typename:void
releaseNode	swisstm/src/mubench/rbtree.c	/^releaseNode (node_t* n)$/;"	f	typeref:typename:void	file:
remove	swisstm/src/common/log.h	/^	inline T Log<T, CHUNK_LENGTH, INIT>::remove() {$/;"	f	class:wlpdstm::Log	typeref:typename:T
remove	swisstm/src/common/log.h	/^	inline T Log<T, INITIAL_SIZE, GROWTH_FACTOR>::remove() {$/;"	f	class:wlpdstm::Log	typeref:typename:T
reset_counter	swisstm/src/common/sampling.h	/^            void reset_counter() {$/;"	f	class:wlpdstm::RandomTxSampling	typeref:typename:void
restart	swisstm/src/dynamic/timestamp.h	/^			void restart() {$/;"	f	class:wlpdstm::GlobalTimestamp	typeref:typename:void
restart	swisstm/src/stm/timestamp.h	/^			void restart() {$/;"	f	class:wlpdstm::GlobalTimestamp	typeref:typename:void
result_dir	run_bench.py	/^result_dir = ".\/results\/" + opts.dest + "\/"$/;"	v
result_dir	run_tests.py	/^        result_dir = result_dir + "llist\/" + "u" + str(opts.update_rate) + "\/"$/;"	v
result_dir	run_tests.py	/^    result_dir = ".\/results\/"$/;"	v
result_keys	run_tests.py	/^result_keys = [$/;"	v
ret_addr	swisstm/src/intel/jmp.h	/^	uint32_t ret_addr;$/;"	m	struct:begin_transaction_jmpbuf	typeref:typename:uint32_t
ret_inst	swisstm/src/common/perfcnt/perf_cnt_papi.h	/^		uint64_t ret_inst;$/;"	m	class:wlpdstm::PerfCntPapi	typeref:typename:uint64_t
ret_inst	swisstm/src/common/perfcnt/perf_cnt_solaris.h	/^			uint64_t ret_inst;$/;"	m	class:wlpdstm::PerfCntSolaris	typeref:typename:uint64_t
ret_inst_ind	swisstm/src/common/perfcnt/perf_cnt_solaris.h	/^			int ret_inst_ind;$/;"	m	class:wlpdstm::PerfCntSolaris	typeref:typename:int
reusable	swisstm/src/dynamic/memory/memory_impl.h	/^			PtrBuffer *reusable;$/;"	m	class:wlpdstm::MemoryManager	typeref:typename:PtrBuffer *
reusable	swisstm/src/dynamic/memory/memory_impl_priv.h	/^	PtrBuffer *reusable;$/;"	m	class:wlpdstm::MemoryManager	typeref:typename:PtrBuffer *
reusable	swisstm/src/epochstm/memory/memory_txend.h	/^	PtrBuffer *reusable;$/;"	m	class:wlpdstm::MemoryManager	typeref:typename:PtrBuffer *
reusable	swisstm/src/p-tlrw/memory/memory_txend.h	/^	PtrBuffer *reusable;$/;"	m	class:wlpdstm::MemoryManager	typeref:typename:PtrBuffer *
reusable	swisstm/src/rw/memory/memory_txend.h	/^	PtrBuffer *reusable;$/;"	m	class:wlpdstm::MemoryManager	typeref:typename:PtrBuffer *
reusable	swisstm/src/stm/memory/memory_impl.h	/^			PtrBuffer *reusable;$/;"	m	class:wlpdstm::MemoryManager	typeref:typename:PtrBuffer *
reusable	swisstm/src/stm/memory/memory_impl_priv.h	/^	PtrBuffer *reusable;$/;"	m	class:wlpdstm::MemoryManager	typeref:typename:PtrBuffer *
reusable	swisstm/src/tlrw/memory/memory_txend.h	/^	PtrBuffer *reusable;$/;"	m	class:wlpdstm::MemoryManager	typeref:typename:PtrBuffer *
rev_iterator	swisstm/src/common/log.h	/^				rev_iterator(LogChunk *hc = NULL, LogChunk *c = NULL, unsigned el = 0)$/;"	f	class:wlpdstm::Log::rev_iterator
rev_iterator	swisstm/src/common/log.h	/^		class rev_iterator : public WlpdstmAlloced {$/;"	c	class:wlpdstm::Log
right	tree_bonsai.c	/^	struct node *right;$/;"	m	struct:node	typeref:struct:node *	file:
rightOf	swisstm/src/mubench/rbtree.c	/^rightOf (node_t* n)$/;"	f	typeref:typename:node_t *	file:
rlu.o	Makefile	/^rlu.o: rlu.c rlu.h$/;"	t
rlu_abort	rlu.c	/^void rlu_abort(rlu_thread_data_t *self) {$/;"	f	typeref:typename:void
rlu_add_obj_copy_to_write_set	rlu.c	/^static void rlu_add_obj_copy_to_write_set(rlu_thread_data_t *self, intptr_t *p_obj, obj_size_t o/;"	f	typeref:typename:void	file:
rlu_add_writer_lock	rlu.c	/^static void rlu_add_writer_lock(rlu_thread_data_t *self, long writer_lock_id) {$/;"	f	typeref:typename:void	file:
rlu_add_ws_obj_header_to_write_set	rlu.c	/^static intptr_t *rlu_add_ws_obj_header_to_write_set(rlu_thread_data_t *self, intptr_t *p_obj, ob/;"	f	typeref:typename:intptr_t *	file:
rlu_alloc	rlu.c	/^intptr_t *rlu_alloc(obj_size_t obj_size) {$/;"	f	typeref:typename:intptr_t *
rlu_assert_in_section	rlu.c	/^static void rlu_assert_in_section(rlu_thread_data_t *self) {$/;"	f	typeref:typename:void	file:
rlu_assign_pointer	rlu.c	/^void rlu_assign_pointer(intptr_t **p_ptr, intptr_t *p_obj) {$/;"	f	typeref:typename:void
rlu_cmp_ptrs	rlu.c	/^int rlu_cmp_ptrs(intptr_t *p_obj_1, intptr_t *p_obj_2) {$/;"	f	typeref:typename:int
rlu_commit_write_set	rlu.c	/^static void rlu_commit_write_set(rlu_thread_data_t *self) {$/;"	f	typeref:typename:void	file:
rlu_data	rlu.c	/^typedef struct rlu_data {$/;"	s	file:
rlu_data_t	rlu.c	/^} rlu_data_t;$/;"	t	typeref:struct:rlu_data	file:
rlu_deref_slow_path	rlu.c	/^intptr_t *rlu_deref_slow_path(rlu_thread_data_t *self, intptr_t *p_obj) {$/;"	f	typeref:typename:intptr_t *
rlu_finish	rlu.c	/^void rlu_finish(void) { }$/;"	f	typeref:typename:void
rlu_free	rlu.c	/^void rlu_free(rlu_thread_data_t *self, intptr_t *p_obj) {$/;"	f	typeref:typename:void
rlu_init	rlu.c	/^void rlu_init(void) {$/;"	f	typeref:typename:void
rlu_init_args	rlu.c	/^void rlu_init_args(int type, int ws) {$/;"	f	typeref:typename:void
rlu_init_quiescence	rlu.c	/^static void rlu_init_quiescence(rlu_thread_data_t *self) {$/;"	f	typeref:typename:void	file:
rlu_likely	rlu.h	/^#define rlu_likely(/;"	d
rlu_list	list_move_rlu.c	/^typedef struct rlu_list {$/;"	s	file:
rlu_list	list_rlu.c	/^typedef struct rlu_list {$/;"	s	file:
rlu_list_t	list_move_rlu.c	/^} rlu_list_t;$/;"	t	typeref:struct:rlu_list	file:
rlu_list_t	list_rlu.c	/^} rlu_list_t;$/;"	t	typeref:struct:rlu_list	file:
rlu_lock	rlu.c	/^void rlu_lock(rlu_thread_data_t *self, intptr_t **p_p_obj, unsigned int obj_size) {$/;"	f	typeref:typename:void
rlu_max_ws	config-list.json	/^                        "rlu_max_ws" : 1,$/;"	n	object:list10k.0
rlu_max_ws	config-list.json	/^                        "rlu_max_ws" : 1,$/;"	n	object:list1k.0
rlu_max_ws	config-list.json	/^                        "rlu_max_ws" : 1,$/;"	n	object:list50k.0
rlu_max_ws	config-tree.json	/^                        "rlu_max_ws" : 1,$/;"	n	object:tree10k.0
rlu_max_ws	config.json	/^                        "rlu_max_ws" : 1,$/;"	n	object:tree10k-aug10.0
rlu_max_ws	list.json	/^                        "rlu_max_ws" : 1,$/;"	n	object:list100k.0
rlu_max_ws	list.json	/^                        "rlu_max_ws" : 1,$/;"	n	object:list10k.0
rlu_max_ws	list.json	/^                        "rlu_max_ws" : 1,$/;"	n	object:list1k.0
rlu_new_node	tree_citrus_rlu.c	/^static node_t *rlu_new_node(int key)$/;"	f	typeref:typename:node_t *	file:
rlu_new_node	tree_rlu.c	/^static node_t *rlu_new_node(int key)$/;"	f	typeref:typename:node_t *	file:
rlu_obj_header	rlu.h	/^typedef struct rlu_obj_header {$/;"	s
rlu_obj_header_t	rlu.h	/^} rlu_obj_header_t;$/;"	t	typeref:struct:rlu_obj_header
rlu_ordo.o	Makefile	/^rlu_ordo.o: rlu.c rlu.h$/;"	t
rlu_print_stats	rlu.c	/^void rlu_print_stats(void) {$/;"	f	typeref:typename:void
rlu_process_free	rlu.c	/^static void rlu_process_free(rlu_thread_data_t *self) {$/;"	f	typeref:typename:void	file:
rlu_reader_lock	rlu.c	/^void rlu_reader_lock(rlu_thread_data_t *self) {$/;"	f	typeref:typename:void
rlu_reader_unlock	rlu.c	/^int rlu_reader_unlock(rlu_thread_data_t *self) {$/;"	f	typeref:typename:int
rlu_register_thread	rlu.c	/^static void rlu_register_thread(rlu_thread_data_t *self) {$/;"	f	typeref:typename:void	file:
rlu_release_writer_lock	rlu.c	/^static void rlu_release_writer_lock(rlu_thread_data_t *self, long writer_lock_id) {$/;"	f	typeref:typename:void	file:
rlu_release_writer_locks	rlu.c	/^static void rlu_release_writer_locks(rlu_thread_data_t *self, int ws_id) {$/;"	f	typeref:typename:void	file:
rlu_reset	rlu.c	/^static void rlu_reset(rlu_thread_data_t *self) {$/;"	f	typeref:typename:void	file:
rlu_reset_write_set	rlu.c	/^static void rlu_reset_write_set(rlu_thread_data_t *self, long ws_counter) {$/;"	f	typeref:typename:void	file:
rlu_reset_writer_locks	rlu.c	/^static void rlu_reset_writer_locks(rlu_thread_data_t *self, long ws_id) {$/;"	f	typeref:typename:void	file:
rlu_send_sync_request	rlu.c	/^static void rlu_send_sync_request(int other_th_id) {$/;"	f	typeref:typename:void	file:
rlu_sync_and_writeback	rlu.c	/^static void rlu_sync_and_writeback(rlu_thread_data_t *self) {$/;"	f	typeref:typename:void	file:
rlu_sync_checkpoint	rlu.c	/^void rlu_sync_checkpoint(rlu_thread_data_t *self) {$/;"	f	typeref:typename:void
rlu_synchronize	rlu.c	/^static void rlu_synchronize(rlu_thread_data_t *self) {$/;"	f	typeref:typename:void	file:
rlu_thread_data	rlu.h	/^typedef struct rlu_thread_data {$/;"	s
rlu_thread_data_t	rlu.h	/^} rlu_thread_data_t;$/;"	t	typeref:struct:rlu_thread_data
rlu_thread_finish	rlu.c	/^void rlu_thread_finish(rlu_thread_data_t *self) {$/;"	f	typeref:typename:void
rlu_thread_init	rlu.c	/^void rlu_thread_init(rlu_thread_data_t *self) {$/;"	f	typeref:typename:void
rlu_tree	tree_citrus_rlu.c	/^typedef struct rlu_tree {$/;"	s	file:
rlu_tree	tree_rlu.c	/^typedef struct rlu_tree {$/;"	s	file:
rlu_tree_t	tree_citrus_rlu.c	/^} rlu_tree_t;$/;"	t	typeref:struct:rlu_tree	file:
rlu_tree_t	tree_rlu.c	/^} rlu_tree_t;$/;"	t	typeref:struct:rlu_tree	file:
rlu_try_acquire_writer_lock	rlu.c	/^static int rlu_try_acquire_writer_lock(rlu_thread_data_t *self, long writer_lock_id) {$/;"	f	typeref:typename:int	file:
rlu_try_lock	rlu.c	/^int rlu_try_lock(rlu_thread_data_t *self, intptr_t **p_p_obj, size_t obj_size) {$/;"	f	typeref:typename:int
rlu_try_writer_lock	rlu.c	/^int rlu_try_writer_lock(rlu_thread_data_t *self, int writer_lock_id) {$/;"	f	typeref:typename:int
rlu_unlock_objs	rlu.c	/^static void rlu_unlock_objs(rlu_thread_data_t *self, int ws_counter) {$/;"	f	typeref:typename:void	file:
rlu_unregister_thread	rlu.c	/^static void rlu_unregister_thread(rlu_thread_data_t *self) {$/;"	f	typeref:typename:void	file:
rlu_wait_for_quiescence	rlu.c	/^static long rlu_wait_for_quiescence(rlu_thread_data_t *self, unsigned long version_limit)$/;"	f	typeref:typename:long	file:
rlu_writeback_write_set	rlu.c	/^static void rlu_writeback_write_set(rlu_thread_data_t *self, long ws_counter) {$/;"	f	typeref:typename:void	file:
rlu_writeback_write_sets_and_unlock	rlu.c	/^static int rlu_writeback_write_sets_and_unlock(rlu_thread_data_t *self) {$/;"	f	typeref:typename:int	file:
rlu_ws_obj_header	rlu.h	/^typedef struct rlu_ws_obj_header {$/;"	s
rlu_ws_obj_header_t	rlu.h	/^} rlu_ws_obj_header_t;$/;"	t	typeref:struct:rlu_ws_obj_header
rol32	zipf/hash.h	/^static inline uint32_t rol32(uint32_t word, uint32_t shift)$/;"	f	typeref:typename:uint32_t
rollback_next_ptr	swisstm/src/dynamic/memory/memory_impl.h	/^		unsigned rollback_next_ptr;$/;"	m	struct:wlpdstm::PtrBufferT	typeref:typename:unsigned
rollback_next_ptr	swisstm/src/dynamic/memory/memory_impl_priv.h	/^	unsigned rollback_next_ptr;$/;"	m	struct:wlpdstm::PtrBufferT	typeref:typename:unsigned
rollback_next_ptr	swisstm/src/epochstm/memory/memory_txend.h	/^	unsigned rollback_next_ptr;$/;"	m	struct:wlpdstm::PtrBufferT	typeref:typename:unsigned
rollback_next_ptr	swisstm/src/p-tlrw/memory/memory_txend.h	/^	unsigned rollback_next_ptr;$/;"	m	struct:wlpdstm::PtrBufferT	typeref:typename:unsigned
rollback_next_ptr	swisstm/src/rw/memory/memory_txend.h	/^	unsigned rollback_next_ptr;$/;"	m	struct:wlpdstm::PtrBufferT	typeref:typename:unsigned
rollback_next_ptr	swisstm/src/stm/memory/memory_impl.h	/^		unsigned rollback_next_ptr;$/;"	m	struct:wlpdstm::PtrBufferT	typeref:typename:unsigned
rollback_next_ptr	swisstm/src/stm/memory/memory_impl_priv.h	/^	unsigned rollback_next_ptr;$/;"	m	struct:wlpdstm::PtrBufferT	typeref:typename:unsigned
rollback_next_ptr	swisstm/src/tlrw/memory/memory_txend.h	/^	unsigned rollback_next_ptr;$/;"	m	struct:wlpdstm::PtrBufferT	typeref:typename:unsigned
rollback_running_fun	swisstm/src/dynamic/transaction.h	/^			RollbackRunningFunPtr rollback_running_fun;$/;"	m	class:wlpdstm::TransactionDynamic	typeref:typename:RollbackRunningFunPtr
rolled_back	swisstm/src/dynamic/transaction.h	/^			bool rolled_back;$/;"	m	class:wlpdstm::TransactionDynamic	typeref:typename:bool
rolled_back	swisstm/src/stm/transaction_mixinv.h	/^		bool rolled_back;$/;"	m	class:wlpdstm::TxMixinv	typeref:typename:bool
root	swisstm/src/mubench/rbtree.h	/^    node_t* root;$/;"	m	struct:rbtree	typeref:typename:node_t *
root	tree_bonsai.c	/^	node_t *root;$/;"	m	struct:bonsai_tree	typeref:typename:node_t *	file:
root	tree_citrus_rlu.c	/^	node_t *root;$/;"	m	struct:rlu_tree	typeref:typename:node_t *	file:
root	tree_prcu.c	/^	node_t *root;$/;"	m	struct:prcu_tree	typeref:typename:node_t *	file:
root	tree_rcu.c	/^	node_t *root;$/;"	m	struct:rcu_tree	typeref:typename:node_t *	file:
root	tree_rlu.c	/^	node_t *root;$/;"	m	struct:rlu_tree	typeref:typename:node_t *	file:
root	tree_vrbtree.c	/^	node_t *root;$/;"	m	struct:vtree_tree	typeref:typename:node_t *	file:
root	tree_vtree.c	/^	node_t *root;$/;"	m	struct:vtree_tree	typeref:typename:node_t *	file:
rot_left	tree_vrbtree.c	/^rot_left(node_t *root, node_t *nodeA, vtree_slot_t *slotA, vtree_pthread_data_t *vtree_data)$/;"	f	typeref:typename:void	file:
rot_left_init	tree_vrbtree.c	/^rot_left_init(node_t *root, node_t *nodeA, vtree_slot_t *slotA)$/;"	f	typeref:typename:void	file:
rot_right	tree_vrbtree.c	/^rot_right(node_t *root, node_t *nodeA, vtree_slot_t *slotA, vtree_pthread_data_t *vtree_data)$/;"	f	typeref:typename:void	file:
rot_right_init	tree_vrbtree.c	/^rot_right_init(node_t *root, node_t *nodeA, vtree_slot_t *slotA)$/;"	f	typeref:typename:void	file:
rotateLeft	swisstm/src/mubench/rbtree.c	/^rotateLeft (rbtree_t* s, node_t* x )$/;"	f	typeref:typename:void	file:
rotateRight	swisstm/src/mubench/rbtree.c	/^rotateRight (rbtree_t* s, node_t* x)$/;"	f	typeref:typename:void	file:
run_counter	rlu.h	/^	volatile unsigned long run_counter;$/;"	m	struct:rlu_thread_data	typeref:typename:volatile unsigned long
run_counter	rlu.h	/^	volatile unsigned long run_counter;$/;"	m	struct:rlu_ws_obj_header	typeref:typename:volatile unsigned long
run_counter	rlu.h	/^	volatile unsigned long run_counter;$/;"	m	struct:wait_entry	typeref:typename:volatile unsigned long
run_test	run_tests.py	/^def run_test(runs_per_test, alg_type, cmd):$/;"	f
runs_per_test	config-list.json	/^                        "runs_per_test": 1,$/;"	n	object:list10k.0
runs_per_test	config-list.json	/^                        "runs_per_test": 1,$/;"	n	object:list1k.0
runs_per_test	config-list.json	/^                        "runs_per_test": 1,$/;"	n	object:list50k.0
runs_per_test	config-tree.json	/^                        "runs_per_test": 1,$/;"	n	object:tree10k.0
runs_per_test	config.json	/^                        "runs_per_test": 1,$/;"	n	object:tree10k-aug10.0
runs_per_test	list.json	/^                        "runs_per_test": 1,$/;"	n	object:list100k.0
runs_per_test	list.json	/^                        "runs_per_test": 1,$/;"	n	object:list10k.0
runs_per_test	list.json	/^                        "runs_per_test": 1,$/;"	n	object:list1k.0
s1	zipf/rand.h	/^	uint64_t s1, s2, s3, s4, s5;$/;"	m	struct:taus258_state	typeref:typename:uint64_t
s1	zipf/rand.h	/^	unsigned int s1, s2, s3;$/;"	m	struct:taus88_state	typeref:typename:unsigned int
s2	zipf/rand.h	/^	uint64_t s1, s2, s3, s4, s5;$/;"	m	struct:taus258_state	typeref:typename:uint64_t
s2	zipf/rand.h	/^	unsigned int s1, s2, s3;$/;"	m	struct:taus88_state	typeref:typename:unsigned int
s3	zipf/rand.h	/^	uint64_t s1, s2, s3, s4, s5;$/;"	m	struct:taus258_state	typeref:typename:uint64_t
s3	zipf/rand.h	/^	unsigned int s1, s2, s3;$/;"	m	struct:taus88_state	typeref:typename:unsigned int
s4	zipf/rand.h	/^	uint64_t s1, s2, s3, s4, s5;$/;"	m	struct:taus258_state	typeref:typename:uint64_t
s5	zipf/rand.h	/^	uint64_t s1, s2, s3, s4, s5;$/;"	m	struct:taus258_state	typeref:typename:uint64_t
sample	swisstm/src/common/sampling.h	/^			bool sample;$/;"	m	class:wlpdstm::Sampling	typeref:typename:bool
sampling	swisstm/src/common/profiling/simple.h	/^			RandomTxSampling sampling;$/;"	m	class:wlpdstm::SimpleProfiling	typeref:typename:RandomTxSampling
sampling	swisstm/src/common/sampling.h	/^			bool sampling;$/;"	m	class:wlpdstm::RandomTxSampling	typeref:typename:bool
sampling_period	swisstm/src/common/profiling/adaptive.h	/^            uint32_t sampling_period;$/;"	m	class:wlpdstm::AdaptiveProfiling	typeref:typename:uint32_t
sampling_period	swisstm/src/common/profiling/non_tx_duration.h	/^            uint32_t sampling_period;$/;"	m	class:wlpdstm::NonTxDurationProfiling	typeref:typename:uint32_t
sampling_period	swisstm/src/common/profiling/tx_duration.h	/^            uint32_t sampling_period;$/;"	m	class:wlpdstm::TxDurationProfiling	typeref:typename:uint32_t
sampling_period	swisstm/src/dynamic/profiling/adaptive_dynamic.h	/^            uint32_t sampling_period;$/;"	m	class:wlpdstm::AdaptiveDynamicProfiling	typeref:typename:uint32_t
seed	benchmark_list.h	/^	unsigned int seed;$/;"	m	struct:pthread_data	typeref:typename:unsigned int
seed	benchmark_list_move.h	/^	unsigned int seed;$/;"	m	struct:pthread_data	typeref:typename:unsigned int
seed	swisstm/src/common/random.h	/^			unsigned seed;$/;"	m	class:wlpdstm::Random	typeref:typename:unsigned
seed	swisstm/src/mubench/intset-list-mv.c	/^  unsigned int seed;$/;"	m	struct:thread_data	typeref:typename:unsigned int	file:
seed	swisstm/src/mubench/intset.c	/^  unsigned int seed;$/;"	m	struct:thread_data	typeref:typename:unsigned int	file:
set	swisstm/src/common/perfcnt/perf_cnt_solaris.h	/^			cpc_set_t *set;$/;"	m	class:wlpdstm::PerfCntSolaris	typeref:typename:cpc_set_t *
set	swisstm/src/mubench/intset-list-mv.c	/^  intset_t *set;$/;"	m	struct:thread_data	typeref:typename:intset_t *	file:
set	swisstm/src/mubench/intset.c	/^  intset_t *set;$/;"	m	struct:thread_data	typeref:typename:intset_t *	file:
setColor	swisstm/src/mubench/rbtree.c	/^setColor (node_t* n, int c)$/;"	f	typeref:typename:void	file:
setNonMinimumTs	swisstm/src/stm/privatization_tree.h	/^inline void wlpdstm::PrivatizationTree::setNonMinimumTs(Word ts) {$/;"	f	class:wlpdstm::PrivatizationTree	typeref:typename:void
setValue	swisstm/src/common/atomic.h	/^			void setValue(T newval) {$/;"	f	class:wlpdstm::AtomicVariable	typeref:typename:void
set_add	swisstm/src/mubench/intset.c	/^int set_add(intset_t *set, int val)$/;"	f	typeref:typename:int
set_add	swisstm/src/mubench/intset.c	/^int set_add(intset_t *set, int val, tx_desc *tx)$/;"	f	typeref:typename:int
set_add	swisstm/src/mubench/intset.c	/^int set_add(intset_t *set, intptr_t val)$/;"	f	typeref:typename:int
set_add	swisstm/src/mubench/intset.c	/^int set_add(intset_t *set, intptr_t val, tx_desc *tx)$/;"	f	typeref:typename:int
set_add_seq	swisstm/src/mubench/intset-list-mv.c	/^int set_add_seq(intset_t *set, int val, int head)$/;"	f	typeref:typename:int
set_add_seq	swisstm/src/mubench/intset.c	/^int set_add_seq(intset_t *set, int val)$/;"	f	typeref:typename:int
set_add_seq	swisstm/src/mubench/intset.c	/^int set_add_seq(intset_t *set, intptr_t val) {$/;"	f	typeref:typename:int
set_bit	list_rcu.c	/^static inline void set_bit(int nr, volatile unsigned long *addr)$/;"	f	typeref:typename:void	file:
set_bit	tree_bonsai.c	/^static inline void set_bit(int nr, volatile unsigned long *addr)$/;"	f	typeref:typename:void	file:
set_bit	tree_prcu.c	/^static inline void set_bit(int nr, volatile unsigned long *addr)$/;"	f	typeref:typename:void	file:
set_bit	tree_rcu.c	/^static inline void set_bit(int nr, volatile unsigned long *addr)$/;"	f	typeref:typename:void	file:
set_contains	swisstm/src/mubench/intset.c	/^int set_contains(intset_t *set, int val)$/;"	f	typeref:typename:int
set_contains	swisstm/src/mubench/intset.c	/^int set_contains(intset_t *set, int val, tx_desc *tx)$/;"	f	typeref:typename:int
set_contains	swisstm/src/mubench/intset.c	/^int set_contains(intset_t *set, intptr_t val)$/;"	f	typeref:typename:int
set_contains	swisstm/src/mubench/intset.c	/^int set_contains(intset_t *set, intptr_t val, tx_desc *tx)$/;"	f	typeref:typename:int
set_delete	swisstm/src/mubench/intset.c	/^void set_delete(intset_t *set)$/;"	f	typeref:typename:void
set_fun_ptr_table	swisstm/src/dynamic/transaction.cc	/^wlpdstm::TransactionDynamic::SetFunPtr wlpdstm::TransactionDynamic::set_fun_ptr_table[TM_IMPLEME/;"	m	class:wlpdstm::TransactionDynamic	typeref:typename:wlpdstm::TransactionDynamic::SetFunPtr[]
set_fun_ptr_table	swisstm/src/dynamic/transaction.h	/^			static SetFunPtr set_fun_ptr_table[TM_IMPLEMENTATION_VARIANT_COUNT];$/;"	m	class:wlpdstm::TransactionDynamic	typeref:typename:SetFunPtr[]
set_move	swisstm/src/mubench/intset-list-mv.c	/^int set_move(intset_t *set, int val, int from, tx_desc *tx)$/;"	f	typeref:typename:int
set_new	swisstm/src/mubench/intset-list-mv.c	/^intset_t *set_new()$/;"	f	typeref:typename:intset_t *
set_new	swisstm/src/mubench/intset.c	/^intset_t *set_new()$/;"	f	typeref:typename:intset_t *
set_node_black	tree_vrbtree.c	/^#define set_node_black(/;"	d	file:
set_node_red	tree_vrbtree.c	/^#define set_node_red(/;"	d	file:
set_remove	swisstm/src/mubench/intset.c	/^int set_remove(intset_t *set, int val)$/;"	f	typeref:typename:int
set_remove	swisstm/src/mubench/intset.c	/^int set_remove(intset_t *set, int val, tx_desc *tx)$/;"	f	typeref:typename:int
set_remove	swisstm/src/mubench/intset.c	/^int set_remove(intset_t *set, intptr_t val)$/;"	f	typeref:typename:int
set_remove	swisstm/src/mubench/intset.c	/^int set_remove(intset_t *set, intptr_t val, tx_desc *tx)$/;"	f	typeref:typename:int
set_size	swisstm/src/mubench/intset.c	/^int set_size(intset_t *set)$/;"	f	typeref:typename:int
shared_rand_init	zipf/zipf.c	/^static void shared_rand_init(struct zipf_state *zs, unsigned long nranges,$/;"	f	typeref:typename:void	file:
should_sample	swisstm/src/common/sampling.h	/^			bool should_sample() {$/;"	f	class:wlpdstm::Sampling	typeref:typename:bool
signaling_array	swisstm/src/stm/transaction_mixinv.cc	/^CACHE_LINE_ALIGNED volatile wlpdstm::PaddedWord wlpdstm::TxMixinv::signaling_array[MAX_THREADS];$/;"	m	class:wlpdstm::TxMixinv	typeref:typename:CACHE_LINE_ALIGNED volatile wlpdstm::PaddedWord[]
signaling_array	swisstm/src/stm/transaction_mixinv.h	/^		static volatile PaddedWord signaling_array[MAX_THREADS];$/;"	m	class:wlpdstm::TxMixinv	typeref:typename:volatile PaddedWord[]
signals	swisstm/src/stm/transaction_mixinv.h	/^		volatile Word *signals;$/;"	m	class:wlpdstm::TxMixinv	typeref:typename:volatile Word *
size	rlu.h	/^	long size;$/;"	m	struct:writer_locks	typeref:typename:long
size	swisstm/src/common/log.h	/^					unsigned size;$/;"	m	class:wlpdstm::Log::iterator	typeref:typename:unsigned
size	swisstm/src/common/log.h	/^			unsigned size;$/;"	m	class:wlpdstm::Log	typeref:typename:unsigned
size	swisstm/src/tanger/tanger_stack_area.h	/^		size_t size;$/;"	m	class:wlpdstm::StackArea	typeref:typename:size_t
size	tree_bonsai.c	/^	unsigned int size;$/;"	m	struct:node	typeref:typename:unsigned int	file:
sleep_ns	swisstm/src/common/timing.h	/^inline void sleep_ns(uint64_t ns) {$/;"	f	typeref:typename:void
slot_next	list_move_vlist.c	/^	struct vlist_slot *slot_next;$/;"	m	struct:vlist_slot	typeref:struct:vlist_slot *	file:
slot_next	list_vlist.c	/^	struct vlist_slot *slot_next;$/;"	m	struct:vlist_slot	typeref:struct:vlist_slot *	file:
slot_next	tree_vrbtree.c	/^	struct vtree_slot *slot_next;$/;"	m	struct:vtree_slot	typeref:struct:vtree_slot *	file:
slot_next	tree_vtree.c	/^	struct vtree_slot *slot_next;$/;"	m	struct:vtree_slot	typeref:struct:vtree_slot *	file:
slots	list_move_vlist.c	/^	struct vlist_slot *slots[VLIST_ENTRIES_PER_TASK];$/;"	m	struct:vlist_record	typeref:struct:vlist_slot * []	file:
slots	list_move_vlist.c	/^	vlist_slot_t *slots;$/;"	m	struct:node	typeref:typename:vlist_slot_t *	file:
slots	list_vlist.c	/^	struct vlist_slot *slots[VLIST_ENTRIES_PER_TASK];$/;"	m	struct:vlist_record	typeref:struct:vlist_slot * []	file:
slots	list_vlist.c	/^	vlist_slot_t *slots;$/;"	m	struct:node	typeref:typename:vlist_slot_t *	file:
slots	tree_vrbtree.c	/^	struct vtree_slot *slots[VTREE_ENTRIES_PER_TASK];$/;"	m	struct:vtree_record	typeref:struct:vtree_slot * []	file:
slots	tree_vrbtree.c	/^	vtree_slot_t *slots;$/;"	m	struct:node	typeref:typename:vtree_slot_t *	file:
slots	tree_vtree.c	/^	struct vtree_slot *slots[VTREE_ENTRIES_PER_TASK];$/;"	m	struct:vtree_record	typeref:struct:vtree_slot * []	file:
slots	tree_vtree.c	/^	vtree_slot_t *slots;$/;"	m	struct:node	typeref:typename:vtree_slot_t *	file:
smp_swap	rlu.c	/^#define smp_swap(/;"	d	file:
smp_wmb	tree_bonsai.c	/^#define smp_wmb(/;"	d	file:
spin_loop_backoff	swisstm/src/p-tlrw/transaction.h	/^			SpinLoopBackoff spin_loop_backoff;$/;"	m	class:wlpdstm::TransactionTlrw	typeref:typename:SpinLoopBackoff
spinlock	list_move_spinlock.c	/^	pthread_spinlock_t spinlock;$/;"	m	struct:spinlock_list	typeref:typename:pthread_spinlock_t	file:
spinlock	list_rcu.c	/^	pthread_spinlock_t spinlock;$/;"	m	struct:rcu_list	typeref:typename:pthread_spinlock_t	file:
spinlock	list_spinlock.c	/^	pthread_spinlock_t spinlock;$/;"	m	struct:spinlock_list	typeref:typename:pthread_spinlock_t	file:
spinlock	tree_bonsai.c	/^	pthread_spinlock_t spinlock;$/;"	m	struct:bonsai_tree	typeref:typename:pthread_spinlock_t	file:
spinlock_list	list_move_spinlock.c	/^typedef struct spinlock_list {$/;"	s	file:
spinlock_list	list_spinlock.c	/^typedef struct spinlock_list {$/;"	s	file:
spinlock_list_t	list_move_spinlock.c	/^} spinlock_list_t;$/;"	t	typeref:struct:spinlock_list	file:
spinlock_list_t	list_spinlock.c	/^} spinlock_list_t;$/;"	t	typeref:struct:spinlock_list	file:
stack_high	swisstm/src/dynamic/transaction.h	/^			uintptr_t stack_high;$/;"	m	class:wlpdstm::TransactionDynamic	typeref:typename:uintptr_t
stack_high	swisstm/src/stm/transaction_mixinv.h	/^		uintptr_t stack_high;$/;"	m	class:wlpdstm::TxMixinv	typeref:typename:uintptr_t
start_barrier	swisstm/src/mubench/rbforest.cc	/^    barrier_t *start_barrier;$/;"	m	struct:thread_data_t	typeref:typename:barrier_t *	file:
start_buf	swisstm/src/dynamic/transaction.h	/^				LONG_JMP_BUF start_buf;$/;"	m	union:wlpdstm::TransactionDynamic::__anonc8737335010a	typeref:typename:LONG_JMP_BUF
start_buf	swisstm/src/epochstm/transaction.h	/^				LONG_JMP_BUF start_buf;$/;"	m	union:wlpdstm::TransactionEpoch::__anon706747f3050a	typeref:typename:LONG_JMP_BUF
start_buf	swisstm/src/p-tlrw/transaction.h	/^				LONG_JMP_BUF start_buf;$/;"	m	union:wlpdstm::TransactionTlrw::__anon7ebeeeb6020a	typeref:typename:LONG_JMP_BUF
start_buf	swisstm/src/rw/transaction.h	/^				LONG_JMP_BUF start_buf;$/;"	m	union:wlpdstm::TransactionRw::__anona85c20f9010a	typeref:typename:LONG_JMP_BUF
start_buf	swisstm/src/stm/transaction_mixinv.h	/^			LONG_JMP_BUF start_buf;$/;"	m	union:wlpdstm::TxMixinv::__anon87a360de010a	typeref:typename:LONG_JMP_BUF
start_buf	swisstm/src/tlrw/transaction.h	/^				LONG_JMP_BUF start_buf;$/;"	m	union:wlpdstm::TransactionTlrw::__anoncf01a599020a	typeref:typename:LONG_JMP_BUF
start_count	swisstm/src/dynamic/transaction.h	/^			unsigned start_count;$/;"	m	class:wlpdstm::TransactionDynamic	typeref:typename:unsigned
start_count	swisstm/src/stm/transaction_mixinv.h	/^		unsigned start_count;$/;"	m	class:wlpdstm::TxMixinv	typeref:typename:unsigned
start_measurement	swisstm/src/common/energy.h	/^inline void wlpdstm::Energy::start_measurement() {$/;"	f	class:wlpdstm::Energy	typeref:typename:void
start_orec	swisstm/src/epochstm/transaction.h	/^				OwnershipRecord *start_orec;$/;"	m	struct:wlpdstm::TransactionEpoch::__anon706747f30408	typeref:typename:OwnershipRecord *
start_touched_orec_idx	swisstm/src/epochstm/transaction.h	/^				unsigned start_touched_orec_idx;$/;"	m	struct:wlpdstm::TransactionEpoch::__anon706747f30408	typeref:typename:unsigned
stat_counts	swisstm/src/common/stats_base.h	/^		uint64_t stat_counts[COUNT];$/;"	m	class:wlpdstm::StatsBase	typeref:typename:uint64_t[]
state	swisstm/src/common/atomic.h	/^				volatile Word state;$/;"	m	union:wlpdstm::PaddedSpinTryLock::__anonca9151d0010a	typeref:typename:volatile Word
state32	zipf/rand.h	/^		struct taus88_state state32;$/;"	m	union:frand_state::__anon6d907ae8010a	typeref:struct:taus88_state
state64	zipf/rand.h	/^		struct taus258_state state64;$/;"	m	union:frand_state::__anon6d907ae8010a	typeref:struct:taus258_state
stats	swisstm/src/common/profiling/adaptive.h	/^			STATS *stats;$/;"	m	class:wlpdstm::AdaptiveProfiling	typeref:typename:STATS *
stats	swisstm/src/common/profiling/non_tx_duration.h	/^			STATS *stats;$/;"	m	class:wlpdstm::NonTxDurationProfiling	typeref:typename:STATS *
stats	swisstm/src/common/profiling/non_tx_duration_pcnt_simple.h	/^			STATS *stats;$/;"	m	class:wlpdstm::NonTxDurationPcntProfilingSimple	typeref:typename:STATS *
stats	swisstm/src/common/profiling/non_tx_duration_simple.h	/^			STATS *stats;$/;"	m	class:wlpdstm::NonTxDurationProfilingSimple	typeref:typename:STATS *
stats	swisstm/src/common/profiling/simple.h	/^			STATS *stats;$/;"	m	class:wlpdstm::SimpleProfiling	typeref:typename:STATS *
stats	swisstm/src/common/profiling/tx_duration.h	/^			STATS *stats;$/;"	m	class:wlpdstm::TxDurationProfiling	typeref:typename:STATS *
stats	swisstm/src/common/stats_base.h	/^		Statistics *stats[TX_TYPES];$/;"	m	struct:wlpdstm::ThreadStatsBase	typeref:typename:Statistics * []
stats	swisstm/src/dynamic/memory/memory_impl.h	/^			ThreadStatistics *stats;$/;"	m	class:wlpdstm::MemoryManager	typeref:typename:ThreadStatistics *
stats	swisstm/src/dynamic/memory/memory_impl_priv.h	/^	ThreadStatistics *stats;$/;"	m	class:wlpdstm::MemoryManager	typeref:typename:ThreadStatistics *
stats	swisstm/src/dynamic/profiling/adaptive_dynamic.h	/^			STATS *stats;$/;"	m	class:wlpdstm::AdaptiveDynamicProfiling	typeref:typename:STATS *
stats	swisstm/src/dynamic/transaction.h	/^			ThreadStatistics stats;$/;"	m	class:wlpdstm::TransactionDynamic	typeref:typename:ThreadStatistics
stats	swisstm/src/epochstm/transaction.h	/^				unsigned stats[ROWS][STATS_ARRAY_COLS];$/;"	m	struct:wlpdstm::TransactionEpoch::OrecTableStatsArray	typeref:typename:unsigned[][]
stats	swisstm/src/epochstm/transaction.h	/^			ThreadStatistics stats;$/;"	m	class:wlpdstm::TransactionEpoch	typeref:typename:ThreadStatistics
stats	swisstm/src/p-tlrw/transaction.h	/^			ThreadStatistics stats;$/;"	m	class:wlpdstm::TransactionTlrw	typeref:typename:ThreadStatistics
stats	swisstm/src/rw/transaction.h	/^			ThreadStatistics stats;$/;"	m	class:wlpdstm::TransactionRw	typeref:typename:ThreadStatistics
stats	swisstm/src/stm/memory/memory_impl.h	/^			ThreadStatistics *stats;$/;"	m	class:wlpdstm::MemoryManager	typeref:typename:ThreadStatistics *
stats	swisstm/src/stm/memory/memory_impl_priv.h	/^	ThreadStatistics *stats;$/;"	m	class:wlpdstm::MemoryManager	typeref:typename:ThreadStatistics *
stats	swisstm/src/stm/transaction_mixinv.h	/^		ThreadStatistics stats;$/;"	m	class:wlpdstm::TxMixinv	typeref:typename:ThreadStatistics
stats	swisstm/src/tlrw/transaction.h	/^			ThreadStatistics stats;$/;"	m	class:wlpdstm::TransactionTlrw	typeref:typename:ThreadStatistics
status	run_tests.py	/^            status = subprocess.check_output(cmd, shell=True)$/;"	v
status	run_tests.py	/^        status = subprocess.check_output(cmd, shell=True)$/;"	v
stop	benchmark_list.c	/^static volatile int stop;$/;"	v	typeref:typename:volatile int	file:
stop	benchmark_list_move.c	/^static volatile int stop;$/;"	v	typeref:typename:volatile int	file:
stop	swisstm/src/mubench/intset-list-mv.c	/^static volatile AO_t stop;$/;"	v	typeref:typename:volatile AO_t	file:
stop	swisstm/src/mubench/intset-list-mv.c	/^static volatile int stop;$/;"	v	typeref:typename:volatile int	file:
stop	swisstm/src/mubench/intset.c	/^static volatile AO_t stop;$/;"	v	typeref:typename:volatile AO_t	file:
stop	swisstm/src/mubench/intset.c	/^static volatile int stop;$/;"	v	typeref:typename:volatile int	file:
str_to_int	swisstm/src/common/configuration.h	/^inline int wlpdstm::Config::str_to_int(std::string str) {$/;"	f	class:wlpdstm::Config	typeref:typename:int
strcmp_tx	swisstm/src/stm_api/read_write.h	/^inline int wlpdstm::strcmp_tx(Transaction *tx, const char *str_1, const char *str_2) {$/;"	f	class:wlpdstm	typeref:typename:int
strncmp_tx	swisstm/src/stm_api/read_write.h	/^inline int wlpdstm::strncmp_tx(Transaction *tx, const char *str_1, const char *str_2, size_t n) /;"	f	class:wlpdstm	typeref:typename:int
succ_aborts	swisstm/src/dynamic/transaction.h	/^			unsigned succ_aborts;$/;"	m	class:wlpdstm::TransactionDynamic	typeref:typename:unsigned
succ_aborts	swisstm/src/epochstm/transaction.h	/^			unsigned succ_aborts;$/;"	m	class:wlpdstm::TransactionEpoch	typeref:typename:unsigned
succ_aborts	swisstm/src/p-tlrw/transaction.h	/^			unsigned succ_aborts;$/;"	m	class:wlpdstm::TransactionTlrw	typeref:typename:unsigned
succ_aborts	swisstm/src/rw/transaction.h	/^			unsigned succ_aborts;$/;"	m	class:wlpdstm::TransactionRw	typeref:typename:unsigned
succ_aborts	swisstm/src/stm/transaction_mixinv.h	/^		unsigned succ_aborts;$/;"	m	class:wlpdstm::TxMixinv	typeref:typename:unsigned
succ_aborts	swisstm/src/tlrw/transaction.h	/^			unsigned succ_aborts;$/;"	m	class:wlpdstm::TransactionTlrw	typeref:typename:unsigned
successor	swisstm/src/mubench/rbtree.c	/^successor (node_t* t)$/;"	f	typeref:typename:node_t *	file:
sync_data	list_rcu.c	/^	struct rcu_pthread_data **sync_data;$/;"	m	struct:rcu_pthread_data	typeref:struct:rcu_pthread_data **	file:
sync_data	tree_bonsai.c	/^	struct rcu_pthread_data **sync_data;$/;"	m	struct:rcu_pthread_data	typeref:struct:rcu_pthread_data **	file:
sync_data	tree_prcu.c	/^	struct prcu_pthread_data **sync_data;$/;"	m	struct:prcu_pthread_data	typeref:struct:prcu_pthread_data **	file:
sync_data	tree_rcu.c	/^	struct rcu_pthread_data **sync_data;$/;"	m	struct:rcu_pthread_data	typeref:struct:rcu_pthread_data **	file:
sync_time	list_rcu.c	/^	unsigned long *sync_time;$/;"	m	struct:rcu_pthread_data	typeref:typename:unsigned long *	file:
sync_time	tree_bonsai.c	/^	unsigned long *sync_time;$/;"	m	struct:rcu_pthread_data	typeref:typename:unsigned long *	file:
sync_time	tree_rcu.c	/^	unsigned long *sync_time;$/;"	m	struct:rcu_pthread_data	typeref:typename:unsigned long *	file:
synchronization_in_progress	swisstm/src/dynamic/transaction.cc	/^CACHE_LINE_ALIGNED wlpdstm::PaddedBool wlpdstm::TransactionDynamic::synchronization_in_progress;$/;"	m	class:wlpdstm::TransactionDynamic	typeref:typename:CACHE_LINE_ALIGNED wlpdstm::PaddedBool
synchronization_in_progress	swisstm/src/dynamic/transaction.h	/^			static PaddedBool synchronization_in_progress;$/;"	m	class:wlpdstm::TransactionDynamic	typeref:typename:PaddedBool
synchronization_in_progress	swisstm/src/stm/transaction_mixinv.cc	/^CACHE_LINE_ALIGNED wlpdstm::PaddedBool wlpdstm::TxMixinv::synchronization_in_progress;$/;"	m	class:wlpdstm::TxMixinv	typeref:typename:CACHE_LINE_ALIGNED wlpdstm::PaddedBool
synchronization_in_progress	swisstm/src/stm/transaction_mixinv.h	/^		static PaddedBool synchronization_in_progress;$/;"	m	class:wlpdstm::TxMixinv	typeref:typename:PaddedBool
t_begin	rlu.h	/^	ticks t_begin;$/;"	m	struct:rlu_thread_data	typeref:typename:ticks
t_blocking_spent	rlu.c	/^	volatile ticks t_blocking_spent;$/;"	m	struct:rlu_data	typeref:typename:volatile ticks	file:
t_blocking_spent	rlu.h	/^	ticks t_blocking_spent;$/;"	m	struct:rlu_thread_data	typeref:typename:ticks
t_end	rlu.h	/^	ticks t_end;$/;"	m	struct:rlu_thread_data	typeref:typename:ticks
t_writeback_spent	rlu.c	/^	volatile ticks t_writeback_spent;$/;"	m	struct:rlu_data	typeref:typename:volatile ticks	file:
t_writeback_spent	rlu.h	/^	ticks t_writeback_spent;$/;"	m	struct:rlu_thread_data	typeref:typename:ticks
table	swisstm/src/dynamic/lazy/hashtable.h	/^			VAL *table[SIZE];$/;"	m	class:wlpdstm::Hashtable	typeref:typename:VAL * []
table	swisstm/src/stm/large_lock_set.h	/^			uint32_t table[SIZE];$/;"	m	class:wlpdstm::LargeLockSet	typeref:typename:uint32_t[]
tag	tree_prcu.c	/^	int tag[2];$/;"	m	struct:node	typeref:typename:int[2]	file:
tag	tree_rcu.c	/^	int tag[2];$/;"	m	struct:node	typeref:typename:int[2]	file:
tail	swisstm/src/common/log.h	/^			Node *tail;$/;"	m	class:wlpdstm::Log	typeref:typename:Node *
tanger_stm_begin	swisstm/src/tanger/tanger.cc	/^void tanger_stm_begin(tanger_stm_tx_t* tx) {$/;"	f	typeref:typename:void
tanger_stm_calloc	swisstm/src/tanger/tanger.cc	/^void *tanger_stm_calloc(size_t nmemb, size_t size, tanger_stm_tx_t* tx) {$/;"	f	typeref:typename:void *
tanger_stm_commit	swisstm/src/tanger/tanger.cc	/^void tanger_stm_commit(tanger_stm_tx_t* tx) {$/;"	f	typeref:typename:void
tanger_stm_free	swisstm/src/tanger/tanger.cc	/^void tanger_stm_free(void *ptr, tanger_stm_tx_t* tx) {$/;"	f	typeref:typename:void
tanger_stm_get_jmpbuf	swisstm/src/tanger/tanger.cc	/^void* tanger_stm_get_jmpbuf(tanger_stm_tx_t* tx) {$/;"	f	typeref:typename:void *
tanger_stm_get_tx	swisstm/src/tanger/tanger.cc	/^tanger_stm_tx_t* tanger_stm_get_tx() {$/;"	f	typeref:typename:tanger_stm_tx_t *
tanger_stm_init	swisstm/src/tanger/tanger.cc	/^void tanger_stm_init() {$/;"	f	typeref:typename:void
tanger_stm_load1	swisstm/src/tanger/tanger.cc	/^uint8_t tanger_stm_load1(tanger_stm_tx_t* tx, uint8_t *addr) {$/;"	f	typeref:typename:uint8_t
tanger_stm_load16	swisstm/src/tanger/tanger.cc	/^uint16_t tanger_stm_load16(tanger_stm_tx_t* tx, uint16_t *addr) {$/;"	f	typeref:typename:uint16_t
tanger_stm_load16aligned	swisstm/src/tanger/tanger.cc	/^uint16_t tanger_stm_load16aligned(tanger_stm_tx_t* tx, uint16_t *addr) {$/;"	f	typeref:typename:uint16_t
tanger_stm_load32	swisstm/src/tanger/tanger.cc	/^uint32_t tanger_stm_load32(tanger_stm_tx_t* tx, uint32_t *addr) {$/;"	f	typeref:typename:uint32_t
tanger_stm_load32aligned	swisstm/src/tanger/tanger.cc	/^uint32_t tanger_stm_load32aligned(tanger_stm_tx_t* tx, uint32_t *addr) {$/;"	f	typeref:typename:uint32_t
tanger_stm_load64	swisstm/src/tanger/tanger.cc	/^uint64_t tanger_stm_load64(tanger_stm_tx_t* tx, uint64_t *addr) {$/;"	f	typeref:typename:uint64_t
tanger_stm_load64aligned	swisstm/src/tanger/tanger.cc	/^uint64_t tanger_stm_load64aligned(tanger_stm_tx_t* tx, uint64_t *addr) {$/;"	f	typeref:typename:uint64_t
tanger_stm_load8	swisstm/src/tanger/tanger.cc	/^uint8_t tanger_stm_load8(tanger_stm_tx_t* tx, uint8_t *addr) {$/;"	f	typeref:typename:uint8_t
tanger_stm_loadregion	swisstm/src/tanger/tanger.cc	/^void tanger_stm_loadregion(tanger_stm_tx_t* tx, uint8_t *src, uintptr_t bytes, uint8_t *dest) {$/;"	f	typeref:typename:void
tanger_stm_loadregionpost	swisstm/src/tanger/tanger.cc	/^void tanger_stm_loadregionpost(tanger_stm_tx_t* tx, uint8_t *addr, uintptr_t bytes) {$/;"	f	typeref:typename:void
tanger_stm_loadregionpre	swisstm/src/tanger/tanger.cc	/^void* tanger_stm_loadregionpre(tanger_stm_tx_t* tx, uint8_t *addr, uintptr_t bytes) {$/;"	f	typeref:typename:void *
tanger_stm_malloc	swisstm/src/tanger/tanger.cc	/^void *tanger_stm_malloc(size_t size, tanger_stm_tx_t* tx) {$/;"	f	typeref:typename:void *
tanger_stm_realloc	swisstm/src/tanger/tanger.cc	/^void *tanger_stm_realloc(void *ptr, size_t size, tanger_stm_tx_t* tx) {$/;"	f	typeref:typename:void *
tanger_stm_save_restore_stack	swisstm/src/tanger/tanger.cc	/^void tanger_stm_save_restore_stack(void* low_addr, void* high_addr) {$/;"	f	typeref:typename:void
tanger_stm_shutdown	swisstm/src/tanger/tanger.cc	/^void tanger_stm_shutdown() {$/;"	f	typeref:typename:void
tanger_stm_std_memcpy	swisstm/src/tanger/tanger_string.cc	/^	extern void *tanger_stm_std_memcpy(void *dest, const void *src, size_t n) {$/;"	f	typeref:typename:void *
tanger_stm_std_memmove	swisstm/src/tanger/tanger_string.cc	/^	extern void *tanger_stm_std_memmove(void *dest, const void *src, size_t n) {$/;"	f	typeref:typename:void *
tanger_stm_std_memset	swisstm/src/tanger/tanger_string.cc	/^	extern void *tanger_stm_std_memset(void *dest, int c, size_t n) {$/;"	f	typeref:typename:void *
tanger_stm_std_qsort	swisstm/src/tanger/tanger_stdlib.cc	/^	extern void tanger_stm_std_qsort(void *base, size_t nel, size_t width,$/;"	f	typeref:typename:void
tanger_stm_std_strcmp	swisstm/src/tanger/tanger_string.cc	/^	extern int tanger_stm_std_strcmp(const char *str1, const char *str2) {$/;"	f	typeref:typename:int
tanger_stm_std_strncmp	swisstm/src/tanger/tanger_string.cc	/^	extern int tanger_stm_std_strncmp(const char *str1, const char *str2, size_t num) {$/;"	f	typeref:typename:int
tanger_stm_store1	swisstm/src/tanger/tanger.cc	/^void tanger_stm_store1(tanger_stm_tx_t* tx, uint8_t *addr, uint8_t value) {$/;"	f	typeref:typename:void
tanger_stm_store16	swisstm/src/tanger/tanger.cc	/^void tanger_stm_store16(tanger_stm_tx_t* tx, uint16_t *addr, uint16_t value) {$/;"	f	typeref:typename:void
tanger_stm_store16aligned	swisstm/src/tanger/tanger.cc	/^void tanger_stm_store16aligned(tanger_stm_tx_t* tx, uint16_t *addr, uint16_t value) {$/;"	f	typeref:typename:void
tanger_stm_store32	swisstm/src/tanger/tanger.cc	/^void tanger_stm_store32(tanger_stm_tx_t* tx, uint32_t *addr, uint32_t value) {$/;"	f	typeref:typename:void
tanger_stm_store32aligned	swisstm/src/tanger/tanger.cc	/^void tanger_stm_store32aligned(tanger_stm_tx_t* tx, uint32_t *addr, uint32_t value) {$/;"	f	typeref:typename:void
tanger_stm_store64	swisstm/src/tanger/tanger.cc	/^void tanger_stm_store64(tanger_stm_tx_t* tx, uint64_t *addr, uint64_t value) {$/;"	f	typeref:typename:void
tanger_stm_store64aligned	swisstm/src/tanger/tanger.cc	/^void tanger_stm_store64aligned(tanger_stm_tx_t* tx, uint64_t *addr, uint64_t value) {$/;"	f	typeref:typename:void
tanger_stm_store8	swisstm/src/tanger/tanger.cc	/^void tanger_stm_store8(tanger_stm_tx_t* tx, uint8_t *addr, uint8_t value) {$/;"	f	typeref:typename:void
tanger_stm_storeregion	swisstm/src/tanger/tanger.cc	/^void tanger_stm_storeregion(tanger_stm_tx_t* tx, uint8_t *src, uintptr_t bytes, uint8_t *dest) {$/;"	f	typeref:typename:void
tanger_stm_storeregionpre	swisstm/src/tanger/tanger.cc	/^void* tanger_stm_storeregionpre(tanger_stm_tx_t* tx, uint8_t *addr, uintptr_t bytes) {$/;"	f	typeref:typename:void *
tanger_stm_thread_init	swisstm/src/tanger/tanger.cc	/^void tanger_stm_thread_init() {$/;"	f	typeref:typename:void
tanger_stm_thread_shutdown	swisstm/src/tanger/tanger.cc	/^void tanger_stm_thread_shutdown() {$/;"	f	typeref:typename:void
tanger_stm_updateregionpre	swisstm/src/tanger/tanger.cc	/^void* tanger_stm_updateregionpre(tanger_stm_tx_t* tx, uint8_t *addr, uintptr_t bytes) {$/;"	f	typeref:typename:void *
taus258_state	zipf/rand.h	/^struct taus258_state {$/;"	s
taus88_state	zipf/rand.h	/^struct taus88_state {$/;"	s
test	swisstm/src/mubench/intset-list-mv.c	/^void *test(void *data)$/;"	f	typeref:typename:void *
test	swisstm/src/mubench/intset.c	/^void *test(void *data)$/;"	f	typeref:typename:void *
theta	zipf/zipf.h	/^	double theta;$/;"	m	struct:zipf_state	typeref:typename:double
threadWait	swisstm/src/mubench/thread.c	/^threadWait (void* argPtr)$/;"	f	typeref:typename:void	file:
thread_barrier	swisstm/src/mubench/thread.c	/^thread_barrier (thread_barrier_t* barrierPtr, long threadId)$/;"	f	typeref:typename:void
thread_barrier	swisstm/src/mubench/thread.h	/^typedef struct thread_barrier {$/;"	s
thread_barrier_alloc	swisstm/src/mubench/thread.c	/^thread_barrier_alloc (long numThread)$/;"	f	typeref:typename:thread_barrier_t *
thread_barrier_free	swisstm/src/mubench/thread.c	/^thread_barrier_free (thread_barrier_t* barrierPtr)$/;"	f	typeref:typename:void
thread_barrier_init	swisstm/src/mubench/thread.c	/^thread_barrier_init (thread_barrier_t* barrierPtr)$/;"	f	typeref:typename:void
thread_barrier_t	swisstm/src/mubench/thread.h	/^} thread_barrier_t;$/;"	t	typeref:struct:thread_barrier
thread_barrier_wait	swisstm/src/mubench/thread.c	/^thread_barrier_wait()$/;"	f	typeref:typename:void
thread_count	swisstm/src/dynamic/transaction.cc	/^Word wlpdstm::TransactionDynamic::thread_count;$/;"	m	class:wlpdstm::TransactionDynamic	typeref:typename:Word
thread_count	swisstm/src/dynamic/transaction.h	/^			static Word thread_count;$/;"	m	class:wlpdstm::TransactionDynamic	typeref:typename:Word
thread_count	swisstm/src/epochstm/transaction.cc	/^CACHE_LINE_ALIGNED wlpdstm::PaddedWord wlpdstm::TransactionEpoch::thread_count;$/;"	m	class:wlpdstm::TransactionEpoch	typeref:typename:CACHE_LINE_ALIGNED wlpdstm::PaddedWord
thread_count	swisstm/src/epochstm/transaction.h	/^		CACHE_LINE_ALIGNED static PaddedWord thread_count;$/;"	m	class:wlpdstm::TransactionEpoch	typeref:typename:CACHE_LINE_ALIGNED PaddedWord
thread_count	swisstm/src/mubench/rbforest.cc	/^    unsigned thread_count;$/;"	m	struct:cmd_line_args_t	typeref:typename:unsigned	file:
thread_count	swisstm/src/p-tlrw/transaction.cc	/^CACHE_LINE_ALIGNED wlpdstm::PaddedWord wlpdstm::TransactionTlrw::thread_count;$/;"	m	class:wlpdstm::TransactionTlrw	typeref:typename:CACHE_LINE_ALIGNED wlpdstm::PaddedWord
thread_count	swisstm/src/p-tlrw/transaction.h	/^		CACHE_LINE_ALIGNED static PaddedWord thread_count;$/;"	m	class:wlpdstm::TransactionTlrw	typeref:typename:CACHE_LINE_ALIGNED PaddedWord
thread_count	swisstm/src/rw/transaction.cc	/^CACHE_LINE_ALIGNED wlpdstm::PaddedWord wlpdstm::TransactionRw::thread_count;$/;"	m	class:wlpdstm::TransactionRw	typeref:typename:CACHE_LINE_ALIGNED wlpdstm::PaddedWord
thread_count	swisstm/src/rw/transaction.h	/^		CACHE_LINE_ALIGNED static PaddedWord thread_count;$/;"	m	class:wlpdstm::TransactionRw	typeref:typename:CACHE_LINE_ALIGNED PaddedWord
thread_count	swisstm/src/stm/privatization_tree.h	/^			volatile Word *thread_count;$/;"	m	class:wlpdstm::PrivatizationTree	typeref:typename:volatile Word *
thread_count	swisstm/src/stm/transaction_mixinv.cc	/^Word wlpdstm::TxMixinv::thread_count;$/;"	m	class:wlpdstm::TxMixinv	typeref:typename:Word
thread_count	swisstm/src/stm/transaction_mixinv.h	/^		static Word thread_count;$/;"	m	class:wlpdstm::TxMixinv	typeref:typename:Word
thread_count	swisstm/src/tlrw/transaction.cc	/^CACHE_LINE_ALIGNED wlpdstm::PaddedWord wlpdstm::TransactionTlrw::thread_count;$/;"	m	class:wlpdstm::TransactionTlrw	typeref:typename:CACHE_LINE_ALIGNED wlpdstm::PaddedWord
thread_count	swisstm/src/tlrw/transaction.h	/^		CACHE_LINE_ALIGNED static PaddedWord thread_count;$/;"	m	class:wlpdstm::TransactionTlrw	typeref:typename:CACHE_LINE_ALIGNED PaddedWord
thread_data	swisstm/src/mubench/intset-list-mv.c	/^typedef struct thread_data {$/;"	s	file:
thread_data	swisstm/src/mubench/intset.c	/^typedef struct thread_data {$/;"	s	file:
thread_data_t	swisstm/src/mubench/intset-list-mv.c	/^} thread_data_t;$/;"	t	typeref:struct:thread_data	file:
thread_data_t	swisstm/src/mubench/intset.c	/^} thread_data_t;$/;"	t	typeref:struct:thread_data	file:
thread_data_t	swisstm/src/mubench/rbforest.cc	/^struct thread_data_t {$/;"	s	file:
thread_energy	swisstm/src/dynamic/transaction.h	/^			Energy thread_energy;$/;"	m	class:wlpdstm::TransactionDynamic	typeref:typename:Energy
thread_finish	tree_rlu.c	/^void thread_finish(pthread_data_t *d)$/;"	f	typeref:typename:void
thread_fun	swisstm/src/mubench/rbforest.cc	/^static void *thread_fun(void *thread_data) {$/;"	f	typeref:typename:void *	file:
thread_getId	swisstm/src/mubench/thread.c	/^thread_getId()$/;"	f	typeref:typename:long
thread_getNumThread	swisstm/src/mubench/thread.c	/^thread_getNumThread()$/;"	f	typeref:typename:long
thread_id	rlu.h	/^	volatile long thread_id;$/;"	m	struct:rlu_ws_obj_header	typeref:typename:volatile long
thread_id	swisstm/src/p-tlrw/transaction.h	/^				uint8_t thread_id;$/;"	m	class:wlpdstm::TransactionTlrw::ReadSet	typeref:typename:uint8_t
thread_id	swisstm/src/p-tlrw/transaction.h	/^				uint8_t thread_id;$/;"	m	class:wlpdstm::TransactionTlrw::WriteSet	typeref:typename:uint8_t
thread_main	swisstm/src/mubench/rbforest.cc	/^static unsigned thread_main(thread_data_t *thread_data, bool measure_time) {$/;"	f	typeref:typename:unsigned	file:
thread_shutdown	swisstm/src/mubench/thread.c	/^thread_shutdown ()$/;"	f	typeref:typename:void
thread_start	swisstm/src/mubench/thread.c	/^thread_start (void (*funcPtr)(void*), void* argPtr)$/;"	f	typeref:typename:void
thread_startup	swisstm/src/mubench/thread.c	/^thread_startup (long numThread)$/;"	f	typeref:typename:void
threads	config-list.json	/^                        "threads" : [448, 336, 224, 168, 112, 56, 28, 14, 8, 1]$/;"	a	object:list10k.0
threads	config-list.json	/^                        "threads" : [448, 336, 224, 168, 112, 56, 28, 14, 8, 1]$/;"	a	object:list1k.0
threads	config-list.json	/^                        "threads" : [448, 336, 224, 168, 112, 56, 28, 14, 8, 1]$/;"	a	object:list50k.0
threads	config-tree.json	/^                        "threads" : [8, 4]$/;"	a	object:tree10k.0
threads	config.json	/^                        "threads" : [1, 4, 8, 16, 24, 32, 40, 48, 56, 64, 72, 80, 96]$/;"	a	object:tree10k-aug10.0
threads	list.json	/^                        "threads" : [448, 392, 336, 280, 224, 196, 168, 140, 112, 84, 56, 28, 14/;"	a	object:list100k.0
threads	list.json	/^                        "threads" : [448, 392, 336, 280, 224, 196, 168, 140, 112, 84, 56, 28, 14/;"	a	object:list10k.0
threads	list.json	/^                        "threads" : [448, 392, 336, 280, 224, 196, 168, 140, 112, 84, 56, 28, 14/;"	a	object:list1k.0
ticks	rlu.h	/^typedef unsigned long long ticks;$/;"	t	typeref:typename:unsigned long long
tid	swisstm/src/common/tid.h	/^			const unsigned tid;$/;"	m	class:wlpdstm::Tid	typeref:typename:const unsigned
tid	swisstm/src/dynamic/transaction.h	/^			Tid tid;$/;"	m	class:wlpdstm::TransactionDynamic	typeref:typename:Tid
tid	swisstm/src/epochstm/cm.h	/^				unsigned tid;$/;"	m	struct:wlpdstm::Greedy::__anonb360769d010a::__anonb360769d0208	typeref:typename:unsigned
tid	swisstm/src/epochstm/transaction.h	/^			Tid tid;$/;"	m	class:wlpdstm::TransactionEpoch	typeref:typename:Tid
tid	swisstm/src/p-tlrw/cm.h	/^				unsigned tid;$/;"	m	struct:wlpdstm::Greedy::__anonc9561e00010a::__anonc9561e000208	typeref:typename:unsigned
tid	swisstm/src/p-tlrw/transaction.h	/^			Tid tid;$/;"	m	class:wlpdstm::TransactionTlrw	typeref:typename:Tid
tid	swisstm/src/rw/cm.h	/^				unsigned tid;$/;"	m	struct:wlpdstm::Greedy::__anon85aa60e3010a::__anon85aa60e30208	typeref:typename:unsigned
tid	swisstm/src/rw/transaction.h	/^			Tid tid;$/;"	m	class:wlpdstm::TransactionRw	typeref:typename:Tid
tid	swisstm/src/stm/transaction_mixinv.h	/^		Tid tid;$/;"	m	class:wlpdstm::TxMixinv	typeref:typename:Tid
tid	swisstm/src/tlrw/cm.h	/^				unsigned tid;$/;"	m	struct:wlpdstm::Greedy::__anonabcb3183010a::__anonabcb31830208	typeref:typename:unsigned
tid	swisstm/src/tlrw/transaction.h	/^			Tid tid;$/;"	m	class:wlpdstm::TransactionTlrw	typeref:typename:Tid
time	list_rcu.c	/^	volatile long time;$/;"	m	struct:rcu_pthread_data	typeref:typename:volatile long	file:
time	tree_bonsai.c	/^	volatile long time;$/;"	m	struct:rcu_pthread_data	typeref:typename:volatile long	file:
time	tree_prcu.c	/^	volatile unsigned long time;$/;"	m	struct:prcu_pthread_data	typeref:typename:volatile unsigned long	file:
time	tree_prcu.c	/^	volatile unsigned long time;$/;"	m	struct:prcu_table	typeref:typename:volatile unsigned long	file:
time	tree_rcu.c	/^	volatile long time;$/;"	m	struct:rcu_pthread_data	typeref:typename:volatile long	file:
to_delete_in_epoch	swisstm/src/epochstm/memory/memory_epoch.h	/^			MemoryBlock *to_delete_in_epoch[MAX_EPOCH];$/;"	m	class:wlpdstm::MemoryManager	typeref:typename:MemoryBlock * []
total_idx	swisstm/src/common/stats_base.h	/^		unsigned total_idx;$/;"	m	struct:wlpdstm::AverageStat	typeref:typename:unsigned
total_operations	swisstm/src/mubench/rbforest.cc	/^    unsigned total_operations;$/;"	m	struct:thread_data_t	typeref:typename:unsigned	file:
touched_orecs	swisstm/src/epochstm/transaction.cc	/^CACHE_LINE_ALIGNED volatile uint8_t wlpdstm::TransactionEpoch::touched_orecs[MAX_THREADS][TOUCHE/;"	m	class:wlpdstm::TransactionEpoch	typeref:typename:CACHE_LINE_ALIGNED volatile uint8_t[][]
touched_orecs	swisstm/src/epochstm/transaction.h	/^		CACHE_LINE_ALIGNED static volatile uint8_t touched_orecs[MAX_THREADS][TOUCHED_ORECS_ARRAY_SIZE/;"	m	class:wlpdstm::TransactionEpoch	typeref:typename:CACHE_LINE_ALIGNED volatile uint8_t[][]
transactions	swisstm/src/dynamic/transaction.cc	/^wlpdstm::TransactionDynamic *wlpdstm::TransactionDynamic::transactions[MAX_THREADS];$/;"	m	class:wlpdstm::TransactionDynamic	typeref:typename:wlpdstm::TransactionDynamic * []
transactions	swisstm/src/dynamic/transaction.h	/^			static TransactionDynamic *transactions[MAX_THREADS];$/;"	m	class:wlpdstm::TransactionDynamic	typeref:typename:TransactionDynamic * []
transactions	swisstm/src/epochstm/transaction.cc	/^CACHE_LINE_ALIGNED wlpdstm::TransactionEpoch *wlpdstm::TransactionEpoch::transactions[MAX_THREAD/;"	m	class:wlpdstm::TransactionEpoch	typeref:typename:CACHE_LINE_ALIGNED wlpdstm::TransactionEpoch * []
transactions	swisstm/src/epochstm/transaction.h	/^		CACHE_LINE_ALIGNED static TransactionEpoch *transactions[MAX_THREADS];$/;"	m	class:wlpdstm::TransactionEpoch	typeref:typename:CACHE_LINE_ALIGNED TransactionEpoch * []
transactions	swisstm/src/p-tlrw/transaction.cc	/^CACHE_LINE_ALIGNED wlpdstm::TransactionTlrw *wlpdstm::TransactionTlrw::transactions[MAX_THREADS]/;"	m	class:wlpdstm::TransactionTlrw	typeref:typename:CACHE_LINE_ALIGNED wlpdstm::TransactionTlrw * []
transactions	swisstm/src/p-tlrw/transaction.h	/^		CACHE_LINE_ALIGNED static TransactionTlrw *transactions[MAX_THREADS];$/;"	m	class:wlpdstm::TransactionTlrw	typeref:typename:CACHE_LINE_ALIGNED TransactionTlrw * []
transactions	swisstm/src/rw/transaction.cc	/^CACHE_LINE_ALIGNED wlpdstm::TransactionRw *wlpdstm::TransactionRw::transactions[MAX_THREADS];$/;"	m	class:wlpdstm::TransactionRw	typeref:typename:CACHE_LINE_ALIGNED wlpdstm::TransactionRw * []
transactions	swisstm/src/rw/transaction.h	/^		CACHE_LINE_ALIGNED static TransactionRw *transactions[MAX_THREADS];$/;"	m	class:wlpdstm::TransactionRw	typeref:typename:CACHE_LINE_ALIGNED TransactionRw * []
transactions	swisstm/src/stm/transaction_mixinv.cc	/^wlpdstm::TxMixinv *wlpdstm::TxMixinv::transactions[MAX_THREADS];$/;"	m	class:wlpdstm::TxMixinv	typeref:typename:wlpdstm::TxMixinv * []
transactions	swisstm/src/stm/transaction_mixinv.h	/^		static TxMixinv *transactions[MAX_THREADS];$/;"	m	class:wlpdstm::TxMixinv	typeref:typename:TxMixinv * []
transactions	swisstm/src/tlrw/transaction.cc	/^CACHE_LINE_ALIGNED wlpdstm::TransactionTlrw *wlpdstm::TransactionTlrw::transactions[MAX_THREADS]/;"	m	class:wlpdstm::TransactionTlrw	typeref:typename:CACHE_LINE_ALIGNED wlpdstm::TransactionTlrw * []
transactions	swisstm/src/tlrw/transaction.h	/^		CACHE_LINE_ALIGNED static TransactionTlrw *transactions[MAX_THREADS];$/;"	m	class:wlpdstm::TransactionTlrw	typeref:typename:CACHE_LINE_ALIGNED TransactionTlrw * []
traverse_pre_order	tree_citrus_rlu.c	/^void traverse_pre_order(pthread_data_t *data, node_t *node)$/;"	f	typeref:typename:void
tree10k	config-tree.json	/^        "tree10k": [$/;"	a
tree10k-aug10	config.json	/^        "tree10k-aug10": [$/;"	a
tree_bonsai.o	Makefile	/^tree_bonsai.o: tree_bonsai.c benchmark_list.h$/;"	t
tree_citrus_mvrlu.o	Makefile	/^tree_citrus_mvrlu.o: tree_citrus_rlu.c benchmark_list.h$/;"	t
tree_citrus_rlu.o	Makefile	/^tree_citrus_rlu.o: tree_citrus_rlu.c benchmark_list.h$/;"	t
tree_delete_ratio	swisstm/src/mubench/rbforest.cc	/^    unsigned tree_delete_ratio;$/;"	m	struct:op_ratios_t	typeref:typename:unsigned	file:
tree_insert_ratio	swisstm/src/mubench/rbforest.cc	/^    unsigned tree_insert_ratio;$/;"	m	struct:op_ratios_t	typeref:typename:unsigned	file:
tree_lookup_ratio	swisstm/src/mubench/rbforest.cc	/^    unsigned tree_lookup_ratio;$/;"	m	struct:op_ratios_t	typeref:typename:unsigned	file:
tree_move_ratio	swisstm/src/mubench/rbforest.cc	/^    unsigned tree_move_ratio;$/;"	m	struct:op_ratios_t	typeref:typename:unsigned	file:
tree_mvrlu.o	Makefile	/^tree_mvrlu.o: tree_rlu.c benchmark_list.h$/;"	t
tree_node_locks	swisstm/src/stm/privatization_tree.cc	/^CACHE_LINE_ALIGNED wlpdstm::PaddedSpinTryLock wlpdstm::PrivatizationTree::tree_node_locks[PRIVAT/;"	m	class:wlpdstm::PrivatizationTree	typeref:typename:CACHE_LINE_ALIGNED wlpdstm::PaddedSpinTryLock[]
tree_node_locks	swisstm/src/stm/privatization_tree.h	/^			static PaddedSpinTryLock tree_node_locks[PRIVATIZATION_TREE_NODE_COUNT];$/;"	m	class:wlpdstm::PrivatizationTree	typeref:typename:PaddedSpinTryLock[]
tree_nodes	swisstm/src/stm/privatization_tree.cc	/^CACHE_LINE_ALIGNED wlpdstm::PaddedWord wlpdstm::PrivatizationTree::tree_nodes[PRIVATIZATION_TREE/;"	m	class:wlpdstm::PrivatizationTree	typeref:typename:CACHE_LINE_ALIGNED wlpdstm::PaddedWord[]
tree_nodes	swisstm/src/stm/privatization_tree.h	/^			static PaddedWord tree_nodes[PRIVATIZATION_TREE_NODE_COUNT];$/;"	m	class:wlpdstm::PrivatizationTree	typeref:typename:PaddedWord[]
tree_prcu_d.o	Makefile	/^tree_prcu_d.o: tree_prcu.c benchmark_list.h$/;"	t
tree_prcu_deer.o	Makefile	/^tree_prcu_deer.o: tree_prcu.c benchmark_list.h$/;"	t
tree_prcu_eer.o	Makefile	/^tree_prcu_eer.o: tree_prcu.c benchmark_list.h$/;"	t
tree_rcu.o	Makefile	/^tree_rcu.o: tree_rcu.c benchmark_list.h$/;"	t
tree_rlu.o	Makefile	/^tree_rlu.o: tree_rlu.c benchmark_list.h$/;"	t
tree_vrbtree.o	Makefile	/^tree_vrbtree.o: tree_vrbtree.c benchmark_list.h$/;"	t
tree_vtree.o	Makefile	/^tree_vtree.o: tree_vtree.c benchmark_list.h$/;"	t
true	zipf/types.h	/^#define true	/;"	d
try_lock	swisstm/src/common/atomic.h	/^			bool try_lock() {$/;"	f	class:wlpdstm::PaddedSpinTryLock	typeref:typename:bool
try_lock	swisstm/src/common/lock.h	/^			bool try_lock() volatile {$/;"	f	class:wlpdstm::cas_lock	typeref:typename:bool
ts	swisstm/src/dynamic/memory/memory_impl.h	/^		Word ts;$/;"	m	struct:wlpdstm::PtrBufferT	typeref:typename:Word
ts	swisstm/src/dynamic/timestamp.h	/^			Word ts;$/;"	m	class:wlpdstm::GlobalTimestamp	typeref:typename:Word
ts	swisstm/src/stm/memory/memory_impl.h	/^		Word ts;$/;"	m	struct:wlpdstm::PtrBufferT	typeref:typename:Word
ts	swisstm/src/stm/timestamp.h	/^			Word ts;$/;"	m	class:wlpdstm::GlobalTimestamp	typeref:typename:Word
tx_commit_cycles	swisstm/src/common/profiling/tx_duration.h	/^			uint64_t tx_commit_cycles;$/;"	m	class:wlpdstm::TxDurationProfiling	typeref:typename:uint64_t
tx_commit_fun	swisstm/src/dynamic/transaction.h	/^			TxCommitFunPtr tx_commit_fun;$/;"	m	class:wlpdstm::TransactionDynamic	typeref:typename:TxCommitFunPtr
tx_counter	swisstm/src/epochstm/transaction.h	/^				volatile TxCounter tx_counter;$/;"	m	union:wlpdstm::TransactionEpoch::PaddedTxCounter	typeref:typename:volatile TxCounter
tx_desc	swisstm/src/api/wlpdstm.h	/^	typedef void *tx_desc;$/;"	t	typeref:typename:void *
tx_energy	swisstm/src/dynamic/transaction.h	/^			Energy tx_energy;$/;"	m	class:wlpdstm::TransactionDynamic	typeref:typename:Energy
tx_start	swisstm/src/common/sampling.h	/^			void tx_start() {$/;"	f	class:wlpdstm::Sampling	typeref:typename:void
tx_start_cycles	swisstm/src/common/profiling/adaptive.h	/^			uint64_t tx_start_cycles;$/;"	m	class:wlpdstm::AdaptiveProfiling	typeref:typename:uint64_t
tx_start_cycles	swisstm/src/common/profiling/non_tx_duration.h	/^			uint64_t tx_start_cycles;$/;"	m	class:wlpdstm::NonTxDurationProfiling	typeref:typename:uint64_t
tx_start_cycles	swisstm/src/common/profiling/non_tx_duration_simple.h	/^			uint64_t tx_start_cycles;$/;"	m	class:wlpdstm::NonTxDurationProfilingSimple	typeref:typename:uint64_t
tx_start_cycles	swisstm/src/common/profiling/simple.h	/^			uint64_t tx_start_cycles;$/;"	m	class:wlpdstm::SimpleProfiling	typeref:typename:uint64_t
tx_start_cycles	swisstm/src/common/profiling/tx_duration.h	/^			uint64_t tx_start_cycles;$/;"	m	class:wlpdstm::TxDurationProfiling	typeref:typename:uint64_t
tx_start_cycles	swisstm/src/dynamic/profiling/adaptive_dynamic.h	/^			uint64_t tx_start_cycles;$/;"	m	class:wlpdstm::AdaptiveDynamicProfiling	typeref:typename:uint64_t
tx_start_cycles	swisstm/src/stm_api/profiled_transaction.h	/^			uint64_t tx_start_cycles;$/;"	m	class:wlpdstm::ProfiledTransaction	typeref:typename:uint64_t
tx_status	swisstm/src/dynamic/transaction.h	/^				volatile Word tx_status;$/;"	m	union:wlpdstm::TransactionDynamic::__anonc8737335050a	typeref:typename:volatile Word
tx_status	swisstm/src/stm/transaction_mixinv.h	/^			volatile Word tx_status;$/;"	m	union:wlpdstm::TxMixinv::__anon87a360de050a	typeref:typename:volatile Word
type	rlu.h	/^	int type;$/;"	m	struct:rlu_thread_data	typeref:typename:int
type	swisstm/src/mubench/rbforest.cc	/^    optype_t type;$/;"	m	struct:operation_t	typeref:typename:optype_t	file:
ulong_t	swisstm/src/mubench/types.h	/^typedef unsigned long ulong_t;$/;"	t	typeref:typename:unsigned long
uniq_id	rlu.h	/^	long uniq_id;$/;"	m	struct:rlu_thread_data	typeref:typename:long
unlikely	rlu.c	/^# define unlikely(/;"	d	file:
update	swisstm/src/mubench/intset.c	/^  int update;$/;"	m	struct:thread_data	typeref:typename:int	file:
update_n_threads	tree_rlu.c	/^void update_n_threads(n_threads) $/;"	f	typeref:typename:void
update_rate	config-list.json	/^                        "update_rate" : [20, 200, 800],$/;"	a	object:list10k.0
update_rate	config-list.json	/^                        "update_rate" : [20, 200, 800],$/;"	a	object:list1k.0
update_rate	config-list.json	/^                        "update_rate" : [20, 200, 800],$/;"	a	object:list50k.0
update_rate	config-tree.json	/^                        "update_rate" : [200, 800],$/;"	a	object:tree10k.0
update_rate	config.json	/^                        "update_rate" : [20, 200, 800],$/;"	a	object:tree10k-aug10.0
update_rate	list.json	/^                        "update_rate" : [0, 20, 200, 800],$/;"	a	object:list10k.0
update_rate	list.json	/^                        "update_rate" : [200],$/;"	a	object:list100k.0
update_rate	list.json	/^                        "update_rate" : [200],$/;"	a	object:list1k.0
update_ratio	benchmark_list.h	/^	int update_ratio;$/;"	m	struct:pthread_data	typeref:typename:int
urcu_synchronize	list_rcu.c	/^void urcu_synchronize(rcu_pthread_data_t *rcu_data)$/;"	f	typeref:typename:void
urcu_synchronize	tree_bonsai.c	/^void urcu_synchronize(rcu_pthread_data_t *rcu_data)$/;"	f	typeref:typename:void
urcu_synchronize	tree_rcu.c	/^void urcu_synchronize(rcu_pthread_data_t *rcu_data)$/;"	f	typeref:typename:void
use64	zipf/rand.h	/^	unsigned int use64;$/;"	m	struct:frand_state	typeref:typename:unsigned int
v	swisstm/src/mubench/rbtree.h	/^    intptr_t v;$/;"	m	struct:node	typeref:typename:intptr_t
val	run_tests.py	/^        val = getattr(opts, opt)$/;"	v
val	swisstm/src/common/padded.h	/^		volatile Word val;$/;"	m	union:wlpdstm::PaddedBool	typeref:typename:volatile Word
val	swisstm/src/common/padded.h	/^		volatile Word val;$/;"	m	union:wlpdstm::PaddedWord	typeref:typename:volatile Word
val	swisstm/src/common/padded.h	/^		volatile unsigned val;$/;"	m	union:wlpdstm::PaddedUnsigned	typeref:typename:volatile unsigned
val	swisstm/src/common/tls.h	/^			static __thread T *val;$/;"	m	class:wlpdstm::Tls	typeref:typename:__thread T *
val	swisstm/src/common/tls.h	/^template<class T, bool GLOBAL_INIT, bool THREAD_INIT> __thread T* wlpdstm::Tls<T, GLOBAL_INIT, T/;"	m	class:wlpdstm::Tls<T, GLOBAL_INIT, THREAD_INIT>	typeref:typename:__thread T *
val	swisstm/src/mubench/intset-list-mv.c	/^  int val;$/;"	m	struct:node	typeref:typename:int	file:
val	swisstm/src/mubench/intset.c	/^  int val;$/;"	m	struct:node	typeref:typename:int	file:
val	zipf/test.c	/^	unsigned long long val;$/;"	m	struct:node	typeref:typename:unsigned long long	file:
valid_ts	swisstm/src/dynamic/transaction.h	/^			Word valid_ts;$/;"	m	class:wlpdstm::TransactionDynamic	typeref:typename:Word
valid_ts	swisstm/src/stm/transaction_mixinv.h	/^		Word valid_ts;$/;"	m	class:wlpdstm::TxMixinv	typeref:typename:Word
validate	tree_prcu.c	/^int validate(node_t *prev, int tag, node_t *cur, int direction)$/;"	f	typeref:typename:int
validate	tree_rcu.c	/^int validate(node_t *prev, int tag, node_t *cur, int direction)$/;"	f	typeref:typename:int
value	list_harris.c	/^	int value;$/;"	m	struct:node	typeref:typename:int	file:
value	list_move_rlu.c	/^	int value;$/;"	m	struct:node	typeref:typename:int	file:
value	list_move_spinlock.c	/^	int value;$/;"	m	struct:node	typeref:typename:int	file:
value	list_move_vlist.c	/^	int value;$/;"	m	struct:node	typeref:typename:int	file:
value	list_rcu.c	/^	int value;$/;"	m	struct:node	typeref:typename:int	file:
value	list_rlu.c	/^	int value;$/;"	m	struct:node	typeref:typename:int	file:
value	list_spinlock.c	/^	int value;$/;"	m	struct:node	typeref:typename:int	file:
value	list_vlist.c	/^	int value;$/;"	m	struct:node	typeref:typename:int	file:
value	swisstm/src/common/atomic.h	/^			T value;$/;"	m	class:wlpdstm::AtomicVariable	typeref:typename:T
value	swisstm/src/common/configuration.h	/^		std::string value;$/;"	m	struct:wlpdstm::ConfigItem	typeref:typename:std::string
value	swisstm/src/dynamic/log.h	/^		Word value;$/;"	m	struct:wlpdstm::WriteWordLogEntry	typeref:typename:Word
value	swisstm/src/stm/transaction_mixinv.h	/^			Word value;$/;"	m	struct:wlpdstm::TxMixinv::WriteWordLogEntry	typeref:typename:Word
value	tree_bonsai.c	/^	int value;$/;"	m	struct:node	typeref:typename:int	file:
value	tree_citrus_rlu.c	/^	int value;$/;"	m	struct:node	typeref:typename:int	file:
value	tree_prcu.c	/^	int value;$/;"	m	struct:node	typeref:typename:int	file:
value	tree_rcu.c	/^	int value;$/;"	m	struct:node	typeref:typename:int	file:
value	tree_rlu.c	/^	int value;$/;"	m	struct:node	typeref:typename:int	file:
value	tree_vrbtree.c	/^	int value;$/;"	m	struct:node	typeref:typename:int	file:
value	tree_vtree.c	/^	int value;$/;"	m	struct:node	typeref:typename:int	file:
verifyRedBlack	swisstm/src/mubench/rbtree.c	/^verifyRedBlack (node_t* root, int depth)$/;"	f	typeref:typename:int	file:
version	swisstm/src/dynamic/log.h	/^		VersionLock version;$/;"	m	struct:wlpdstm::ReadLogEntry	typeref:typename:VersionLock
version	swisstm/src/stm/large_lock_set.h	/^			uint32_t version;$/;"	m	class:wlpdstm::LargeLockSet	typeref:typename:uint32_t
version	swisstm/src/stm/transaction_mixinv.h	/^			VersionLock version;$/;"	m	struct:wlpdstm::TxMixinv::ReadLogEntry	typeref:typename:VersionLock
version_lock_table	swisstm/src/dynamic/transaction.cc	/^wlpdstm::VersionLock wlpdstm::TransactionDynamic::version_lock_table[FULL_VERSION_LOCK_TABLE_SIZ/;"	m	class:wlpdstm::TransactionDynamic	typeref:typename:wlpdstm::VersionLock[]
version_lock_table	swisstm/src/dynamic/transaction.h	/^			static VersionLock version_lock_table[FULL_VERSION_LOCK_TABLE_SIZE];$/;"	m	class:wlpdstm::TransactionDynamic	typeref:typename:VersionLock[]
version_lock_table	swisstm/src/stm/transaction_mixinv.cc	/^wlpdstm::VersionLock wlpdstm::TxMixinv::version_lock_table[FULL_VERSION_LOCK_TABLE_SIZE];$/;"	m	class:wlpdstm::TxMixinv	typeref:typename:wlpdstm::VersionLock[]
version_lock_table	swisstm/src/stm/transaction_mixinv.h	/^		static VersionLock version_lock_table[FULL_VERSION_LOCK_TABLE_SIZE];$/;"	m	class:wlpdstm::TxMixinv	typeref:typename:VersionLock[]
versioning	README.md	/^# versioning$/;"	c
vlist_free_later	list_move_vlist.c	/^static inline void vlist_free_later(void *ptr, vlist_pthread_data_t *vlist_data)$/;"	f	typeref:typename:void	file:
vlist_free_later	list_vlist.c	/^static inline void vlist_free_later(void *ptr, vlist_pthread_data_t *vlist_data)$/;"	f	typeref:typename:void	file:
vlist_free_node_later	list_move_vlist.c	/^static inline void vlist_free_node_later(node_t *node, vlist_pthread_data_t *vlist_data)$/;"	f	typeref:typename:void	file:
vlist_free_node_later	list_vlist.c	/^static inline void vlist_free_node_later(node_t *node, vlist_pthread_data_t *vlist_data)$/;"	f	typeref:typename:void	file:
vlist_free_slots_later	list_move_vlist.c	/^static inline void vlist_free_slots_later(vlist_slot_t *slot, vlist_pthread_data_t *vlist_data)$/;"	f	typeref:typename:void	file:
vlist_free_slots_later	list_vlist.c	/^static inline void vlist_free_slots_later(vlist_slot_t *slot, vlist_pthread_data_t *vlist_data)$/;"	f	typeref:typename:void	file:
vlist_get_next	list_move_vlist.c	/^static inline node_t *vlist_get_next(node_t *node, vlist_pthread_data_t *vlist_data)$/;"	f	typeref:typename:node_t *	file:
vlist_get_next	list_vlist.c	/^static inline node_t *vlist_get_next(node_t *node, vlist_pthread_data_t *vlist_data)$/;"	f	typeref:typename:node_t *	file:
vlist_list	list_move_vlist.c	/^typedef struct vlist_list {$/;"	s	file:
vlist_list	list_vlist.c	/^typedef struct vlist_list {$/;"	s	file:
vlist_list_t	list_move_vlist.c	/^} vlist_list_t;$/;"	t	typeref:struct:vlist_list	file:
vlist_list_t	list_vlist.c	/^} vlist_list_t;$/;"	t	typeref:struct:vlist_list	file:
vlist_maybe_quiescent	list_move_vlist.c	/^static inline void vlist_maybe_quiescent(vlist_pthread_data_t *vlist_data)$/;"	f	typeref:typename:void	file:
vlist_maybe_quiescent	list_vlist.c	/^static inline void vlist_maybe_quiescent(vlist_pthread_data_t *vlist_data)$/;"	f	typeref:typename:void	file:
vlist_new_node	list_move_vlist.c	/^static inline node_t *vlist_new_node()$/;"	f	typeref:typename:node_t *	file:
vlist_new_node	list_vlist.c	/^static inline node_t *vlist_new_node()$/;"	f	typeref:typename:node_t *	file:
vlist_pthread_data	list_move_vlist.c	/^typedef struct vlist_pthread_data {$/;"	s	file:
vlist_pthread_data	list_vlist.c	/^typedef struct vlist_pthread_data {$/;"	s	file:
vlist_pthread_data_t	list_move_vlist.c	/^} vlist_pthread_data_t;$/;"	t	typeref:struct:vlist_pthread_data	file:
vlist_pthread_data_t	list_vlist.c	/^} vlist_pthread_data_t;$/;"	t	typeref:struct:vlist_pthread_data	file:
vlist_read_cs_enter	list_move_vlist.c	/^static inline void vlist_read_cs_enter(vlist_pthread_data_t *vlist_data)$/;"	f	typeref:typename:void	file:
vlist_read_cs_enter	list_vlist.c	/^static inline void vlist_read_cs_enter(vlist_pthread_data_t *vlist_data)$/;"	f	typeref:typename:void	file:
vlist_read_cs_exit	list_move_vlist.c	/^static inline void vlist_read_cs_exit(vlist_pthread_data_t *vlist_data)$/;"	f	typeref:typename:void	file:
vlist_read_cs_exit	list_vlist.c	/^static inline void vlist_read_cs_exit(vlist_pthread_data_t *vlist_data)$/;"	f	typeref:typename:void	file:
vlist_record	list_move_vlist.c	/^typedef struct vlist_record {$/;"	s	file:
vlist_record	list_vlist.c	/^typedef struct vlist_record {$/;"	s	file:
vlist_record_t	list_move_vlist.c	/^} vlist_record_t;$/;"	t	typeref:struct:vlist_record	file:
vlist_record_t	list_vlist.c	/^} vlist_record_t;$/;"	t	typeref:struct:vlist_record	file:
vlist_set_read_epoch	list_move_vlist.c	/^static inline void vlist_set_read_epoch(vlist_pthread_data_t *vlist_data)$/;"	f	typeref:typename:void	file:
vlist_set_read_epoch	list_vlist.c	/^static inline void vlist_set_read_epoch(vlist_pthread_data_t *vlist_data)$/;"	f	typeref:typename:void	file:
vlist_slot	list_move_vlist.c	/^typedef struct vlist_slot {$/;"	s	file:
vlist_slot	list_vlist.c	/^typedef struct vlist_slot {$/;"	s	file:
vlist_slot_t	list_move_vlist.c	/^} vlist_slot_t;$/;"	t	typeref:struct:vlist_slot	file:
vlist_slot_t	list_vlist.c	/^} vlist_slot_t;$/;"	t	typeref:struct:vlist_slot	file:
vlist_write_cs_enter	list_move_vlist.c	/^static inline void vlist_write_cs_enter(vlist_pthread_data_t *vlist_data)$/;"	f	typeref:typename:void	file:
vlist_write_cs_enter	list_vlist.c	/^static void vlist_write_cs_enter(vlist_pthread_data_t *vlist_data)$/;"	f	typeref:typename:void	file:
vlist_write_cs_exit	list_move_vlist.c	/^static int vlist_write_cs_exit(vlist_pthread_data_t *vlist_data)$/;"	f	typeref:typename:int	file:
vlist_write_cs_exit	list_vlist.c	/^static int vlist_write_cs_exit(vlist_pthread_data_t *vlist_data)$/;"	f	typeref:typename:int	file:
vtree_free_later	tree_vrbtree.c	/^static inline void vtree_free_later(void *ptr, vtree_pthread_data_t *vtree_data)$/;"	f	typeref:typename:void	file:
vtree_free_later	tree_vtree.c	/^static inline void vtree_free_later(void *ptr, vtree_pthread_data_t *vtree_data)$/;"	f	typeref:typename:void	file:
vtree_free_node_later	tree_vrbtree.c	/^static inline void vtree_free_node_later(node_t *node, vtree_pthread_data_t *vtree_data)$/;"	f	typeref:typename:void	file:
vtree_free_node_later	tree_vtree.c	/^static inline void vtree_free_node_later(node_t *node, vtree_pthread_data_t *vtree_data)$/;"	f	typeref:typename:void	file:
vtree_free_slots_later	tree_vrbtree.c	/^static inline void vtree_free_slots_later(vtree_slot_t *slot, vtree_pthread_data_t *vtree_data)$/;"	f	typeref:typename:void	file:
vtree_free_slots_later	tree_vtree.c	/^static inline void vtree_free_slots_later(vtree_slot_t *slot, vtree_pthread_data_t *vtree_data)$/;"	f	typeref:typename:void	file:
vtree_maybe_quiescent	tree_vrbtree.c	/^static inline void vtree_maybe_quiescent(vtree_pthread_data_t *vtree_data)$/;"	f	typeref:typename:void	file:
vtree_maybe_quiescent	tree_vtree.c	/^static inline void vtree_maybe_quiescent(vtree_pthread_data_t *vtree_data)$/;"	f	typeref:typename:void	file:
vtree_new_node	tree_vrbtree.c	/^static node_t *vtree_new_node(int key)$/;"	f	typeref:typename:node_t *	file:
vtree_new_node	tree_vtree.c	/^static node_t *vtree_new_node(int key)$/;"	f	typeref:typename:node_t *	file:
vtree_pthread_data	tree_vrbtree.c	/^typedef struct vtree_pthread_data {$/;"	s	file:
vtree_pthread_data	tree_vtree.c	/^typedef struct vtree_pthread_data {$/;"	s	file:
vtree_pthread_data_t	tree_vrbtree.c	/^} vtree_pthread_data_t;$/;"	t	typeref:struct:vtree_pthread_data	file:
vtree_pthread_data_t	tree_vtree.c	/^} vtree_pthread_data_t;$/;"	t	typeref:struct:vtree_pthread_data	file:
vtree_read_cs_enter	tree_vrbtree.c	/^static inline void vtree_read_cs_enter(vtree_pthread_data_t *vtree_data)$/;"	f	typeref:typename:void	file:
vtree_read_cs_enter	tree_vtree.c	/^static inline void vtree_read_cs_enter(vtree_pthread_data_t *vtree_data)$/;"	f	typeref:typename:void	file:
vtree_read_cs_exit	tree_vrbtree.c	/^static inline void vtree_read_cs_exit(vtree_pthread_data_t *vtree_data)$/;"	f	typeref:typename:void	file:
vtree_read_cs_exit	tree_vtree.c	/^static inline void vtree_read_cs_exit(vtree_pthread_data_t *vtree_data)$/;"	f	typeref:typename:void	file:
vtree_rebalance	tree_vrbtree.c	/^vtree_rebalance(node_t *root, node_t *prev, vtree_slot_t *prev_slot, int direction, vtree_pthrea/;"	f	typeref:typename:void	file:
vtree_record	tree_vrbtree.c	/^typedef struct vtree_record {$/;"	s	file:
vtree_record	tree_vtree.c	/^typedef struct vtree_record {$/;"	s	file:
vtree_record_t	tree_vrbtree.c	/^} vtree_record_t;$/;"	t	typeref:struct:vtree_record	file:
vtree_record_t	tree_vtree.c	/^} vtree_record_t;$/;"	t	typeref:struct:vtree_record	file:
vtree_set_read_epoch	tree_vrbtree.c	/^static inline void vtree_set_read_epoch(vtree_pthread_data_t *vtree_data)$/;"	f	typeref:typename:void	file:
vtree_set_read_epoch	tree_vtree.c	/^static inline void vtree_set_read_epoch(vtree_pthread_data_t *vtree_data)$/;"	f	typeref:typename:void	file:
vtree_slot	tree_vrbtree.c	/^typedef struct vtree_slot {$/;"	s	file:
vtree_slot	tree_vtree.c	/^typedef struct vtree_slot {$/;"	s	file:
vtree_slot_t	tree_vrbtree.c	/^} vtree_slot_t;$/;"	t	typeref:struct:vtree_slot	file:
vtree_slot_t	tree_vtree.c	/^} vtree_slot_t;$/;"	t	typeref:struct:vtree_slot	file:
vtree_tree	tree_vrbtree.c	/^typedef struct vtree_tree {$/;"	s	file:
vtree_tree	tree_vtree.c	/^typedef struct vtree_tree {$/;"	s	file:
vtree_tree_t	tree_vrbtree.c	/^} vtree_tree_t;$/;"	t	typeref:struct:vtree_tree	file:
vtree_tree_t	tree_vtree.c	/^} vtree_tree_t;$/;"	t	typeref:struct:vtree_tree	file:
vtree_write_cs_enter	tree_vrbtree.c	/^static void vtree_write_cs_enter(vtree_pthread_data_t *vtree_data)$/;"	f	typeref:typename:void	file:
vtree_write_cs_enter	tree_vtree.c	/^static void vtree_write_cs_enter(vtree_pthread_data_t *vtree_data)$/;"	f	typeref:typename:void	file:
vtree_write_cs_exit	tree_vrbtree.c	/^static int vtree_write_cs_exit(vtree_pthread_data_t *vtree_data)$/;"	f	typeref:typename:int	file:
vtree_write_cs_exit	tree_vtree.c	/^static int vtree_write_cs_exit(vtree_pthread_data_t *vtree_data)$/;"	f	typeref:typename:int	file:
wait	swisstm/src/stm/privatization_tree.h	/^inline void wlpdstm::PrivatizationTree::wait(Word ts) {$/;"	f	class:wlpdstm::PrivatizationTree	typeref:typename:void
wait_cycles	swisstm/src/common/timing.h	/^inline void wait_cycles(uint64_t cycles) {$/;"	f	typeref:typename:void
wait_entry	rlu.h	/^typedef struct wait_entry {$/;"	s
wait_entry_t	rlu.h	/^} wait_entry_t;$/;"	t	typeref:struct:wait_entry
which	tree_prcu.c	/^	int which;$/;"	m	struct:prcu_table	typeref:typename:int	file:
wlpdstm	swisstm/src/common/alloc.h	/^namespace wlpdstm {$/;"	n
wlpdstm	swisstm/src/common/arch.h	/^namespace wlpdstm {$/;"	n
wlpdstm	swisstm/src/common/atomic.h	/^namespace wlpdstm {$/;"	n
wlpdstm	swisstm/src/common/cache_aligned_alloc.h	/^namespace wlpdstm {$/;"	n
wlpdstm	swisstm/src/common/configuration.h	/^namespace wlpdstm {$/;"	n
wlpdstm	swisstm/src/common/constants.h	/^namespace wlpdstm {$/;"	n
wlpdstm	swisstm/src/common/energy.h	/^namespace wlpdstm {$/;"	n
wlpdstm	swisstm/src/common/lock.h	/^namespace wlpdstm {$/;"	n
wlpdstm	swisstm/src/common/log.h	/^namespace wlpdstm {$/;"	n
wlpdstm	swisstm/src/common/padded.h	/^namespace wlpdstm {$/;"	n
wlpdstm	swisstm/src/common/perfcnt/perf_cnt_papi.h	/^namespace wlpdstm {$/;"	n
wlpdstm	swisstm/src/common/perfcnt/perf_cnt_solaris.h	/^namespace wlpdstm {$/;"	n
wlpdstm	swisstm/src/common/preemptive_utils.h	/^namespace wlpdstm {$/;"	n
wlpdstm	swisstm/src/common/print_utils.h	/^namespace wlpdstm {$/;"	n
wlpdstm	swisstm/src/common/profiling/adaptive.h	/^namespace wlpdstm {$/;"	n
wlpdstm	swisstm/src/common/profiling/base.h	/^namespace wlpdstm {$/;"	n
wlpdstm	swisstm/src/common/profiling/non_tx_duration.h	/^namespace wlpdstm {$/;"	n
wlpdstm	swisstm/src/common/profiling/non_tx_duration_pcnt_simple.h	/^namespace wlpdstm {$/;"	n
wlpdstm	swisstm/src/common/profiling/non_tx_duration_simple.h	/^namespace wlpdstm {$/;"	n
wlpdstm	swisstm/src/common/profiling/simple.h	/^namespace wlpdstm {$/;"	n
wlpdstm	swisstm/src/common/profiling/tx_duration.h	/^namespace wlpdstm {$/;"	n
wlpdstm	swisstm/src/common/random.h	/^namespace wlpdstm {$/;"	n
wlpdstm	swisstm/src/common/sampling.h	/^namespace wlpdstm {$/;"	n
wlpdstm	swisstm/src/common/stats_base.h	/^namespace wlpdstm {$/;"	n
wlpdstm	swisstm/src/common/tid.h	/^namespace wlpdstm {$/;"	n
wlpdstm	swisstm/src/common/tls.h	/^namespace wlpdstm {$/;"	n
wlpdstm	swisstm/src/dynamic/constants.h	/^namespace wlpdstm {$/;"	n
wlpdstm	swisstm/src/dynamic/eager/eager.h	/^namespace wlpdstm {$/;"	n
wlpdstm	swisstm/src/dynamic/lazy/hashtable.h	/^namespace wlpdstm {$/;"	n
wlpdstm	swisstm/src/dynamic/lazy/lazy.h	/^namespace wlpdstm {$/;"	n
wlpdstm	swisstm/src/dynamic/log.h	/^namespace wlpdstm {$/;"	n
wlpdstm	swisstm/src/dynamic/memory/memory_impl.h	/^namespace wlpdstm {$/;"	n
wlpdstm	swisstm/src/dynamic/memory/memory_impl_priv.h	/^namespace wlpdstm {$/;"	n
wlpdstm	swisstm/src/dynamic/mixed/mixed.h	/^namespace wlpdstm {$/;"	n
wlpdstm	swisstm/src/dynamic/perf_cnt.h	/^namespace wlpdstm {$/;"	n
wlpdstm	swisstm/src/dynamic/profiling.h	/^namespace wlpdstm {$/;"	n
wlpdstm	swisstm/src/dynamic/profiling/adaptive_dynamic.h	/^namespace wlpdstm {$/;"	n
wlpdstm	swisstm/src/dynamic/stats.h	/^namespace wlpdstm {$/;"	n
wlpdstm	swisstm/src/dynamic/timestamp.h	/^namespace wlpdstm {$/;"	n
wlpdstm	swisstm/src/dynamic/transaction.h	/^namespace wlpdstm {$/;"	n
wlpdstm	swisstm/src/dynamic/version_lock.h	/^namespace wlpdstm {$/;"	n
wlpdstm	swisstm/src/epochstm/cm.h	/^namespace wlpdstm {$/;"	n
wlpdstm	swisstm/src/epochstm/constants.h	/^namespace wlpdstm {$/;"	n
wlpdstm	swisstm/src/epochstm/memory/memory_epoch.h	/^namespace wlpdstm {$/;"	n
wlpdstm	swisstm/src/epochstm/memory/memory_leak.h	/^namespace wlpdstm {$/;"	n
wlpdstm	swisstm/src/epochstm/memory/memory_txend.h	/^namespace wlpdstm {$/;"	n
wlpdstm	swisstm/src/epochstm/stats.h	/^namespace wlpdstm {$/;"	n
wlpdstm	swisstm/src/epochstm/transaction.h	/^namespace wlpdstm {$/;"	n
wlpdstm	swisstm/src/p-tlrw/cm.h	/^namespace wlpdstm {$/;"	n
wlpdstm	swisstm/src/p-tlrw/constants.h	/^namespace wlpdstm {$/;"	n
wlpdstm	swisstm/src/p-tlrw/memory/memory_txend.h	/^namespace wlpdstm {$/;"	n
wlpdstm	swisstm/src/p-tlrw/stats.h	/^namespace wlpdstm {$/;"	n
wlpdstm	swisstm/src/p-tlrw/transaction.h	/^namespace wlpdstm {$/;"	n
wlpdstm	swisstm/src/rw/cm.h	/^namespace wlpdstm {$/;"	n
wlpdstm	swisstm/src/rw/constants.h	/^namespace wlpdstm {$/;"	n
wlpdstm	swisstm/src/rw/memory/memory_txend.h	/^namespace wlpdstm {$/;"	n
wlpdstm	swisstm/src/rw/stats.h	/^namespace wlpdstm {$/;"	n
wlpdstm	swisstm/src/rw/transaction.h	/^namespace wlpdstm {$/;"	n
wlpdstm	swisstm/src/stm/constants.h	/^namespace wlpdstm {$/;"	n
wlpdstm	swisstm/src/stm/large_lock_set.h	/^namespace wlpdstm {$/;"	n
wlpdstm	swisstm/src/stm/memory/memory_impl.h	/^namespace wlpdstm {$/;"	n
wlpdstm	swisstm/src/stm/memory/memory_impl_priv.h	/^namespace wlpdstm {$/;"	n
wlpdstm	swisstm/src/stm/privatization_tree.h	/^namespace wlpdstm {$/;"	n
wlpdstm	swisstm/src/stm/profiling.h	/^namespace wlpdstm {$/;"	n
wlpdstm	swisstm/src/stm/stats.h	/^namespace wlpdstm {$/;"	n
wlpdstm	swisstm/src/stm/timestamp.h	/^namespace wlpdstm {$/;"	n
wlpdstm	swisstm/src/stm/transaction.h	/^namespace wlpdstm {$/;"	n
wlpdstm	swisstm/src/stm/transaction_mixinv.h	/^namespace wlpdstm {$/;"	n
wlpdstm	swisstm/src/stm/version_lock.h	/^namespace wlpdstm {$/;"	n
wlpdstm	swisstm/src/stm_api/profiled_transaction.h	/^namespace wlpdstm {$/;"	n
wlpdstm	swisstm/src/stm_api/read_write.h	/^namespace wlpdstm {$/;"	n
wlpdstm	swisstm/src/stm_api/transaction.h	/^namespace wlpdstm {$/;"	n
wlpdstm	swisstm/src/tanger/tanger_stack_area.h	/^namespace wlpdstm {$/;"	n
wlpdstm	swisstm/src/tlrw/cm.h	/^namespace wlpdstm {$/;"	n
wlpdstm	swisstm/src/tlrw/constants.h	/^namespace wlpdstm {$/;"	n
wlpdstm	swisstm/src/tlrw/memory/memory_txend.h	/^namespace wlpdstm {$/;"	n
wlpdstm	swisstm/src/tlrw/stats.h	/^namespace wlpdstm {$/;"	n
wlpdstm	swisstm/src/tlrw/transaction.h	/^namespace wlpdstm {$/;"	n
wlpdstm_abort_tx	swisstm/src/api/wlpdstm.cc	/^void wlpdstm_abort_tx() {$/;"	f	typeref:typename:void
wlpdstm_abort_tx_desc	swisstm/src/api/wlpdstm.cc	/^void wlpdstm_abort_tx_desc(tx_desc *tx) {$/;"	f	typeref:typename:void
wlpdstm_choose_tm	swisstm/src/api/wlpdstm.cc	/^void wlpdstm_choose_tm(Word tm) {$/;"	f	typeref:typename:void
wlpdstm_choose_tm_desc	swisstm/src/api/wlpdstm.cc	/^void wlpdstm_choose_tm_desc(tx_desc *tx, Word tm) {$/;"	f	typeref:typename:void
wlpdstm_commit_tx	swisstm/src/api/wlpdstm.cc	/^void wlpdstm_commit_tx() {$/;"	f	typeref:typename:void
wlpdstm_commit_tx_desc	swisstm/src/api/wlpdstm.cc	/^void wlpdstm_commit_tx_desc(tx_desc *tx) {$/;"	f	typeref:typename:void
wlpdstm_end_thread_profiling	swisstm/src/api/wlpdstm.cc	/^void wlpdstm_end_thread_profiling() {$/;"	f	typeref:typename:void
wlpdstm_end_thread_profiling_desc	swisstm/src/api/wlpdstm.cc	/^void wlpdstm_end_thread_profiling_desc(tx_desc *tx) {$/;"	f	typeref:typename:void
wlpdstm_get_long_jmp_buf	swisstm/src/api/wlpdstm.cc	/^LONG_JMP_BUF *wlpdstm_get_long_jmp_buf() {$/;"	f	typeref:typename:LONG_JMP_BUF *
wlpdstm_get_long_jmp_buf_desc	swisstm/src/api/wlpdstm.cc	/^LONG_JMP_BUF *wlpdstm_get_long_jmp_buf_desc(tx_desc *tx) {$/;"	f	typeref:typename:LONG_JMP_BUF *
wlpdstm_get_tx_desc	swisstm/src/api/wlpdstm.cc	/^tx_desc *wlpdstm_get_tx_desc() {$/;"	f	typeref:typename:tx_desc *
wlpdstm_global_init	swisstm/src/api/wlpdstm.cc	/^void wlpdstm_global_init() {$/;"	f	typeref:typename:void
wlpdstm_global_shutdown	swisstm/src/api/wlpdstm.cc	/^void wlpdstm_global_shutdown() {$/;"	f	typeref:typename:void
wlpdstm_icc_free	swisstm/src/intel/itm.cc	/^	void wlpdstm_icc_free(void *ptr) {$/;"	f	typeref:typename:void
wlpdstm_icc_free	swisstm/src/intel/memory.cc	/^	void wlpdstm_icc_free(void *ptr) {$/;"	f	typeref:typename:void
wlpdstm_icc_malloc	swisstm/src/intel/itm.cc	/^	void *wlpdstm_icc_malloc(size_t size) {$/;"	f	typeref:typename:void *
wlpdstm_icc_malloc	swisstm/src/intel/memory.cc	/^	void *wlpdstm_icc_malloc(size_t size) {$/;"	f	typeref:typename:void *
wlpdstm_log2	swisstm/src/stm/privatization_tree.h	/^inline unsigned wlpdstm::PrivatizationTree::wlpdstm_log2(uint64_t input) {$/;"	f	class:wlpdstm::PrivatizationTree	typeref:typename:unsigned
wlpdstm_malloc_tx_free	swisstm/src/stm_api/wlpdstm_malloc.h	/^void wlpdstm_malloc_tx_free(void *ptr, size_t size) {$/;"	f	typeref:typename:void
wlpdstm_malloc_tx_malloc	swisstm/src/stm_api/wlpdstm_malloc.h	/^void *wlpdstm_malloc_tx_malloc(size_t size) {$/;"	f	typeref:typename:void *
wlpdstm_read_32	swisstm/src/api/wlpdstm.cc	/^uint32_t wlpdstm_read_32(uint32_t *address) {$/;"	f	typeref:typename:uint32_t
wlpdstm_read_32_desc	swisstm/src/api/wlpdstm.cc	/^uint32_t wlpdstm_read_32_desc(tx_desc *tx, uint32_t *address) {$/;"	f	typeref:typename:uint32_t
wlpdstm_read_64	swisstm/src/api/wlpdstm.cc	/^uint64_t wlpdstm_read_64(uint64_t *address) {$/;"	f	typeref:typename:uint64_t
wlpdstm_read_64_desc	swisstm/src/api/wlpdstm.cc	/^uint64_t wlpdstm_read_64_desc(tx_desc *tx, uint64_t *address) {$/;"	f	typeref:typename:uint64_t
wlpdstm_read_double	swisstm/src/api/wlpdstm.cc	/^double wlpdstm_read_double(double *address) {$/;"	f	typeref:typename:double
wlpdstm_read_double_desc	swisstm/src/api/wlpdstm.cc	/^double wlpdstm_read_double_desc(tx_desc *tx, double *address) {$/;"	f	typeref:typename:double
wlpdstm_read_float	swisstm/src/api/wlpdstm.cc	/^float wlpdstm_read_float(float *address) {$/;"	f	typeref:typename:float
wlpdstm_read_float_desc	swisstm/src/api/wlpdstm.cc	/^float wlpdstm_read_float_desc(tx_desc *tx, float *address) {$/;"	f	typeref:typename:float
wlpdstm_read_word	swisstm/src/api/wlpdstm.cc	/^Word wlpdstm_read_word(Word *address) {$/;"	f	typeref:typename:Word
wlpdstm_read_word_desc	swisstm/src/api/wlpdstm.cc	/^Word wlpdstm_read_word_desc(tx_desc *tx, Word *address) {$/;"	f	typeref:typename:Word
wlpdstm_restart_tx	swisstm/src/api/wlpdstm.cc	/^void wlpdstm_restart_tx() {$/;"	f	typeref:typename:void
wlpdstm_restart_tx_desc	swisstm/src/api/wlpdstm.cc	/^void wlpdstm_restart_tx_desc(tx_desc *tx) {$/;"	f	typeref:typename:void
wlpdstm_s_free	swisstm/src/api/wlpdstm.cc	/^void wlpdstm_s_free(void *ptr) {$/;"	f	typeref:typename:void
wlpdstm_s_malloc	swisstm/src/api/wlpdstm.cc	/^void *wlpdstm_s_malloc(size_t size) {$/;"	f	typeref:typename:void *
wlpdstm_start_thread_profiling	swisstm/src/api/wlpdstm.cc	/^void wlpdstm_start_thread_profiling() {$/;"	f	typeref:typename:void
wlpdstm_start_thread_profiling_desc	swisstm/src/api/wlpdstm.cc	/^void wlpdstm_start_thread_profiling_desc(tx_desc *tx) {$/;"	f	typeref:typename:void
wlpdstm_start_tx	swisstm/src/api/wlpdstm.cc	/^void wlpdstm_start_tx() {$/;"	f	typeref:typename:void
wlpdstm_start_tx_desc	swisstm/src/api/wlpdstm.cc	/^void wlpdstm_start_tx_desc(tx_desc *tx) {$/;"	f	typeref:typename:void
wlpdstm_start_tx_id	swisstm/src/api/wlpdstm.cc	/^void wlpdstm_start_tx_id(int lexical_tx_id) {$/;"	f	typeref:typename:void
wlpdstm_start_tx_id_desc	swisstm/src/api/wlpdstm.cc	/^void wlpdstm_start_tx_id_desc(tx_desc *tx, int lexical_tx_id) {$/;"	f	typeref:typename:void
wlpdstm_thread_init	swisstm/src/api/wlpdstm.cc	/^void wlpdstm_thread_init() {$/;"	f	typeref:typename:void
wlpdstm_thread_shutdown	swisstm/src/api/wlpdstm.cc	/^void wlpdstm_thread_shutdown() {$/;"	f	typeref:typename:void
wlpdstm_tx_free	swisstm/src/api/wlpdstm.cc	/^void wlpdstm_tx_free(void *ptr, size_t size) {$/;"	f	typeref:typename:void
wlpdstm_tx_free_desc	swisstm/src/api/wlpdstm.cc	/^void wlpdstm_tx_free_desc(tx_desc *tx, void *ptr, size_t size) {$/;"	f	typeref:typename:void
wlpdstm_tx_malloc	swisstm/src/api/wlpdstm.cc	/^void *wlpdstm_tx_malloc(size_t size) {$/;"	f	typeref:typename:void *
wlpdstm_tx_malloc_desc	swisstm/src/api/wlpdstm.cc	/^void *wlpdstm_tx_malloc_desc(tx_desc *tx, size_t size) {$/;"	f	typeref:typename:void *
wlpdstm_write_32	swisstm/src/api/wlpdstm.cc	/^void wlpdstm_write_32(uint32_t *address, uint32_t value) {$/;"	f	typeref:typename:void
wlpdstm_write_32_desc	swisstm/src/api/wlpdstm.cc	/^void wlpdstm_write_32_desc(tx_desc *tx, uint32_t *address, uint32_t value) {$/;"	f	typeref:typename:void
wlpdstm_write_64	swisstm/src/api/wlpdstm.cc	/^void wlpdstm_write_64(uint64_t *address, uint64_t value) {$/;"	f	typeref:typename:void
wlpdstm_write_64_desc	swisstm/src/api/wlpdstm.cc	/^void wlpdstm_write_64_desc(tx_desc *tx, uint64_t *address, uint64_t value) {$/;"	f	typeref:typename:void
wlpdstm_write_double	swisstm/src/api/wlpdstm.cc	/^void wlpdstm_write_double(double *address, double value) {$/;"	f	typeref:typename:void
wlpdstm_write_double_desc	swisstm/src/api/wlpdstm.cc	/^void wlpdstm_write_double_desc(tx_desc *tx, double *address, double value) {$/;"	f	typeref:typename:void
wlpdstm_write_float	swisstm/src/api/wlpdstm.cc	/^void wlpdstm_write_float(float *address, float value) {$/;"	f	typeref:typename:void
wlpdstm_write_float_desc	swisstm/src/api/wlpdstm.cc	/^void wlpdstm_write_float_desc(tx_desc *tx, float *address, float value) {$/;"	f	typeref:typename:void
wlpdstm_write_word	swisstm/src/api/wlpdstm.cc	/^void wlpdstm_write_word(Word *address, Word value) {$/;"	f	typeref:typename:void
wlpdstm_write_word_desc	swisstm/src/api/wlpdstm.cc	/^void wlpdstm_write_word_desc(tx_desc *tx, Word *address, Word value) {$/;"	f	typeref:typename:void
wlpdstm_write_word_local	swisstm/src/api/wlpdstm.cc	/^void wlpdstm_write_word_local(Word *address, Word value) {$/;"	f	typeref:typename:void
wlpdstm_write_word_local_desc	swisstm/src/api/wlpdstm.cc	/^void wlpdstm_write_word_local_desc(tx_desc *tx, Word *address, Word value) {$/;"	f	typeref:typename:void
word	swisstm/src/common/constants.h	/^		Word word;$/;"	m	union:wlpdstm::word_to_bytes	typeref:typename:Word
word	swisstm/src/epochstm/transaction.h	/^				Word word;$/;"	m	union:wlpdstm::TransactionEpoch::__anon706747f3030a	typeref:typename:Word
word	swisstm/src/p-tlrw/transaction.h	/^			Word word;$/;"	m	union:wlpdstm::TransactionTlrw::__anon7ebeeeb6010a	typeref:typename:Word
word	swisstm/src/tlrw/transaction.h	/^			Word word;$/;"	m	union:wlpdstm::TransactionTlrw::__anoncf01a599010a	typeref:typename:Word
word_to_bytes	swisstm/src/common/constants.h	/^	union word_to_bytes {$/;"	u	namespace:wlpdstm
write16	swisstm/src/stm_api/read_write.h	/^inline void wlpdstm::write16(Transaction *tx, uint16_t *addr, uint16_t val16) {$/;"	f	class:wlpdstm	typeref:typename:void
write16aligned	swisstm/src/stm_api/read_write.h	/^inline void wlpdstm::write16aligned(Transaction *tx, uint16_t *addr, uint16_t val16) {$/;"	f	class:wlpdstm	typeref:typename:void
write32	swisstm/src/stm_api/read_write.h	/^inline void wlpdstm::write32(Transaction *tx, uint32_t *addr, uint32_t val32) {$/;"	f	class:wlpdstm	typeref:typename:void
write32aligned	swisstm/src/stm_api/read_write.h	/^inline void wlpdstm::write32aligned(Transaction *tx, uint32_t *addr, uint32_t val32) {$/;"	f	class:wlpdstm	typeref:typename:void
write64	swisstm/src/stm_api/read_write.h	/^inline void wlpdstm::write64(Transaction *tx, uint64_t *addr, uint64_t val64) {$/;"	f	class:wlpdstm	typeref:typename:void
write64aligned	swisstm/src/stm_api/read_write.h	/^inline void wlpdstm::write64aligned(Transaction *tx, uint64_t *addr, uint64_t val64) {$/;"	f	class:wlpdstm	typeref:typename:void
write8	swisstm/src/stm_api/read_write.h	/^inline void wlpdstm::write8(Transaction *tx, uint8_t *addr, uint8_t val8) {$/;"	f	class:wlpdstm	typeref:typename:void
write8aligned	swisstm/src/stm_api/read_write.h	/^inline void wlpdstm::write8aligned(Transaction *tx, uint8_t *addr, uint8_t val8) {$/;"	f	class:wlpdstm	typeref:typename:void
write_double	swisstm/src/stm_api/read_write.h	/^inline void wlpdstm::write_double(Transaction *tx, double *addr, double vald) {$/;"	f	class:wlpdstm	typeref:typename:void
write_double_aligned	swisstm/src/stm_api/read_write.h	/^inline void wlpdstm::write_double_aligned(Transaction *tx, double *addr, double vald) {$/;"	f	class:wlpdstm	typeref:typename:void
write_float	swisstm/src/stm_api/read_write.h	/^inline void wlpdstm::write_float(Transaction *tx, float *addr, float valf) {$/;"	f	class:wlpdstm	typeref:typename:void
write_float_aligned	swisstm/src/stm_api/read_write.h	/^inline void wlpdstm::write_float_aligned(Transaction *tx, float *addr, float valf) {$/;"	f	class:wlpdstm	typeref:typename:void
write_lock	swisstm/src/dynamic/log.h	/^		WriteLock *write_lock;$/;"	m	struct:wlpdstm::WriteLogEntry	typeref:typename:WriteLock *
write_lock	swisstm/src/p-tlrw/transaction.h	/^			volatile WriteLock write_lock;$/;"	m	struct:wlpdstm::TransactionTlrw::OwnershipRecord	typeref:typename:volatile WriteLock
write_lock	swisstm/src/rw/transaction.h	/^			volatile WriteLock write_lock;$/;"	m	struct:wlpdstm::TransactionRw::OwnershipRecord	typeref:typename:volatile WriteLock
write_lock	swisstm/src/stm/transaction_mixinv.h	/^			WriteLock *write_lock;$/;"	m	struct:wlpdstm::TxMixinv::WriteLogEntry	typeref:typename:WriteLock *
write_lock	swisstm/src/tlrw/transaction.h	/^			volatile WriteLock write_lock;$/;"	m	struct:wlpdstm::TransactionTlrw::OwnershipRecord	typeref:typename:volatile WriteLock
write_log	swisstm/src/dynamic/transaction.h	/^			WriteLog write_log;$/;"	m	class:wlpdstm::TransactionDynamic	typeref:typename:WriteLog
write_log	swisstm/src/epochstm/transaction.h	/^			WriteLog write_log;$/;"	m	class:wlpdstm::TransactionEpoch	typeref:typename:WriteLog
write_log	swisstm/src/p-tlrw/transaction.h	/^			WriteLog write_log;$/;"	m	class:wlpdstm::TransactionTlrw	typeref:typename:WriteLog
write_log	swisstm/src/rw/transaction.h	/^			WriteLog write_log;$/;"	m	class:wlpdstm::TransactionRw	typeref:typename:WriteLog
write_log	swisstm/src/stm/transaction_mixinv.h	/^		WriteLog write_log;$/;"	m	class:wlpdstm::TxMixinv	typeref:typename:WriteLog
write_log	swisstm/src/tlrw/transaction.h	/^			WriteLog write_log;$/;"	m	class:wlpdstm::TransactionTlrw	typeref:typename:WriteLog
write_log_hashtable	swisstm/src/dynamic/transaction.h	/^			WriteLogHashtable write_log_hashtable;$/;"	m	class:wlpdstm::TransactionDynamic	typeref:typename:WriteLogHashtable
write_m128	swisstm/src/stm_api/read_write.h	/^inline void wlpdstm::write_m128(Transaction *tx, __m128 *addr, __m128 val) {$/;"	f	class:wlpdstm	typeref:typename:void
write_region	swisstm/src/stm_api/read_write.h	/^inline void wlpdstm::write_region(Transaction *tx, uint8_t *src, uintptr_t bytes, uint8_t *dest)/;"	f	class:wlpdstm	typeref:typename:void
write_set	swisstm/src/p-tlrw/transaction.h	/^			WriteSet *write_set;$/;"	m	class:wlpdstm::TransactionTlrw	typeref:typename:WriteSet *
write_set	swisstm/src/rw/transaction.h	/^			WriteSet write_set;$/;"	m	class:wlpdstm::TransactionRw	typeref:typename:WriteSet
write_set	swisstm/src/tlrw/transaction.h	/^			WriteSet write_set;$/;"	m	class:wlpdstm::TransactionTlrw	typeref:typename:WriteSet
write_set_array	swisstm/src/p-tlrw/transaction.h	/^			WriteSet write_set_array[MAX_TRANSACTION_COUNT + 1];$/;"	m	class:wlpdstm::TransactionTlrw	typeref:typename:WriteSet[]
write_word_log_mem_pool	swisstm/src/dynamic/log.h	/^		WriteWordLogMemPool write_word_log_mem_pool;$/;"	m	struct:wlpdstm::WriteLog	typeref:typename:WriteWordLogMemPool
write_word_log_mem_pool	swisstm/src/dynamic/transaction.h	/^			WriteWordLogMemPool write_word_log_mem_pool;$/;"	m	class:wlpdstm::TransactionDynamic	typeref:typename:WriteWordLogMemPool
write_word_log_mem_pool	swisstm/src/stm/transaction_mixinv.h	/^		WriteWordLogMemPool write_word_log_mem_pool;$/;"	m	class:wlpdstm::TxMixinv	typeref:typename:WriteWordLogMemPool
writer_locks	rlu.h	/^	volatile writer_locks_t writer_locks;$/;"	m	struct:obj_list	typeref:typename:volatile writer_locks_t
writer_locks	rlu.h	/^typedef struct writer_locks {$/;"	s
writer_locks_t	rlu.h	/^} writer_locks_t;$/;"	t	typeref:struct:writer_locks
writer_version	rlu.h	/^	volatile long writer_version;$/;"	m	struct:rlu_thread_data	typeref:typename:volatile long
ws_cur_id	rlu.h	/^	long ws_cur_id;$/;"	m	struct:rlu_thread_data	typeref:typename:long
ws_head_counter	rlu.h	/^	long ws_head_counter;$/;"	m	struct:rlu_thread_data	typeref:typename:long
ws_tail_counter	rlu.h	/^	long ws_tail_counter;$/;"	m	struct:rlu_thread_data	typeref:typename:long
ws_wb_counter	rlu.h	/^	long ws_wb_counter;$/;"	m	struct:rlu_thread_data	typeref:typename:long
zeta2	zipf/zipf.h	/^	double zeta2;$/;"	m	struct:zipf_state	typeref:typename:double
zetan	zipf/zipf.h	/^	double zetan;$/;"	m	struct:zipf_state	typeref:typename:double
zipf	benchmark_list.h	/^	int zipf;$/;"	m	struct:pthread_data	typeref:typename:int
zipf.o	Makefile	/^zipf.o: zipf\/zipf.c$/;"	t
zipf_disable_hash	zipf/zipf.c	/^void zipf_disable_hash(struct zipf_state *zs)$/;"	f	typeref:typename:void
zipf_dist_val	benchmark_list.h	/^	double zipf_dist_val;$/;"	m	struct:pthread_data	typeref:typename:double
zipf_dist_val	config-list.json	/^                        "zipf_dist_val" : 0,$/;"	n	object:list10k.0
zipf_dist_val	config-list.json	/^                        "zipf_dist_val" : 0,$/;"	n	object:list1k.0
zipf_dist_val	config-list.json	/^                        "zipf_dist_val" : 0,$/;"	n	object:list50k.0
zipf_dist_val	config-tree.json	/^                        "zipf_dist_val" : 0,$/;"	n	object:tree10k.0
zipf_dist_val	config.json	/^                        "zipf_dist_val" : 0,$/;"	n	object:tree10k-aug10.0
zipf_dist_val	list.json	/^                        "zipf_dist_val" : 0,$/;"	n	object:list100k.0
zipf_dist_val	list.json	/^                        "zipf_dist_val" : 0,$/;"	n	object:list10k.0
zipf_dist_val	list.json	/^                        "zipf_dist_val" : 0,$/;"	n	object:list1k.0
zipf_init	zipf/zipf.c	/^void zipf_init(struct zipf_state *zs, unsigned long nranges, double theta,$/;"	f	typeref:typename:void
zipf_next	zipf/zipf.c	/^unsigned long long zipf_next(struct zipf_state *zs)$/;"	f	typeref:typename:unsigned long long
zipf_state	zipf/zipf.h	/^struct zipf_state {$/;"	s
zipf_update	zipf/zipf.c	/^static void zipf_update(struct zipf_state *zs)$/;"	f	typeref:typename:void	file:
